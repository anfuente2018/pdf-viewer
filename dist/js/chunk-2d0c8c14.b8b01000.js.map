{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/build/pdf.worker.js"],"names":["process","Buffer","global","root","factory","module","exports","self","modules","installedModules","__w_pdfjs_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","unreachable","warn","utf8StringToString","stringToUTF8String","stringToPDFString","stringToBytes","string32","shadow","setVerbosityLevel","ReadableStream","removeNullCharacters","readUint32","readUint16","readInt8","log2","isEvalSupported","isLittleEndian","createValidAbsoluteUrl","isSameOrigin","isSpace","isString","isNum","isEmptyObj","isBool","isArrayBuffer","info","getVerbosityLevel","getLookupTableFactory","getInheritableProperty","deprecated","createObjectURL","createPromiseCapability","createBlob","bytesToString","assert","arraysToBytes","arrayByteLength","FormatError","XRefParseException","Util","UnknownErrorException","UnexpectedResponseException","TextRenderingMode","StreamType","PasswordResponses","PasswordException","PageViewport","NotImplementedException","NativeImageDecoding","MissingPDFException","MissingDataException","MessageHandler","InvalidPDFException","AbortException","CMapCompressionType","ImageKind","FontType","AnnotationType","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","UNSUPPORTED_FEATURES","VerbosityLevel","OPS","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","undefined","_typeof","Symbol","iterator","obj","constructor","_streams_polyfill","NONE","DECODE","DISPLAY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","INFOS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","verbosity","level","Number","isInteger","msg","console","log","details","Error","cond","unknown","forms","javaScript","smask","shadingPattern","font","baseUrl","otherUrl","base","URL","origin","e","other","isValidProtocol","url","protocol","absoluteUrl","ex","prop","writable","initializer","lookup","create","NEED_PASSWORD","INCORRECT_PASSWORD","code","this","message","status","begin","end","NullCharactersRegExp","str","replace","bytes","length","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","chunkEnd","Math","min","chunk","subarray","push","join","Uint8Array","charCodeAt","arr","byteLength","item","itemLength","resultLength","ii","pos","data","set","x","ceil","start","offset","buffer8","view32","Uint32Array","buffer","Function","_ref","dict","key","_ref$getArray","getArray","_ref$stopWhenFound","stopWhenFound","LOOP_LIMIT","loopCount","values","rgbBuf","makeCssRgb","r","g","b","m1","m2","applyTransform","xt","yt","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","romanBuf","romanStr","toLowerCase","appendToArray","arr1","arr2","Array","prependToArray","unshift","extendObj","obj1","obj2","inherit","sub","loadScript","src","callback","script","document","createElement","loaded","setAttribute","onload","getElementsByTagName","appendChild","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","width","height","centerX","centerY","abs","fontScale","clone","args","convertToViewportPoint","y","convertToViewportRectangle","tl","br","convertToPdfPoint","PDFStringTranslateTable","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","ch","capability","promise","Promise","resolve","reject","contentType","Blob","type","digits","forceDataSchema","arguments","blob","b1","b2","b3","d1","d2","d3","d4","resolveCall","fn","thisArg","wrapReason","reason","makeReasonSerializable","toString","resolveOrReject","success","finalize","catch","sourceName","targetName","comObj","_this","callbackId","streamId","postMessageTransfers","streamSinks","streamControllers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","isReply","error","action","_sourceName","_targetName","then","postMessage","_createStreamSink","addEventListener","on","actionName","handler","scope","send","transfers","sendWithPromise","sendWithStream","queueingStrategy","_this2","controller","startCapability","startCall","isClosed","desiredSize","pull","pullCapability","pullCall","cancel","cancelCapability","cancelCall","_this3","sendStreamRequest","_ref2","streamSink","enqueue","size","isCancelled","lastDesiredSize","sinkCapability","ready","close","onPull","onCancel","_this4","sendStreamResponse","_ref3","deleteStreamController","all","map","destroy","removeEventListener","EOF","Name","nameCache","nameValue","Cmd","cmd","cmdCache","cmdValue","Dict","nonSerializable","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","isArray","isRef","fetch","getRaw","getKeys","keys","has","forEach","empty","merge","dictArray","mergedDict","isDict","keyName","Ref","num","gen","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","clear","isEOF","isName","isCmd","isRefsEqual","v1","v2","isStream","getBytes","store","uid","_Symbol","USE_SYMBOL","$exports","it","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","arrayBuffer","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","skip","reset","moveStart","makeSubStream","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","getBaseStreams","streams","shift","newLength","baseStreams","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","codeSize","codeBuf","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","j","kk","prevRow","up","upLeft","left","pa","pb","pc","decrypt","nextChunk","initialized","chunkSize","hasMoreData","input","TILDA_CHAR","Z_LOWER_CHAR","firstDigit","UPSTREAM_BLOCK_SIZE","maxDecodeLength","digit","repeatHeader","source","earlyChange","cachedData","bitsCached","maxLzwDictionarySize","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","blockSize","estimatedDecodedSize","decodedSizeDelta","prevCode","decodedLength","currentBufferLength","hasPrev","core","hide","redefine","ctx","PROTOTYPE","$export","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","target","expProto","U","W","R","window","__g","version","__e","isObject","TypeError","SRC","TO_STRING","$toString","TPL","split","inspectSource","O","safe","isFunction","aFunction","that","dP","createDesc","f","exec","anObject","IE8_DOM_DEFINE","toPrimitive","Attributes","IObject","defined","ColorSpace","resizeRgbImage","bpc","w1","h1","w2","h2","alpha01","dest","COMPONENTS","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","floor","getRgb","srcOffset","rgb","getRgbItem","destOffset","getRgbBuffer","count","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","comps","numComponentColors","needsResizing","numComps","allColors","destPos","rgbPos","colorMap","usesZeroToOneRange","parse","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","colorSpaces","resCS","mode","altIR","altCS","createIR","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","Float32Array","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","A","AG","pow","L","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","convertToFlat","sourceWhitePoint","LMS","convertToD65","D65X","D65Y","D65Z","sRGBTransferFunction","color","adjustToRange","decodeL","compensateBlackPoint","sourceBlackPoint","XYZ_Flat","zeroDecodeL","X_DST","X_SRC","Y_DST","Y_SRC","Z_DST","Z_SRC","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","normalizeWhitePointToFlat","XYZ_In","LMS_Flat","normalizeWhitePointToD65","LMS_D65","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Black","XYZ_D65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","id","px","random","concat","$keys","enumBugKeys","def","TAG","tag","stat","isArrayIter","toLength","getIterFn","BREAK","RETURN","_exports","iterable","entries","ITERATOR","step","iterFn","index","next","done","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","MAX_LENGTH_TO_CACHE","MAX_ADLER32_LENGTH","computeAdler32","bytesLength","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","array","makeStream","decryptString","findDefaultInlineStreamEnd","E","I","SPACE","LF","CR","NUL","startPos","state","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","TILDE","GT","findASCIIHexDecodeInlineStreamEnd","dictLength","beginInlineImagePos","filterName","filter","filterZero","imageStream","cacheKey","imageBytes","initialStreamPos","dictBytes","cacheEntry","createStream","skipToNextLine","nextChar","SCAN_BLOCK_SIZE","ENDSTREAM_SIGNATURE_LENGTH","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","JpegStream","JpxStream","CCITTFaxStream","Jbig2Stream","knownCommands","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","getHints","hintsLength","hints","parser","obj3","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","is","bitmap","cof","propertyIsEnumerable","toInteger","isNaN","ARG","tryGet","T","callee","shared","Constructor","forbiddenField","PromiseCapability","$$resolve","$$reject","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","KEY","_jpg","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","drawWidth","drawHeight","getIR","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","handlePaintSolidColorImageMask","iFirstSave","fnArray","argsArray","iFirstPIMXO","arg","imageMask","InitialState","queue","context","iCurr","match","lastProcessed","MIN_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_WIDTH","IMAGE_PADDING","curr","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","img","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","splice","kind","MIN_IMAGES_IN_MASKS_BLOCK","MAX_IMAGES_IN_MASKS_BLOCK","MAX_SAME_IMAGES_IN_MASKS_BLOCK","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","iFirstPIXO","firstPIXOArg0","MIN_IMAGES_IN_BLOCK","MAX_IMAGES_IN_BLOCK","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","MIN_CHARS_IN_BLOCK","MAX_CHARS_IN_BLOCK","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","iterate","flush","NullOptimizer","CHUNK_SIZE","CHUNK_SIZE_ABOUT","getTransfers","cached","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","addDependency","addDependencies","addOpList","opList","lastChunk","operatorList","getGlyphsUnicode","getDingbatsGlyphsUnicode","valueOf","SHARED","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","UNSCOPABLES","ArrayProto","classof","test","LIBRARY","Iterators","$iterCreate","setToStringTag","getPrototypeOf","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","documentElement","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","SPECIES","D","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","ONREADYSTATECHANGE","run","listener","nextTick","now","port2","port1","onmessage","importScripts","removeChild","setTimeout","newPromiseCapability","promiseCapability","SAFE_CLOSING","riter","from","skipClosing","iter","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","callbackfn","_t","ChunkedStreamManager","ChunkedStream","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","readChunk","read","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","includes","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","items","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","nameTree","NameTree","names","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","numberTree","NumberTree","nums","currentLabel","currentIndex","labelDict","st","LIMIT","A_UPPER_CASE","A_LOWER_CASE","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","cleanup","promises","translatedFonts","translated","getPage","getPageDict","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","kids","last","getPageIndex","pageRef","pagesBeforeRef","kidRef","parentRef","node","kidPromises","kid","addDefaultProtocolToUrl","indexOf","tryConvertUrlEncoding","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","URL_OPEN_METHODS","regex","RegExp","jsUrl","href","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","TAB","PERCENT","LT","readToken","token","skipUntil","dataLength","objRegExp","endobjRegExp","nestedObjRegExp","CHECK_CONTENT_LENGTH","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","contentLength","endPos","checkPos","tokenStr","objToken","content","xrefTagOffset","startXRefParsedCache","topDict","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","parseInt","substring","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","MAX_LEVELS","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","CCITTFaxDecoder","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","options","encoding","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","readNextChar","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","componentsCount","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pi","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","currentTile","layersCount","codingStyleDefaultParameters","maxDecompositionLevelsCount","decompositionLevelsCount","nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","buildPackets","blocksDimensions","bscale","resolutionSubbands","progressionOrder","packetsIterator","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","valueReady","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","calculate","top","transformComponents","resultImages","transformedTiles","y2","tile0","Uint8ClampedArray","multipleComponentTransform","fourComponents","y0items","y1items","y2items","y3items","component0","initializeTile","qcdOrQcc","QCC","QCD","COC","head","headerSize","lbox","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","oldByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i0","i1","contextLabel","decision","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","significance","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","symbol","Transform","u0","v0","ll","extend","j1","j2","hl_lh_hh","u","llWidth","llHeight","llItems","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","K_","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_classCallCheck","instance","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","hash","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","littleSigmaPrime","h4","h5","h6","h7","t1","t2","mode384","tmp3","tmp1","NullCipher","AESBaseCipher","_inv_s","_mix","_mixCol","bufferPosition","cipherKey","_keySize","_cyclesOfRepetition","_j","_j2","_k","_j3","s0","s1","s2","s3","_j4","_j5","_j6","_j7","_j8","_j9","_k2","sourceLength","iv","plain","_decrypt","_key","outputLength","lastBlock","psLen","_j10","_decryptBlock2","cipher","_encrypt","_i3","_j11","_AESBaseCipher","_rcon","_expandKey","rcon","t3","t4","_AESBaseCipher2","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","defaultPasswordBytes","createEncryptionKey20","revision","uBytes","perms","passwordLength","pdfAlgorithm","prepareKeyData","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","decodeUserPassword","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","decodedPassword","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","MAX_SUBR_NESTING","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","major","minor","hdrSize","offSize","parseOperand","parseFloatOperand","NaN","parseFloat","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","valid","firstStackClearing","charstring","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","readSupplement","supplementsCount","sid","baseEncoding","dataStart","glyphsCount","rangesCount","gid","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","getSpecialPUASymbols","mapSpecialUnicodeValues","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","UnicodeRanges","getUnicodeRangeFor","isRTLRangeFor","getNormalizedUnicodes","reverseIfRtl","chars","charsLength","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","PDFFunction","fnObj","parseArray","CONSTRUCT_SAMPLED","CONSTRUCT_INTERPOLATED","CONSTRUCT_STICHED","CONSTRUCT_POSTSCRIPT","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","constructSampled","constructInterpolated","constructStiched","constructPostScript","typeNum","typeFn","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","samples","_ref7","interpolate","xmin","xmax","ymin","ymax","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","xi","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","bounds","_ref11","fnsIR","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","numOutputs","numInputs","evaluator","MAX_CACHE_SIZE","cache_available","cachedValue","execute","stackIndex","bound","fnDict","PostScriptStack","MAX_STACK_SIZE","initialStack","copy","roll","operators","operator","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","_pdf_manager","_is_node","_is_node2","_interopRequireDefault","default","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","readers","headersReady","setup","testMessageProcessed","supportTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","workerVersion","docId","workerHandlerName","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","flushChunks","pdfFile","readPromise","setupDoc","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","requestLoadedStream","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","catalog","pdfDocument","ensureCatalog","pageNum","Date","getOperatorList","renderInteractiveForms","featureId","wrappedException","minimumStackMessage","sink","extractTextContent","normalizeWhitespace","combineTextItems","waitOn","initializeFromPort","isMessagePort","maybePort","globalScope","_pdfjsCompatibilityChecked","isNodeJS","hasDOM","btoa","atob","scripts","Element","parentNode","WeakMap","hasWorkingUrl","pathname","relative","relativePathDotMapping","ALPHA","ALPHANUMERIC","JURL","_isInvalid","_url","authority","_username","_password","_isRelative","host","_query","_fragment","_scheme","_port","_host","hostname","_path","_schemeData","search","_","OriginalURL","revokeObjectURL","isRelativeScheme","scheme","invalid","IDNAToASCII","percentEscape","percentEscapeQuery","stateOverride","errors","cursor","seenAt","seenBracket","loop","nextC","nextNextC","cp","tempC","temp","INCLUDES","searchString","isRegExp","MATCH","re","$includes","LN2","isFinite","$at","iterated","point","dPs","IE_PROTO","Empty","_createDict","iframeDocument","iframe","lt","gt","display","contentWindow","open","write","Properties","arrayIndexOf","ObjectProto","addToUnscopables","Arguments","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","promiseResolve","PROMISE","$Promise","isNode","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","chain","_c","_v","ok","reaction","exited","fail","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","wrapper","executor","onFulfilled","onRejected","remaining","$index","alreadyCalled","race","ret","getIteratorMethod","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","navigator","standalone","toggle","createTextNode","observe","characterData","DESCRIPTORS","finally","onFinally","try","InternalMap","each","weak","fails","validate","WEAK_MAP","uncaughtFrozenStore","ufstore","$WeakMap","freeze","getConstructor","_f","original","gOPS","pIE","$assign","aLen","getSymbols","isEnum","getOwnPropertySymbols","redefineAll","createArrayMethod","$has","arrayFind","arrayFindIndex","_l","UncaughtFrozenStore","findUncaughtFrozen","delete","ADDER","$iterDetect","inheritIfRequired","common","IS_WEAK","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","buggy","gOPD","getOwnPropertyDescriptor","COLLECTION","of","mapping","cb","mapFn","nextItem","$values","isEntries","isReadableStreamSupported","_typeof2","_require","IsPropertyKey","argument","Call","V","typeIsObject","createDataProperty","createArrayFromList","elements","ArrayBufferCopy","CreateIterResultObject","IsFiniteNonNegativeNumber","Infinity","InvokeOrNoop","PromiseInvokeOrNoop","returnValueE","PromiseInvokeOrPerformFallback","argsF","methodE","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","highWaterMark","RangeError","ValidateAndNormalizeQueuingStrategy","rethrowAssertionErrorRejection","AssertionError","_require2","_require3","DequeueValue","EnqueueValueWithSize","PeekQueueValue","ResetQueue","WritableStream","underlyingSink","_ref$highWaterMark","_state","_storedError","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","WritableStreamDefaultController","__startSteps","IsWritableStream","streamBrandCheckException","IsWritableStreamLocked","WritableStreamAbort","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamAddWriteRequest","writeRequest","WritableStreamDealWithRejection","WritableStreamFinishErroring","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","__errorSteps","storedError","abortRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","__abortSteps","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamFinishInFlightClose","defaultWriterClosedPromiseResolve","WritableStreamFinishInFlightCloseWithError","WritableStreamCloseQueuedOrInFlight","WritableStreamMarkCloseRequestInFlight","WritableStreamMarkFirstWriteRequestInFlight","defaultWriterClosedPromiseReject","_closedPromise","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","WritableStreamDefaultControllerError","WritableStreamDefaultWriterCloseWithErrorPropagation","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","_ownerWritableStream","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","_readyPromise","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterGetDesiredSize","closeRequest","WritableStreamDefaultControllerClose","WritableStreamDefaultWriterEnsureClosedPromiseRejected","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","WritableStreamDefaultControllerGetDesiredSize","releasedError","WritableStreamDefaultControllerGetChunkSize","WritableStreamDefaultControllerWrite","_controlledWritableStream","_underlyingSink","_queue","_queueTotalSize","normalizedStrategy","_strategySize","_strategyHWM","WritableStreamDefaultControllerGetBackpressure","IsWritableStreamDefaultController","startResult","WritableStreamDefaultControllerAdvanceQueueIfNeeded","strategySize","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","writeRecord","enqueueE","WritableStreamDefaultControllerProcessClose","WritableStreamDefaultControllerProcessWrite","sinkClosePromise","sinkWritePromise","_closedPromise_resolve","_closedPromise_reject","_readyPromise_resolve","_readyPromise_reject","container","_require4","_require5","underlyingSource","_disturbed","_readableStreamController","typeString","ReadableByteStreamController","ReadableStreamDefaultController","IsReadableStream","IsReadableStreamLocked","ReadableStreamCancel","AcquireReadableStreamDefaultReader","AcquireReadableStreamBYOBReader","readable","pipeTo","ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue","preventClose","preventAbort","preventCancel","Boolean","shuttingDown","currentWrite","pipeLoop","ReadableStreamDefaultReaderRead","isOrBecomesErrored","shutdownWithAction","shutdown","isOrBecomesClosed","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","newError","isError","ReadableStreamReaderGenericRelease","branches","ReadableStreamTee","ReadableStreamBYOBReader","ReadableStreamDefaultReader","IsReadableStreamDisturbed","cloneForBranch2","teeState","closedOrErrored","canceled1","canceled2","reason1","reason2","create_ReadableStreamTeePullFunction","_teeState","_cloneForBranch2","cancel1","create_ReadableStreamTeeBranch1CancelFunction","cancel2","create_ReadableStreamTeeBranch2CancelFunction","underlyingSource1","branch1Stream","underlyingSource2","branch2Stream","_branch1","_branch2","ReadableStreamDefaultControllerError","branch1","branch2","ReadableStreamDefaultControllerClose","value1","value2","ReadableStreamDefaultControllerEnqueue","compositeReason","cancelResult","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","readIntoRequest","_readIntoRequests","ReadableStreamAddReadRequest","IsReadableStreamDefaultReader","readRequest","_readRequests","ReadableStreamClose","sourceCancelPromise","__cancelSteps","defaultReaderClosedPromiseResolve","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadIntoRequest","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","ReadableStreamHasDefaultReader","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamReaderGenericInitialize","defaultReaderBrandCheckException","_ownerReadableStream","readerLockException","ReadableStreamReaderGenericCancel","IsReadableByteStreamController","byobReaderBrandCheckException","ArrayBuffer","isView","ReadableStreamBYOBReaderRead","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","defaultReaderClosedPromiseResetToRejected","ReadableByteStreamControllerPullInto","__pullSteps","_controlledReadableStream","_underlyingSource","_closeRequested","_pullAgain","_pulling","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerErrorIfNeeded","IsReadableStreamDefaultController","defaultControllerBrandCheckException","pendingPromise","shouldPull","ReadableStreamDefaultControllerShouldCallPull","pullPromise","ReadableStreamBYOBRequest","_associatedReadableByteStreamController","_view","bytesWritten","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","ReadableByteStreamControllerRespond","ReadableByteStreamControllerRespondWithNewView","underlyingByteSource","_underlyingByteSource","ReadableByteStreamControllerClearPendingPullIntos","autoAllocateChunkSize","_autoAllocateChunkSize","_pendingPullIntos","ReadableByteStreamControllerCallPullIfNeeded","ReadableByteStreamControllerError","byteStreamControllerBrandCheckException","ReadableByteStreamControllerClose","ReadableByteStreamControllerEnqueue","firstDescriptor","bytesFilled","ReadableByteStreamControllerHandleQueueDrain","byteOffset","viewE","bufferE","pullIntoDescriptor","elementSize","ctor","readerType","_byobRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerShouldCallPull","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","DataView","BYTES_PER_ELEMENT","emptyView","ReadableByteStreamControllerRespondInClosedState","ReadableByteStreamControllerRespondInReadableState","remainderSize","ReadableByteStreamControllerRespondInternal","firstPendingPullInto","transferredBuffer","transferredView","transformStream","writableStream","TransformStream","TransformStreamCloseReadable","_errored","_readableClosed","TransformStreamCloseReadableInternal","TransformStreamEnqueueToReadable","_readableController","TransformStreamErrorIfNeeded","maybeBackpressure","TransformStreamSetBackpressure","TransformStreamError","TransformStreamErrorInternal","_writableDone","_writableController","TransformStreamReadableReadyPromise","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamDefaultTransform","transformStreamController","_controlledTransformStream","TransformStreamTransform","_transforming","transformer","_transformer","_transformStreamController","transformPromise","IsTransformStreamDefaultController","IsTransformStream","TransformStreamSink","startPromise","_transformStream","_startPromise","flushPromise","TransformStreamSource","TransformStreamDefaultController","readableController","readableStrategy","writableStrategy","startPromise_resolve","_readable","_writable","_document","BasePdfManager","_docId","_docBaseUrl","ensureXRef","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","DEFAULT_USER_UNIT","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","_getInheritableProperty","resources","mediaBox","cropBox","intersection","getContentStream","loadResources","objectLoader","contentStreamPromise","partialEvaluator","PartialEvaluator","dataPromises","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","FINGERPRINT_FIRST_BYTES","EMPTY_FINGERPRINT","find","needle","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","MAX_VERSION_LENGTH","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","_ccitt","ccittFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmapTemplate0","decodingContext","pixel","row1","row2","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","at","Reader","decodeMMRBitmap","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","sltp","decodeRefinement","referenceBitmap","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","huffmanInput","newSymbols","currentHeight","symbolCodeLength","tableB1","symbolWidths","getStandardTable","deltaHeight","tableDeltaHeight","currentWidth","totalWidth","firstSymbol","deltaWidth","tableDeltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","bitmapSize","tableBitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","bitmapWidth","symbolBitmap","exportedSymbols","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","logStripSize","stripT","tableDeltaT","firstS","deltaT","deltaFirstS","tableFirstS","currentS","currentT","symbolIDTable","applyRefinement","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","decodePatternDictionary","patternWidth","patternHeight","maxPatternIndex","collectiveWidth","patterns","patternBitmap","decodeHalftoneRegion","regionWidth","regionHeight","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","halftoneRegion","halftoneRegionFlags","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","decodeTablesSegment","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","getSymbolDictionaryHuffmanTables","customTables","referredSymbols","onImmediateTextRegion","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","onImmediateHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","getCustomHuffmanTable","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","customIndex","tableAggregateInstances","endOfBlock","lookForEOFLimit","numBits","JpegError","DNLMarkerError","scanLines","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","huffmanTableDC","blockData","pred","rs","huffmanTableAC","decodeDCFirst","decodeDCSuccessive","eobrun","decodeACFirst","successiveACNextValue","successiveACState","decodeACSuccessive","offsetZ","decodeMcu","mcu","mcuRow","mcuCol","blockRow","blockCol","decodeBlock","decodeFn","componentsLength","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","_ref$dnlScanLines","dnlScanLines","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","nextFileMarker","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","mask3LSB","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","receiver","desc","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","getTransformMatrix","bbox","maxY","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","flag","_hasFlag","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","_isViewable","_isPrintable","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","element","validNumber","radius","_Annotation","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","comb","_WidgetAnnotation2","checkBox","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","multiSelect","_Annotation2","DEFAULT_ICON_SIZE","_this6","_preparePopup","_Annotation3","_this7","_Annotation4","_this8","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","lineCoordinates","_Annotation6","_this10","_Annotation7","_this11","_Annotation8","_this12","rawVertices","vertices","_PolylineAnnotation","_this13","_Annotation9","_this14","_Annotation10","_this15","_Annotation11","_this16","_Annotation12","_this17","_Annotation13","_this18","_Annotation14","_this19","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoder","_ref$forceDataSchema","_ref3$options","fetchBuiltInCMap","cachedCMap","compressionType","canDecode","image","isDecodable","colorSpace","isSupported","TIME_SLOT_DURATION_MS","CHECK_TIME_EVERY","TimeSlotManager","normalizeBlendMode","checked","endTime","deferred","TILING_PATTERN","SHADING_PATTERN","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","graphicState","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","buildPaintImageXObject","_ref4$isInline","isInline","_ref4$forceDisableNat","forceDisableNativeImageDecoder","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","SMALL_IMAGE_DIMENSIONS","imageObj","createImageData","nativeImageDecoder","buildImage","nativeDecoder","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","gStateObj","gStateKeys","_loop","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translateFont","translatedFont","fontType","xrefFontStats","fontFile3","getFontType","lastIndex","opArgs","handleColorN","patternName","shading","Pattern","parseShading","_ref5$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","savedStatesDepth","promiseBody","stop","resolveXObject","rejectXObject","fontSize","combinedGlyphs","arrLength","arrItem","strokeColorSpace","shadingRes","patternIR","dictName","extGState","_ref6$stateManager","_ref6$normalizeWhites","_ref6$combineTextItem","_ref6$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","replaceWhitespace","runBidiTransform","textChunk","bidiResult","bidi","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","w0","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","monospace","stdFontMap","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","getOPMap","numArgs","variableArgs","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","processBinaryCMap","readByte","sequence","dataSize","ucs2DataSize","subitemsCount","readNumber","readHex","readHexNumber","readSigned","readHexSigned","readString","sp","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embeddedUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","adjustToUnicode","builtInEncoding","amend","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","OTF_HEADER_SIZE","OTF_TABLE_ENTRY_SIZE","toArray","tablesNames","tableName","numTables","tableOffsets","searchParams","checksum","quad","addTable","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","int16","writeSignedInt16","signedInt16","int32","string16","safeString16","isTrueTypeCollectionFile","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","getRanges","numGlyphs","codeIndices","createCmapTable","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","startCode","format314","format31012","header31012","validateOS2Table","os2","selection","usWinAscent","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","nameRecord","ID","FontRendererFactory","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","VALID_TABLES","readTables","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","readTrueTypeCollectionHeader","ttc","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionData","_readTrueTypeCollecti","potentialHeader","potentialTables","readNameTable","nameEntry","readCmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","sanitizeMetrics","numOfMetrics","numOfSidebearings","numMissing","sanitizeGlyph","sourceStart","sourceEnd","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","endPoint","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","sanitizeHead","locaLength","indexToLocFormat","numGlyphsPlusOne","sanitizeGlyphLocations","loca","isGlyphLocationsLong","dupFirstEntry","maxSizeOfInstructions","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","readPostScriptTable","post","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","FORMAT_0_HEADER_LENGTH","numRecords","stringsStart","records","NAME_RECORD_LENGTH","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","foldTTTable","checkInvalidFunctions","maxFunctionDefs","sanitizeTTPrograms","fpgm","prep","cvt","cvtData","ttcData","cffFile","isTrueType","maxZones","glyphsInfo","metricsOverride","hasGlyph","isCidToGidMapEmpty","cmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","compiler","namePrototype","builder","tableTag","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","getHeaderBlock","suggestedLength","headerBytes","headerBytesLength","block","EEXEC_SIGNATURE","streamStartPos","actualLength","SCAN_BLOCK_LENGTH","getEexecBlock","eexecBytes","PFB_HEADER_SIZE","headerBlockLength","eexecBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","headerBlockParser","Type1Parser","extractFontHeader","eexecBlock","eexecBlockParser","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","userAgent","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","isCFFCIDFont","parseGlyfTable","lookupCmap","compileGlyf","cmds","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","instructionLength","numberOfPoints","points","startPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","y3","subrCode","stackClean","numSubrs","subrsBias","achar","bchar","glyphNameMap","gsubrsBias","noop","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","compileGlyph","compileGlyphImpl","HINTING_ENABLED","Type1CharString","COMMAND_MAP","hstem","vstem","vmoveto","rlineto","hlineto","vlineto","rrcurveto","callsubr","flex","drop","endchar","rmoveto","hmoveto","vhcurveto","hvcurveto","lsb","flexing","encoded","wx","sbx","executeCommand","dy","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","CHAR_STRS_ENCRYPT_KEY","isHexDigit","discardNumber","c2","decrypted","decryptAscii","digit1","digit2","isSpecial","encrypted","isBinary","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","Shadings","RadialAxial","Mesh","Dummy","xstep","ystep","paintType","tilingType","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","decodeType4Shading","mesh","coords","ps","verticesLeft","hasData","readFlag","coord","readCoordinate","readComponents","align","figures","decodeType5Shading","verticesPerRow","bitsPerFlag","bitsPerCoordinate","yi","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","buildB","lut","t_","buildFigureFromPatch","figure","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","figureCoords","figureColors","cl","cr","c3","bRow","bCol","newColor","decodeType6Shading","tmp4","decodeType7Shading","updateBounds","packData","coordsPacked","xy","colorsPacked","decodeContext","patchMesh","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","seed","MASK_HIGH","MASK_LOW","SEED","blockCounts","tailLength","dataUint32","k2","C1","C2","C1_LOW","C2_LOW","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","maskDict","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","haveFullData","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","imageLength","maybeUndoPreblend"],"mappings":"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kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,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A,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eAEAlsB,EAAA8xC,mBACA9xC,EAAA+xC,4BAIA,SAAAhyC,EAAAC,EAAAI,GAEA,aAGA,IAAA4F,EAAA,oBAAAC,QAAA,kBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,oBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAzE,UAAA,gBAAA2E,GAE5IpG,EAAAC,QAAA,WACA,uCAAAN,EAAA,YAAAsG,EAAAtG,OAAA,0BAKA,SAAAK,EAAAC,EAAAI,GAEA,aAGAL,EAAAC,SAAAI,EAAA,MAAAA,EAAA,GAAAA,CAAA,WACA,OAIG,GAJHW,OAAAC,eAAAZ,EAAA,GAAAA,CAAA,YACAe,IAAA,WACA,YAEG+X,KAKH,SAAAnZ,EAAAC,EAAAI,GAEA,aAGA,IAAA6yB,EAAA7yB,EAAA,GACAL,EAAAC,QAAA,SAAA8nB,EAAAqK,GACA,IAAAc,EAAAnL,GAAA,OAAAA,EACA,IAAA1I,EAAA4M,EACA,GAAAmG,GAAA,mBAAA/S,EAAA0I,EAAArI,YAAAwT,EAAAjH,EAAA5M,EAAA5e,KAAAsnB,IAAA,OAAAkE,EACA,sBAAA5M,EAAA0I,EAAAkqB,WAAA/e,EAAAjH,EAAA5M,EAAA5e,KAAAsnB,IAAA,OAAAkE,EACA,IAAAmG,GAAA,mBAAA/S,EAAA0I,EAAArI,YAAAwT,EAAAjH,EAAA5M,EAAA5e,KAAAsnB,IAAA,OAAAkE,EACA,MAAAkH,UAAA,6CAKA,SAAAnzB,EAAAC,EAAAI,GAEA,aAGA,IAAAR,EAAAQ,EAAA,GACA6xC,EAAA,qBACAxqB,EAAA7nB,EAAAqyC,KAAAryC,EAAAqyC,OACAlyC,EAAAC,QAAA,SAAAmX,GACA,OAAAsQ,EAAAtQ,KAAAsQ,EAAAtQ,SAKA,SAAApX,EAAAC,EAAAI,GAEA,aAGA,IAAA8xC,EAAA9xC,EAAA,IACAkhC,EAAAlhC,EAAA,IACA+xC,EAAA/xC,EAAA,IACAL,EAAAC,QAAA,SAAAoyC,GACA,gBAAAC,EAAAC,EAAAC,GACA,IAGA3wC,EAHA6xB,EAAAye,EAAAG,GACAr9B,EAAAssB,EAAA7N,EAAAze,QACAgtB,EAAAmQ,EAAAI,EAAAv9B,GAEA,GAAAo9B,GAAAE,MAAA,MAAAt9B,EAAAgtB,EAEA,GADApgC,EAAA6xB,EAAAuO,KACApgC,KAAA,cACK,KAAYoT,EAAAgtB,EAAgBA,IACjC,IAAAoQ,GAAApQ,KAAAvO,IACAA,EAAAuO,KAAAsQ,EAAA,OAAAF,GAAApQ,GAAA,EAEK,OAAAoQ,IAAA,KAML,SAAAryC,EAAAC,EAAAI,GAEA,aAGA,IAAAoyC,EAAApyC,EAAA,EAAAA,CAAA,eACAqyC,EAAA73B,MAAApZ,eACAuE,GAAA0sC,EAAAD,IAAApyC,EAAA,GAAAA,CAAAqyC,EAAAD,MACAzyC,EAAAC,QAAA,SAAAmX,GACAs7B,EAAAD,GAAAr7B,IAAA,IAKA,SAAApX,EAAAC,EAAAI,GAEA,aAGA,IAAAsyC,EAAAtyC,EAAA,IACAuyC,KACAA,EAAAvyC,EAAA,EAAAA,CAAA,oBACAuyC,EAAA,kBACAvyC,EAAA,EAAAA,CAAAW,OAAAS,UAAA,sBACA,iBAAAkxC,EAAAn+B,MAAA,MACG,IAKH,SAAAxU,EAAAC,EAAAI,GAEA,aAGA,IAAAwyC,EAAAxyC,EAAA,IACAsxB,EAAAtxB,EAAA,GACAmxB,EAAAnxB,EAAA,GACAkxB,EAAAlxB,EAAA,IACAyyC,EAAAzyC,EAAA,IACA0yC,EAAA1yC,EAAA,IACA2yC,EAAA3yC,EAAA,IACA4yC,EAAA5yC,EAAA,IACAyhC,EAAAzhC,EAAA,EAAAA,CAAA,YACA6yC,OAAAptB,MAAA,WAAAA,QACAqtB,EAAA,aACAC,EAAA,OACAC,EAAA,SACAC,EAAA,WACA,OAAA9+B,MAEAxU,EAAAC,QAAA,SAAAszC,EAAAC,EAAAvJ,EAAA/H,EAAAuR,EAAAC,EAAAC,GACAZ,EAAA9I,EAAAuJ,EAAAtR,GACA,IAwBA0R,EAAAx8B,EAAAy8B,EAxBAC,EAAA,SAAAnF,GACA,IAAAuE,GAAAvE,KAAAoF,EAAA,OAAAA,EAAApF,GACA,OAAAA,GACA,KAAAyE,EACA,kBACA,WAAAnJ,EAAAz1B,KAAAm6B,IAEA,KAAA0E,EACA,kBACA,WAAApJ,EAAAz1B,KAAAm6B,IAGA,kBACA,WAAA1E,EAAAz1B,KAAAm6B,KAGAxN,EAAAqS,EAAA,YACAQ,EAAAP,GAAAJ,EACAY,GAAA,EACAF,EAAAR,EAAA9xC,UACAyyC,EAAAH,EAAAjS,IAAAiS,EAAAZ,IAAAM,GAAAM,EAAAN,GACAU,EAAAD,GAAAJ,EAAAL,GACAW,EAAAX,EAAAO,EAAAF,EAAA,WAAAK,OAAAnuC,EACAquC,EAAA,SAAAb,GAAAO,EAAAlS,SAAAqS,EAoBA,GAlBAG,IACAR,EAAAZ,EAAAoB,EAAA5zC,KAAA,IAAA8yC,IACAM,IAAA7yC,OAAAS,WAAAoyC,EAAA3R,OACA8Q,EAAAa,EAAA1S,GAAA,GACA0R,GAAA,mBAAAgB,EAAA/R,IAAAvQ,EAAAsiB,EAAA/R,EAAAwR,KAGAU,GAAAE,KAAArzC,OAAAwyC,IACAY,GAAA,EACAE,EAAA,WACA,OAAAD,EAAAzzC,KAAA+T,QAGAq+B,IAAAc,IAAAT,IAAAe,GAAAF,EAAAjS,IACAvQ,EAAAwiB,EAAAjS,EAAAqS,GAEArB,EAAAU,GAAAW,EACArB,EAAA3R,GAAAmS,EACAG,EAMA,GALAG,GACAj8B,OAAAq8B,EAAAG,EAAAL,EAAAT,GACAvtB,KAAA4tB,EAAAS,EAAAL,EAAAV,GACAvR,QAAAuS,GAEAT,EAAA,IAAAv8B,KAAAw8B,EACAx8B,KAAA28B,GAAAviB,EAAAuiB,EAAA38B,EAAAw8B,EAAAx8B,SACKua,IAAAW,EAAAX,EAAAK,GAAAkhB,GAAAe,GAAAT,EAAAI,GAEL,OAAAA,IAKA,SAAA5zC,EAAAC,EAAAI,GAEA,aAGAL,EAAAC,SAAA,GAIA,SAAAD,EAAAC,EAAAI,GAEA,aAGAL,EAAAC,QAAA,gGAAAuzB,MAAA,MAIA,SAAAxzB,EAAAC,EAAAI,GAEA,aAGA,IAAAob,EAAApb,EAAA,GAAAob,SACAzb,EAAAC,QAAAwb,KAAA64B,iBAIA,SAAAt0C,EAAAC,EAAAI,GAEA,aA8CA,IA3CA,IAAAk0C,EAAAl0C,EAAA,KACAwlB,EAAAxlB,EAAA,IACAmxB,EAAAnxB,EAAA,GACAR,EAAAQ,EAAA,GACAkxB,EAAAlxB,EAAA,IACAyyC,EAAAzyC,EAAA,IACAm0C,EAAAn0C,EAAA,GACAyhC,EAAA0S,EAAA,YACAC,EAAAD,EAAA,eACAE,EAAA5B,EAAAj4B,MACA85B,GACAC,aAAA,EACAC,qBAAA,EACAC,cAAA,EACAC,gBAAA,EACAC,aAAA,EACAC,eAAA,EACAC,cAAA,EACAC,sBAAA,EACAC,UAAA,EACAC,mBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,mBAAA,EACAC,WAAA,EACAC,eAAA,EACAC,cAAA,EACAC,UAAA,EACAC,kBAAA,EACAC,QAAA,EACAC,aAAA,EACAC,eAAA,EACAC,eAAA,EACAC,gBAAA,EACAC,cAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,gBAAA,EACAC,kBAAA,EACAC,eAAA,EACAC,WAAA,GAEAC,EAAA9wB,EAAA8uB,GAAAp0C,EAAA,EAAoDA,EAAAo2C,EAAA1hC,OAAwB1U,IAAA,CAC5E,IAIA6W,EAJAo8B,EAAAmD,EAAAp2C,GACAq2C,EAAAjC,EAAAnB,GACAqD,EAAAh3C,EAAA2zC,GACAO,EAAA8C,KAAAp1C,UAEA,GAAAsyC,IACAA,EAAAjS,IAAAvQ,EAAAwiB,EAAAjS,EAAA4S,GACAX,EAAAU,IAAAljB,EAAAwiB,EAAAU,EAAAjB,GACAV,EAAAU,GAAAkB,EACAkC,GAAA,IAAAx/B,KAAAm9B,EACAR,EAAA38B,IAAAoa,EAAAuiB,EAAA38B,EAAAm9B,EAAAn9B,IAAA,KAOA,SAAApX,EAAAC,EAAAI,GAEA,aAGA,IAAA8zB,EAAA9zB,EAAA,GACAwzB,EAAAxzB,EAAA,IACAy2C,EAAAz2C,EAAA,EAAAA,CAAA,WACAL,EAAAC,QAAA,SAAAyzB,EAAAqjB,GACA,IACA3kB,EADAkM,EAAAnK,EAAAT,GAAArtB,YAEA,YAAAL,IAAAs4B,QAAAt4B,IAAAosB,EAAA+B,EAAAmK,GAAAwY,IAAAC,EAAAljB,EAAAzB,KAKA,SAAApyB,EAAAC,EAAAI,GAEA,aAGA,IAaA22C,EAAAC,EAAAC,EAbAzlB,EAAApxB,EAAA,IACA82C,EAAA92C,EAAA,KACA+2C,EAAA/2C,EAAA,IACAg3C,EAAAh3C,EAAA,IACAR,EAAAQ,EAAA,GACAV,EAAAE,EAAAF,QACA23C,EAAAz3C,EAAA03C,aACAC,EAAA33C,EAAA43C,eACAC,EAAA73C,EAAA63C,eACAC,EAAA93C,EAAA83C,SACAC,EAAA,EACA1K,KACA2K,EAAA,qBAEAC,EAAA,WACA,IAAAlX,GAAApsB,KACA,GAAA04B,EAAAxrC,eAAAk/B,GAAA,CACA,IAAAvhB,EAAA6tB,EAAAtM,UACAsM,EAAAtM,GACAvhB,MAGA04B,EAAA,SAAAn3B,GACAk3B,EAAAr3C,KAAAmgB,EAAArK,OAEA+gC,GAAAE,IACAF,EAAA,SAAAj4B,GACA,IAAAlC,KACA5c,EAAA,EACA,MAAAoe,UAAA1J,OAAA1U,EACA4c,EAAAvH,KAAA+I,UAAApe,MAKA,OAJK2sC,IAAA0K,GAAA,WACLT,EAAA,mBAAA93B,IAAApI,SAAAoI,GAAAlC,IAEA65B,EAAAY,GACAA,GAEAJ,EAAA,SAAA5W,UACAsM,EAAAtM,IAEA,WAAAvgC,EAAA,GAAAA,CAAAV,GACAq3C,EAAA,SAAApW,GACAjhC,EAAAq4C,SAAAvmB,EAAAqmB,EAAAlX,EAAA,KAEG+W,KAAAM,IACHjB,EAAA,SAAApW,GACA+W,EAAAM,IAAAxmB,EAAAqmB,EAAAlX,EAAA,KAEG8W,GACHT,EAAA,IAAAS,EACAR,EAAAD,EAAAiB,MACAjB,EAAAkB,MAAAC,UAAAL,EACAf,EAAAvlB,EAAAylB,EAAA71B,YAAA61B,EAAA,IACGr3C,EAAA0hB,kBAAA,mBAAAF,cAAAxhB,EAAAw4C,eACHrB,EAAA,SAAApW,GACA/gC,EAAAwhB,YAAAuf,EAAA,SAEA/gC,EAAA0hB,iBAAA,UAAAw2B,GAAA,IAEAf,EADGa,KAAAR,EAAA,UACH,SAAAzW,GACAwW,EAAAr7B,YAAAs7B,EAAA,WAAAQ,GAAA,WACAT,EAAAkB,YAAA9jC,MACAsjC,EAAAr3C,KAAAmgC,KAIA,SAAAA,GACA2X,WAAA9mB,EAAAqmB,EAAAlX,EAAA,QAIA5gC,EAAAC,SACAuW,IAAA8gC,EACArwB,MAAAuwB,IAKA,SAAAx3C,EAAAC,EAAAI,GAEA,aAGAL,EAAAC,QAAA,SAAAi0B,GACA,IACA,OACAzgB,GAAA,EACAuF,EAAAkb,KAEG,MAAAzgB,GACH,OACAA,GAAA,EACAuF,EAAAvF,MAOA,SAAAzT,EAAAC,EAAAI,GAEA,aAGA,IAAA8zB,EAAA9zB,EAAA,GACA6yB,EAAA7yB,EAAA,GACAm4C,EAAAn4C,EAAA,IACAL,EAAAC,QAAA,SAAAq+B,EAAA7nB,GAEA,GADA0d,EAAAmK,GACApL,EAAAzc,MAAApQ,cAAAi4B,EAAA,OAAA7nB,EACA,IAAAgiC,EAAAD,EAAAvkB,EAAAqK,GACAlgB,EAAAq6B,EAAAr6B,QAEA,OADAA,EAAA3H,GACAgiC,EAAAv6B,UAKA,SAAAle,EAAAC,EAAAI,GAEA,aAGA,IAAAyhC,EAAAzhC,EAAA,EAAAA,CAAA,YACAq4C,GAAA,EACA,IACA,IAAAC,GAAA,GAAA7W,KACA6W,EAAA,qBACAD,GAAA,GAEA79B,MAAA+9B,KAAAD,EAAA,WACA,UAEC,MAAAllC,IACDzT,EAAAC,QAAA,SAAAi0B,EAAA2kB,GACA,IAAAA,IAAAH,EAAA,SACA,IAAA/kB,GAAA,EACA,IACA,IAAA3d,GAAA,GACA8iC,EAAA9iC,EAAA8rB,KACAgX,EAAA5W,KAAA,WACA,OAAcC,KAAAxO,GAAA,IAEd3d,EAAA8rB,GAAA,WACA,OAAAgX,GAEA5kB,EAAAle,GACG,MAAAvC,IACH,OAAAkgB,IAKA,SAAA3zB,EAAAC,EAAAI,GAEA,aAGA,IAAAoxB,EAAApxB,EAAA,IACAk0B,EAAAl0B,EAAA,IACA04C,EAAA14C,EAAA,IACAkhC,EAAAlhC,EAAA,IACA24C,EAAA34C,EAAA,KACAL,EAAAC,QAAA,SAAAg5C,EAAAC,GACA,IAAAC,EAAA,GAAAF,EACAG,EAAA,GAAAH,EACAI,EAAA,GAAAJ,EACAK,EAAA,GAAAL,EACAM,EAAA,GAAAN,EACAO,EAAA,GAAAP,GAAAM,EACAnlC,EAAA8kC,GAAAF,EACA,gBAAA1G,EAAAmH,EAAA3lB,GAQA,IAPA,IAMA7H,EAAAmL,EANA1D,EAAAqlB,EAAAzG,GACApyC,EAAAq0B,EAAAb,GACAO,EAAAxC,EAAAgoB,EAAA3lB,EAAA,GACA7e,EAAAssB,EAAArhC,EAAA+U,QACAgtB,EAAA,EACA/nB,EAAAi/B,EAAA/kC,EAAAk+B,EAAAr9B,GAAAmkC,EAAAhlC,EAAAk+B,EAAA,QAAAtsC,EAEUiP,EAAAgtB,EAAgBA,IAC1B,IAAAuX,GAAAvX,KAAA/hC,KACA+rB,EAAA/rB,EAAA+hC,GACA7K,EAAAnD,EAAAhI,EAAAgW,EAAAvO,GACAulB,GACA,GAAAE,EAAAj/B,EAAA+nB,GAAA7K,OAA0C,GAAAA,EAAA,OAAA6hB,GAC1C,OACA,SACA,OACA,OAAAhtB,EACA,OACA,OAAAgW,EACA,OACA/nB,EAAAtE,KAAAqW,QACW,GAAAqtB,EAAA,SAGN,OAAAC,GAAA,EAAAF,GAAAC,IAAAp/B,KAML,SAAAla,EAAAC,EAAAI,GAEA,aAGA,IAAA6yB,EAAA7yB,EAAA,GACAL,EAAAC,QAAA,SAAA8nB,EAAAkxB,GACA,IAAA/lB,EAAAnL,MAAA2xB,KAAAT,EAAA,MAAA9lB,UAAA,0BAAA8lB,EAAA,cACA,OAAAlxB,IAKA,SAAA/nB,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAA05C,qBAAA15C,EAAA25C,mBAAA5zC,EAEA,IAAA4iB,EAAAvoB,EAAA,GAEAu5C,EAAA,WACA,SAAAA,EAAA3kC,EAAAma,EAAAyqB,GACArlC,KAAAQ,MAAA,IAAAc,WAAAb,GACAT,KAAAmC,MAAA,EACAnC,KAAA8B,IAAA,EACA9B,KAAAI,IAAAK,EACAT,KAAA4a,YACA5a,KAAAslC,gBACAtlC,KAAAulC,gBAAA,EACAvlC,KAAAwlC,UAAAxkC,KAAAkB,KAAAzB,EAAAma,GACA5a,KAAAqlC,UACArlC,KAAAylC,sBAAA,EACAzlC,KAAA0lC,+BAAA,EA4LA,OA1LAN,EAAAn4C,WACA04C,iBAAA,WAEA,IADA,IAAAC,KACA1kC,EAAA,EAAArU,EAAAmT,KAAAwlC,UAA6CtkC,EAAArU,IAAWqU,EACxDlB,KAAAslC,aAAApkC,IACA0kC,EAAAxkC,KAAAF,GAGA,OAAA0kC,GAEA9vB,eAAA,WACA,OAAA9V,OAEA6lC,gBAAA,WACA,OAAA7lC,KAAAulC,kBAAAvlC,KAAAwlC,WAEAM,cAAA,SAAA3lC,EAAAe,GACA,IAAAd,EAAAD,EAAAe,EAAAO,WACA,GAAAtB,EAAAH,KAAA4a,YAAA,EACA,UAAAxc,MAAA,qBAAA+B,GAEA,IAAAM,EAAAT,KAAAQ,MAAAC,OACA,GAAAL,EAAAJ,KAAA4a,YAAA,GAAAxa,IAAAK,EACA,UAAArC,MAAA,mBAAAgC,GAEAJ,KAAAQ,MAAAwB,IAAA,IAAAV,WAAAJ,GAAAf,GACA,IAGA4lC,EAHAnrB,EAAA5a,KAAA4a,UACAorB,EAAAhlC,KAAAkgB,MAAA/gB,EAAAya,GACAqrB,EAAAjlC,KAAAkgB,OAAA9gB,EAAA,GAAAwa,GAAA,EAEA,IAAAmrB,EAAAC,EAAiCD,EAAAE,IAAqBF,EACtD/lC,KAAAslC,aAAAS,KACA/lC,KAAAslC,aAAAS,IAAA,IACA/lC,KAAAulC,kBAIAW,yBAAA,SAAAnkC,GACA,IAAAokC,EAAAnmC,KAAAylC,sBACAO,EAAAhlC,KAAAkgB,MAAAilB,EAAAnmC,KAAA4a,WACA5a,KAAAQ,MAAAwB,IAAA,IAAAV,WAAAS,GAAAokC,GACAA,GAAApkC,EAAAN,WACAzB,KAAAylC,sBAAAU,EACA,IACAJ,EADAE,EAAAE,GAAAnmC,KAAAI,IAAAJ,KAAAwlC,UAAAxkC,KAAAkgB,MAAAilB,EAAAnmC,KAAA4a,WAEA,IAAAmrB,EAAAC,EAAiCD,EAAAE,IAAqBF,EACtD/lC,KAAAslC,aAAAS,KACA/lC,KAAAslC,aAAAS,IAAA,IACA/lC,KAAAulC,kBAIAa,WAAA,SAAAtkC,GACA,IAAAZ,EAAAF,KAAAkgB,MAAApf,EAAA9B,KAAA4a,WACA,GAAA1Z,IAAAlB,KAAA0lC,8BAAA,CAGA,IAAA1lC,KAAAslC,aAAApkC,GACA,UAAAkT,EAAA5jB,qBAAAsR,IAAA,GAEA9B,KAAA0lC,8BAAAxkC,IAEAmlC,YAAA,SAAAlmC,EAAAC,GACA,KAAAD,GAAAC,MAGAA,GAAAJ,KAAAylC,uBAMA,IAHA,IAAA7qB,EAAA5a,KAAA4a,UACAorB,EAAAhlC,KAAAkgB,MAAA/gB,EAAAya,GACAqrB,EAAAjlC,KAAAkgB,OAAA9gB,EAAA,GAAAwa,GAAA,EACA1Z,EAAA8kC,EAAkC9kC,EAAA+kC,IAAkB/kC,EACpD,IAAAlB,KAAAslC,aAAApkC,GACA,UAAAkT,EAAA5jB,qBAAA2P,EAAAC,IAIAkmC,eAAA,SAAAN,GAGA,IAFA,IAAA9kC,EACAskC,EAAAxlC,KAAAwlC,UACAz5C,EAAA,EAAqBA,EAAAy5C,IAAez5C,EAEpC,GADAmV,GAAA8kC,EAAAj6C,GAAAy5C,GACAxlC,KAAAslC,aAAApkC,GACA,OAAAA,EAGA,aAEAqlC,SAAA,SAAArlC,GACA,QAAAlB,KAAAslC,aAAApkC,IAEAT,aACA,OAAAT,KAAAI,IAAAJ,KAAAmC,OAEAoS,cACA,WAAAvU,KAAAS,QAEA+T,QAAA,WACA,IAAA1S,EAAA9B,KAAA8B,IACA,OAAAA,GAAA9B,KAAAI,KACA,GAEAJ,KAAAomC,WAAAtkC,GACA9B,KAAAQ,MAAAR,KAAA8B,SAEA2S,UAAA,WACA,IAAAC,EAAA1U,KAAAwU,UACAnK,EAAArK,KAAAwU,UACA,WAAAE,IAAA,IAAArK,GACA,GAEAqK,GAAA,GAAArK,GAEAsK,SAAA,WACA,IAAAD,EAAA1U,KAAAwU,UACAnK,EAAArK,KAAAwU,UACAlK,EAAAtK,KAAAwU,UACAjK,EAAAvK,KAAAwU,UACA,OAAAE,GAAA,KAAArK,GAAA,KAAAC,GAAA,GAAAC,GAEA0I,SAAA,SAAAxS,GACA,IAAAD,EAAAR,KAAAQ,MACAsB,EAAA9B,KAAA8B,IACA8S,EAAA5U,KAAAI,IACA,IAAAK,EAEA,OADAT,KAAAqmC,YAAAvkC,EAAA8S,GACApU,EAAAW,SAAAW,EAAA8S,GAEA,IAAAxU,EAAA0B,EAAArB,EAMA,OALAL,EAAAwU,IACAxU,EAAAwU,GAEA5U,KAAAqmC,YAAAvkC,EAAA1B,GACAJ,KAAA8B,IAAA1B,EACAI,EAAAW,SAAAW,EAAA1B,IAEAyU,SAAA,WACA,IAAAC,EAAA9U,KAAAwU,UAEA,OADAxU,KAAA8B,MACAgT,GAEAC,UAAA,SAAAtU,GACA,IAAAD,EAAAR,KAAAiT,SAAAxS,GAEA,OADAT,KAAA8B,KAAAtB,EAAAC,OACAD,GAEAgmC,aAAA,SAAArmC,EAAAC,GAEA,OADAJ,KAAAqmC,YAAAlmC,EAAAC,GACAJ,KAAAQ,MAAAW,SAAAhB,EAAAC,IAEA4U,KAAA,SAAAnoB,GACAA,IACAA,EAAA,GAEAmT,KAAA8B,KAAAjV,GAEAooB,MAAA,WACAjV,KAAA8B,IAAA9B,KAAAmC,OAEA+S,UAAA,WACAlV,KAAAmC,MAAAnC,KAAA8B,KAEAqT,cAAA,SAAAhT,EAAA1B,EAAAkC,GAEA,SAAA8jC,KADAzmC,KAAAqmC,YAAAlkC,IAAA1B,GAEAgmC,EAAAx5C,UAAAT,OAAAoT,OAAAI,MACAymC,EAAAx5C,UAAA04C,iBAAA,WAKA,IAJA,IAAA/qB,EAAA5a,KAAA4a,UACAorB,EAAAhlC,KAAAkgB,MAAAlhB,KAAAmC,MAAAyY,GACAqrB,EAAAjlC,KAAAkgB,OAAAlhB,KAAAI,IAAA,GAAAwa,GAAA,EACA8rB,KACAxlC,EAAA8kC,EAAoC9kC,EAAA+kC,IAAkB/kC,EACtDlB,KAAAslC,aAAApkC,IACAwlC,EAAAtlC,KAAAF,GAGA,OAAAwlC,GAEA,IAAAC,EAAA,IAAAF,EAIA,OAHAE,EAAA7kC,IAAA6kC,EAAAxkC,QACAwkC,EAAAvmC,IAAA+B,EAAA1B,GAAAT,KAAAI,IACAumC,EAAAhkC,OACAgkC,IAGAvB,EAxMA,GA0MAD,EAAA,WACA,SAAAA,EAAAyB,EAAAj+B,GACA,IAAAiS,EAAAjS,EAAAk+B,eACApmC,EAAAkI,EAAAlI,OACAT,KAAAqM,OAAA,IAAA+4B,EAAA3kC,EAAAma,EAAA5a,MACAA,KAAAS,SACAT,KAAA4a,YACA5a,KAAA4mC,mBACA5mC,KAAAZ,IAAAuJ,EAAAvJ,IACAY,KAAA8mC,iBAAAn+B,EAAAm+B,iBACA9mC,KAAA+mC,WAAAp+B,EAAAo+B,WACA/mC,KAAAgnC,cAAA,EACAhnC,KAAAinC,sBAAAz6C,OAAAoT,OAAA,MACAI,KAAAknC,gBAAA16C,OAAAoT,OAAA,MACAI,KAAAmnC,kBAAA36C,OAAAoT,OAAA,MACAI,KAAAylC,sBAAA,EACAzlC,KAAAonC,SAAA,EACApnC,KAAAqnC,yBAAA,EAAAjzB,EAAA/kB,2BAwOA,OAtOA81C,EAAAl4C,WACAq6C,eAAA,WACA,OAAAtnC,KAAAqnC,wBAAA39B,SAEA69B,YAAA,SAAApnC,EAAAC,GACA,IAAAsL,EAAA1L,KAEAwnC,EAAAxnC,KAAA4mC,iBAAAa,eAAAtnC,EAAAC,GACAonC,EAAAE,uBACAF,EAAAG,WAAA3nC,KAAA2nC,WAAAC,KAAA5nC,OAEA,IAAA4lC,KACAz+B,EAAA,EACAk+B,EAAArlC,KACA0J,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACA,IAAAg+B,EAAA,SAAAA,EAAA3mC,GACA,IACA,IAAAA,EAAAysB,KAAA,CACA,IAAA5rB,EAAAb,EAAA7T,MAOA,OANAu4C,EAAAxkC,KAAAW,GACAoF,IAAA,EAAAiN,EAAA1kB,iBAAAqS,GACAylC,EAAAE,sBACArC,EAAAsC,YAAoCxgC,gBAEpCqgC,EAAAM,OAAAl7B,KAAAi7B,EAAAh+B,GAGA,IAAAk+B,GAAA,EAAA3zB,EAAA3kB,eAAAm2C,GACAA,EAAA,KACAh8B,EAAAm+B,GACW,MAAA9oC,GACX4K,EAAA5K,KAGAuoC,EAAAM,OAAAl7B,KAAAi7B,EAAAh+B,KAEAH,EAAAkD,KAAA,SAAA7K,GACA2J,EAAA07B,SAGA17B,EAAAo6B,eACA5kC,MAAAa,EACA5B,aAIA6nC,iBAAA,WACA,IAAAtB,EAAA1mC,KAAAqM,OAAAs5B,mBAEA,OADA3lC,KAAAioC,eAAAvB,GACA1mC,KAAAqnC,wBAAA39B,SAEAu+B,eAAA,SAAArC,GACA,IACA75C,EAAA8V,EADAqmC,EAAAloC,KAAAgnC,gBAEAmB,EAAA37C,OAAAoT,OAAA,MAEA,IADAI,KAAAinC,sBAAAiB,GAAAC,EACAp8C,EAAA,EAAA8V,EAAA+jC,EAAAnlC,OAAqC1U,EAAA8V,EAAQ9V,IAC7CiU,KAAAqM,OAAAk6B,SAAAX,EAAA75C,MACAo8C,EAAAvC,EAAA75C,KAAA,GAGA,MAAAqoB,EAAAxlB,YAAAu5C,GACA,OAAAx+B,QAAAC,UAEA,IAAAH,GAAA,EAAA2K,EAAA/kB,2BACA2Q,KAAAmnC,kBAAAe,GAAAz+B,EACA,IAAA2+B,KACA,QAAAlnC,KAAAinC,EACAjnC,GAAA,EACAA,KAAAlB,KAAAknC,kBACAlnC,KAAAknC,gBAAAhmC,MACAknC,EAAAhnC,KAAAF,IAEAlB,KAAAknC,gBAAAhmC,GAAAE,KAAA8mC,GAEA,IAAAE,EAAA3nC,OACA,OAAAgJ,EAAAC,QAEA,IAAA2+B,EAAAroC,KAAAsoC,YAAAF,GACA,IAAAr8C,EAAA,EAAiBA,EAAAs8C,EAAA5nC,SAAmC1U,EAAA,CACpD,IAAAw8C,EAAAF,EAAAt8C,GACAoU,EAAAooC,EAAAvC,WAAAhmC,KAAA4a,UACAxa,EAAAY,KAAAC,IAAAsnC,EAAAtC,SAAAjmC,KAAA4a,UAAA5a,KAAAS,QACAT,KAAAunC,YAAApnC,EAAAC,GAEA,OAAAqJ,EAAAC,SAEA8+B,UAAA,WACA,OAAAxoC,KAAAqM,QAEAo8B,aAAA,SAAAtoC,EAAAC,GACAA,EAAAY,KAAAC,IAAAb,EAAAJ,KAAAS,QAIA,IAHA,IAAAulC,EAAAhmC,KAAA0oC,cAAAvoC,GACA8lC,EAAAjmC,KAAA2oC,YAAAvoC,GACAwlC,KACA1kC,EAAA8kC,EAAkC9kC,EAAA+kC,IAAkB/kC,EACpD0kC,EAAAxkC,KAAAF,GAEA,OAAAlB,KAAAioC,eAAArC,IAEAgD,cAAA,SAAAC,GACAA,QAEA,IADA,IAAAT,KACAr8C,EAAA,EAAqBA,EAAA88C,EAAApoC,OAAmB1U,IAGxC,IAFA,IAAAi6C,EAAAhmC,KAAA0oC,cAAAG,EAAA98C,GAAAoU,OACA8lC,EAAAjmC,KAAA2oC,YAAAE,EAAA98C,GAAAqU,KACAc,EAAA8kC,EAAoC9kC,EAAA+kC,IAAkB/kC,EACtDknC,EAAAU,SAAA5nC,IACAknC,EAAAhnC,KAAAF,GAOA,OAHAknC,EAAA5iC,KAAA,SAAAb,EAAAnB,GACA,OAAAmB,EAAAnB,IAEAxD,KAAAioC,eAAAG,IAEAE,YAAA,SAAA1C,GAIA,IAHA,IAAAmD,KACA/C,GAAA,EACAgD,GAAA,EACAj9C,EAAA,EAAqBA,EAAA65C,EAAAnlC,SAAmB1U,EAAA,CACxC,IAAAmV,EAAA0kC,EAAA75C,GACAi6C,EAAA,IACAA,EAAA9kC,GAEA8nC,GAAA,GAAAA,EAAA,IAAA9nC,IACA6nC,EAAA3nC,MACA4kC,aACAC,SAAA+C,EAAA,IAEAhD,EAAA9kC,GAEAnV,EAAA,IAAA65C,EAAAnlC,QACAsoC,EAAA3nC,MACA4kC,aACAC,SAAA/kC,EAAA,IAGA8nC,EAAA9nC,EAEA,OAAA6nC,GAEApB,WAAA,SAAAh/B,GACA,IAAAsgC,EAAAjpC,KAAAqM,OAAAk5B,gBAAAvlC,KAAA4a,UAAAjS,EAAAxB,OACAnH,KAAA+mC,WAAA35B,KAAA,eACAjG,OAAA8hC,EACAC,MAAAlpC,KAAAS,UAGAqlC,cAAA,SAAAn9B,GACA,IAAAzH,EAAAyH,EAAAzH,MACAioC,OAAA33C,IAAAmX,EAAAxI,MACAA,EAAAgpC,EAAAnpC,KAAAylC,sBAAA98B,EAAAxI,MACAC,EAAAD,EAAAe,EAAAO,WACAukC,EAAAhlC,KAAAkgB,MAAA/gB,EAAAH,KAAA4a,WACAqrB,EAAA7lC,EAAAJ,KAAAS,OAAAO,KAAAkgB,MAAA9gB,EAAAJ,KAAA4a,WAAA5Z,KAAAkB,KAAA9B,EAAAJ,KAAA4a,WACAuuB,GACAnpC,KAAAqM,OAAA65B,yBAAAhlC,GACAlB,KAAAylC,sBAAArlC,GAEAJ,KAAAqM,OAAAy5B,cAAA3lC,EAAAe,GAEAlB,KAAAqM,OAAAw5B,mBACA7lC,KAAAqnC,wBAAAz9B,QAAA5J,KAAAqM,QAEA,IACAtgB,EAAAm8C,EADAkB,KAEA,IAAAloC,EAAA8kC,EAA8B9kC,EAAA+kC,IAAkB/kC,EAAA,CAChD,IAAAmoC,EAAArpC,KAAAknC,gBAAAhmC,OAEA,WADAlB,KAAAknC,gBAAAhmC,GACAnV,EAAA,EAAmBA,EAAAs9C,EAAA5oC,SAAuB1U,EAAA,CAC1Cm8C,EAAAmB,EAAAt9C,GACA,IAAAo8C,EAAAnoC,KAAAinC,sBAAAiB,GACAhnC,KAAAinC,UACAA,EAAAjnC,IAEA,EAAAkT,EAAAxlB,YAAAu5C,IAGAiB,EAAAhoC,KAAA8mC,IAGA,IAAAloC,KAAA8mC,mBAAA,EAAA1yB,EAAAxlB,YAAAoR,KAAAknC,iBAAA,CACA,IAAAZ,EACA,OAAAtmC,KAAAqM,OAAAk5B,gBAAA,CACA,IAAAlI,EAAAr9B,KAAAqM,OAAAm5B,UAAA,EACAxlC,KAAAqM,OAAAk6B,SAAAlJ,KACAiJ,EAAAjJ,QAGAiJ,EAAAtmC,KAAAqM,OAAAi6B,eAAAL,GAEAnoC,OAAAC,UAAAuoC,IACAtmC,KAAAioC,gBAAA3B,IAGA,IAAAv6C,EAAA,EAAiBA,EAAAq9C,EAAA3oC,SAA2B1U,EAAA,CAC5Cm8C,EAAAkB,EAAAr9C,GACA,IAAA0d,EAAAzJ,KAAAmnC,kBAAAe,UACAloC,KAAAmnC,kBAAAe,GACAz+B,EAAAG,UAEA5J,KAAA+mC,WAAA35B,KAAA,eACAjG,OAAAnH,KAAAqM,OAAAk5B,gBAAAvlC,KAAA4a,UACAsuB,MAAAlpC,KAAAS,UAGA6oC,QAAA,SAAAC,GACAvpC,KAAAqnC,wBAAAx9B,OAAA0/B,IAEAb,cAAA,SAAAvoC,GACA,IAAAe,EAAAF,KAAAkgB,MAAA/gB,EAAAH,KAAA4a,WACA,OAAA1Z,GAEAynC,YAAA,SAAAvoC,GACA,IAAAc,EAAAF,KAAAkgB,OAAA9gB,EAAA,GAAAJ,KAAA4a,WAAA,EACA,OAAA1Z,GAEAsoC,MAAA,WAKA,QAAAtB,KAJAloC,KAAAonC,SAAA,EACApnC,KAAA4mC,kBACA5mC,KAAA4mC,iBAAA6C,kBAAA,SAEAzpC,KAAAmnC,kBAAA,CACA,IAAA19B,EAAAzJ,KAAAmnC,kBAAAe,GACAz+B,EAAAI,OAAA,IAAAzL,MAAA,2BAIA+mC,EAzPA,GA2PA15C,EAAA25C,gBACA35C,EAAA05C,wBAIA,SAAA35C,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAi+C,SAAAj+C,EAAAk+C,KAAAl+C,EAAAm+C,aAAAn+C,EAAAo+C,aAAAr4C,EAEA,IAAAC,EAAA,oBAAAC,QAAA,kBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,oBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAzE,UAAA,gBAAA2E,GAE5Ik4C,EAAA,WAAkC,SAAAC,EAAAvoC,EAAAzV,GAAiC,IAAAi+C,KAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAA34C,EAAoB,IAAM,QAAA44C,EAAAC,EAAA7oC,EAAA9P,OAAAC,cAA0Cs4C,GAAAG,EAAAC,EAAA3c,QAAAC,MAA+Bsc,GAAA,EAAkC,GAArBD,EAAA5oC,KAAAgpC,EAAA/8C,OAAqBtB,GAAAi+C,EAAAvpC,SAAA1U,EAAA,MAAuC,MAAAw9C,GAAcW,GAAA,EAAWC,EAAAZ,EAAY,QAAU,KAAMU,GAAAI,EAAA,WAAAA,EAAA,YAA2C,QAAU,GAAAH,EAAA,MAAAC,GAAsB,OAAAH,EAAe,gBAAAxoC,EAAAzV,GAA2B,GAAAsa,MAAA4K,QAAAzP,GAA0B,OAAAA,EAAc,GAAA9P,OAAAC,YAAAnF,OAAAgV,GAA2C,OAAAuoC,EAAAvoC,EAAAzV,GAAuC,UAAA4yB,UAAA,yDAAjkB,GAEAvK,EAAAvoB,EAAA,GAEAwoB,EAAAxoB,EAAA,GAEAy+C,EAAAz+C,EAAA,IAEA0+C,EAAA1+C,EAAA,IAEA2+C,EAAA3+C,EAAA,IAEA4+C,EAAA5+C,EAAA,IAEAg+C,EAAA,WACA,SAAAA,EAAAa,EAAAt6B,EAAAu6B,GAIA,GAHA3qC,KAAA0qC,aACA1qC,KAAAoQ,OACApQ,KAAA4qC,QAAAx6B,EAAAy6B,kBACA,EAAAx2B,EAAAxC,QAAA7R,KAAA4qC,SACA,UAAAx2B,EAAAzkB,YAAA,sCAEAqQ,KAAA8qC,UAAA,IAAAz2B,EAAA/B,YACAtS,KAAA+qC,iBAAAv+C,OAAAoT,OAAA,MACAI,KAAAgrC,mBAAA,IAAA32B,EAAA/B,YACAtS,KAAA2qC,cACA3qC,KAAAirC,gBA4pBA,OA1pBApB,EAAA58C,WACAi+C,eACA,IAAAC,EAAAnrC,KAAA4qC,QAAAx5B,OAAA,YACA,OAAAiD,EAAAnD,OAAAi6B,GACA,SAAA/2B,EAAAvmB,QAAAmS,KAAA,iBAEA,IAEAkrC,EAFAE,IAAAprC,KAAAoQ,KAAAi7B,SAAArrC,KAAAoQ,KAAAi7B,QAAAD,gBACA/+B,EAAArM,KAAAoQ,KAAAe,MAAAg6B,GAAAC,GAEA,GAAA/+B,IAAA,EAAAgI,EAAAxC,QAAAxF,EAAA1J,MAAA,CACA,IAAAqH,EAAAqC,EAAA1J,KAAA/V,IAAA,QACA0+C,EAAAj/B,EAAA1J,KAAA/V,IAAA,WACA,MAAAynB,EAAA1B,QAAA3I,EAAA,gBAAAqK,EAAA1B,QAAA24B,EAAA,OACA,IACAJ,GAAA,EAAA92B,EAAA3mB,qBAAA,EAAA2mB,EAAA7kB,eAAA8c,EAAA4G,aACW,MAAAhU,GACX,GAAAA,aAAAmV,EAAA5jB,qBACA,MAAAyO,GAEA,EAAAmV,EAAArlB,MAAA,+BAIA,SAAAqlB,EAAAvmB,QAAAmS,KAAA,WAAAkrC,IAEAK,wBACA,IAAAC,EAAAxrC,KAAA4qC,QAAAh+C,IAAA,SACA,OAAAynB,EAAAxC,QAAA25B,GACA,UAAAp3B,EAAAzkB,YAAA,sCAEA,SAAAykB,EAAAvmB,QAAAmS,KAAA,oBAAAwrC,IAEAC,sBACA,IAAA75C,EAAA,KACA,IACAA,EAAAoO,KAAA0rC,sBACO,MAAAnsC,GACP,GAAAA,aAAA6U,EAAA5jB,qBACA,MAAA+O,GAEA,EAAA6U,EAAA7mB,MAAA,mCAEA,SAAA6mB,EAAAvmB,QAAAmS,KAAA,kBAAApO,IAEA85C,oBAAA,WACA,IAAA95C,EAAAoO,KAAA4qC,QAAAh+C,IAAA,YACA,OAAAynB,EAAAxC,QAAAjgB,GACA,YAGA,GADAA,IAAAwf,OAAA,WACA,EAAAiD,EAAAnD,OAAAtf,GACA,YAEA,IAAAtG,GAAkBqgD,UAClBjT,IACA9mC,MACAg6C,OAAAtgD,IAEAugD,EAAA,IAAAx3B,EAAAnC,OACA25B,EAAAz5B,IAAAxgB,GACA,IAAAwe,EAAApQ,KAAAoQ,KACA07B,EAAA,IAAAxqC,WAAA,GACA,MAAAo3B,EAAAj4B,OAAA,GACA,IAAA1U,EAAA2sC,EAAA1iB,QACA+1B,EAAA37B,EAAAU,WAAA/kB,EAAA6F,KACA,UAAAm6C,EAAA,CAGA,IAAAA,EAAAx6B,IAAA,SACA,UAAA6C,EAAAzkB,YAAA,wBAEA,IAAAoS,GACA3C,IAAA,KACAqhB,KAAA,MAEAopB,EAAAmC,qBACAC,SAAAF,EACAG,UAAAnqC,EACAoqC,WAAAnsC,KAAA0qC,WAAAyB,aAEA,IAAAC,EAAAL,EAAAn/C,IAAA,SACAy/C,EAAAN,EAAAn/C,IAAA,QACA07B,EAAAyjB,EAAAjpC,SAAA,KACAwpC,EAAAR,GACAzlC,MAAA4K,QAAAqX,IAAA,IAAAA,EAAA7nB,QAAA,IAAA6nB,EAAA,QAAAA,EAAA,QAAAA,EAAA,KACAgkB,EAAA7B,EAAAxqB,WAAAmD,WAAA/B,IAAAF,OAAAmH,EAAA,IAEA,IAAAikB,GACA9rB,KAAA1e,EAAA0e,KACArhB,IAAA2C,EAAA3C,IACAotC,UAAAzqC,EAAAyqC,UACAC,UAAA1qC,EAAA0qC,UACAL,OAAA,EAAAh4B,EAAA1mB,mBAAA0+C,GACA9jB,MAAAgkB,EACA7qB,MAAAsqB,EAAAn/C,IAAA,SACA8/C,QAAA,EAAAL,GACAM,UAAA,EAAAN,GACAV,UAEA5/C,EAAA6/C,OAAAD,MAAAvqC,KAAAmrC,GACA36C,EAAAm6C,EAAA36B,OAAA,UACA,EAAAiD,EAAAnD,OAAAtf,KAAAi6C,EAAAt6B,IAAA3f,KACA8mC,EAAAt3B,MACAxP,MACAg6C,OAAAW,IAEAV,EAAAz5B,IAAAxgB,IAEAA,EAAAm6C,EAAA36B,OAAA,SACA,EAAAiD,EAAAnD,OAAAtf,KAAAi6C,EAAAt6B,IAAA3f,KACA8mC,EAAAt3B,MACAxP,MACAg6C,OAAA7/C,EAAA6/C,SAEAC,EAAAz5B,IAAAxgB,KAGA,OAAAtG,EAAAqgD,MAAAlrC,OAAA,EAAAnV,EAAAqgD,MAAA,MAEAhX,eACA,IAAA/iC,EAAAoO,KAAAurC,kBAAA3+C,IAAA,SACA,IAAAkR,OAAAC,UAAAnM,GACA,UAAAwiB,EAAAzkB,YAAA,0DAEA,SAAAykB,EAAAvmB,QAAAmS,KAAA,WAAApO,IAEAg7C,mBACA,SAAAC,EAAApsB,GACA,SAAApM,EAAAxC,QAAA4O,KAAA7zB,IAAA,KAAA6zB,EAEA,IAEAqsB,EACAC,EAHA38B,EAAApQ,KAAAoQ,KACA48B,KAGAp7C,EAAAoO,KAAA4qC,QAAAh+C,IAAA,SAeA,GAdAgF,KAAA2f,IAAA,SACAu7B,EAAAl7C,EAAAwf,OAAA,SACOpR,KAAA4qC,QAAAr5B,IAAA,WACPw7B,EAAA/sC,KAAA4qC,QAAAh+C,IAAA,UAEAmgD,IACAn7C,EAAAm7C,EACAn7C,EAAA4f,QAAA,SAAA5O,EAAAvV,GACAA,IAGA2/C,EAAApqC,GAAAiqC,EAAAx/C,OAGAy/C,EAAA,CACA,IAAAG,EAAA,IAAAC,EAAAJ,EAAA18B,GACA+8B,EAAAF,EAAAG,SACA,QAAA/gD,KAAA8gD,EACAH,EAAA3gD,GAAAwgD,EAAAM,EAAA9gD,IAGA,SAAA+nB,EAAAvmB,QAAAmS,KAAA,eAAAgtC,IAEAK,eAAA,SAAAC,GACA,SAAAT,EAAApsB,GACA,SAAApM,EAAAxC,QAAA4O,KAAA7zB,IAAA,KAAA6zB,EAEA,IAEAqsB,EACAC,EAHA38B,EAAApQ,KAAAoQ,KACAqQ,EAAA,KAGA7uB,EAAAoO,KAAA4qC,QAAAh+C,IAAA,SAMA,GALAgF,KAAA2f,IAAA,SACAu7B,EAAAl7C,EAAAwf,OAAA,SACOpR,KAAA4qC,QAAAr5B,IAAA,WACPw7B,EAAA/sC,KAAA4qC,QAAAh+C,IAAA,UAEAmgD,EAAA,CACA,IAAA1/C,EAAA0/C,EAAAngD,IAAA0gD,GACAjgD,IACAozB,EAAAosB,EAAAx/C,IAGA,GAAAy/C,EAAA,CACA,IAAAG,EAAA,IAAAC,EAAAJ,EAAA18B,GACAqQ,EAAAosB,EAAAI,EAAArgD,IAAA0gD,IAEA,OAAA7sB,GAEA8sB,iBACA,IAAA37C,EAAA,KACA,IACAA,EAAAoO,KAAAwtC,iBACO,MAAAjuC,GACP,GAAAA,aAAA6U,EAAA5jB,qBACA,MAAA+O,GAEA,EAAA6U,EAAA7mB,MAAA,+BAEA,SAAA6mB,EAAAvmB,QAAAmS,KAAA,aAAApO,IAEA47C,eAAA,WACA,IAAA57C,EAAAoO,KAAA4qC,QAAAx5B,OAAA,cACA,IAAAxf,EACA,YASA,IAPA,IAAA27C,EAAA,IAAAlnC,MAAArG,KAAA20B,UACA8Y,EAAA,KACAC,EAAA,GACAC,EAAA,IAAAC,EAAAh8C,EAAAoO,KAAAoQ,MACAy9B,EAAAF,EAAAP,SACAU,EAAA,GACAC,EAAA,EACAhiD,EAAA,EAAA8V,EAAA7B,KAAA20B,SAAyC5oC,EAAA8V,EAAQ9V,IAAA,CACjD,GAAAA,KAAA8hD,EAAA,CACA,IAAAG,EAAAH,EAAA9hD,GACA,OAAAsoB,EAAAxC,QAAAm8B,GACA,UAAA55B,EAAAzkB,YAAA,sCAEA,GAAAq+C,EAAAz8B,IAAA,aAAA8C,EAAA1B,QAAAq7B,EAAAphD,IAAA,qBACA,UAAAwnB,EAAAzkB,YAAA,yCAEA,GAAAq+C,EAAAz8B,IAAA,MACA,IAAAnkB,EAAA4gD,EAAAphD,IAAA,KACA,OAAAynB,EAAA1B,QAAAvlB,GACA,UAAAgnB,EAAAzkB,YAAA,0CAEA89C,EAAArgD,EAAAf,UAEAohD,EAAA,KAEA,GAAAO,EAAAz8B,IAAA,MACA,IAAApkB,EAAA6gD,EAAAphD,IAAA,KACA,OAAAwnB,EAAA1lB,UAAAvB,GACA,UAAAinB,EAAAzkB,YAAA,2CAEA+9C,GAAA,EAAAt5B,EAAA1mB,mBAAAP,QAEAugD,EAAA,GAEA,GAAAM,EAAAz8B,IAAA,OACA,IAAA08B,EAAAD,EAAAphD,IAAA,MACA,KAAAkR,OAAAC,UAAAkwC,OAAA,GACA,UAAA75B,EAAAzkB,YAAA,0CAEAo+C,EAAAE,OAEAF,EAAA,EAGA,OAAAN,GACA,QACAK,EAAAC,EACA,MACA,QACA,QACAD,EAAA15B,EAAAvkB,KAAA+V,QAAAmoC,EAAA,MAAAN,GACA,MACA,QACA,QAQA,IAPA,IAAAS,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,MAAAZ,EAAAW,EAAAD,EACAG,EAAAP,EAAA,EACAQ,EAAA5tC,OAAAC,aAAAytC,EAAAC,EAAAJ,GACAM,KACAx0B,EAAA,EAAAy0B,EAAAH,EAAAJ,EAAA,EAAyDl0B,GAAAy0B,EAASz0B,IAClEw0B,EAAAptC,KAAAmtC,GAEAT,EAAAU,EAAAntC,KAAA,IACA,MACA,QACA,GAAAosC,EACA,UAAAr5B,EAAAzkB,YAAA,kBAAA89C,EAAA,8BAEAK,EAAA,GAEAP,EAAAxhD,GAAA2hD,EAAAI,EACAC,IAEA,OAAAR,GAEAmB,eACA,IAAA98C,EAAAoO,KAAA4qC,QAAAh+C,IAAA,YACA8hD,EAAA,UACA,MAAAr6B,EAAA1B,QAAA/gB,GACA,OAAAA,EAAAvF,MACA,cACA,kBACA,gBACA,iBACA,YACA,qBACAqiD,EAAA98C,EAAAvF,KAGA,SAAA+nB,EAAAvmB,QAAAmS,KAAA,WAAA0uC,IAEAC,kBACA,IAEA7B,EAFA18B,EAAApQ,KAAAoQ,KACAu+B,EAAA,KAEA/8C,EAAAoO,KAAA4qC,QAAAh+C,IAAA,SAIA,GAHAgF,IACAk7C,EAAAl7C,EAAAwf,OAAA,kBAEA07B,EAAA,CACA,IAAAG,EAAA,IAAAC,EAAAJ,EAAA18B,GACA+8B,EAAAF,EAAAG,SACA,QAAA/gD,KAAA8gD,EAAA,CACA,IAAAyB,EAAA,IAAAlF,EAAAyD,EAAA9gD,GAAA+jB,GACAu+B,IACAA,EAAAniD,OAAAoT,OAAA,OAEA+uC,GAAA,EAAAv6B,EAAA1mB,mBAAArB,IAAAuiD,EAAAC,cAGA,SAAAz6B,EAAAvmB,QAAAmS,KAAA,cAAA2uC,IAEAnwC,iBACA,IAAA4R,EAAApQ,KAAAoQ,KACAxe,EAAAoO,KAAA4qC,QAAAh+C,IAAA,SACA4R,EAAA,KACA,SAAAswC,EAAAC,GACA,IAAA/kC,EAAA+kC,EAAAniD,IAAA,KACA,MAAAynB,EAAA1B,QAAA3I,EAAA,eAGA,IAAAglC,EAAAD,EAAAniD,IAAA,MACA,MAAAynB,EAAArB,UAAAg8B,GACAA,GAAA,EAAA56B,EAAA7kB,eAAAy/C,EAAA/7B,iBACS,OAAAmB,EAAA1lB,UAAAsgD,GACT,OAEAxwC,IACAA,MAEAA,EAAA4C,MAAA,EAAAgT,EAAA1mB,mBAAAshD,KAEA,GAAAp9C,KAAA2f,IAAA,eACA,IAAA07B,EAAA,IAAAC,EAAAt7C,EAAAwf,OAAA,cAAAhB,GACA+8B,EAAAF,EAAAG,SACA,QAAA/gD,KAAA8gD,EAAA,CACA,IAAA4B,EAAA5B,EAAA9gD,IACA,EAAAgoB,EAAAxC,QAAAk9B,IACAD,EAAAC,IAIA,IAAAE,EAAAjvC,KAAA4qC,QAAAh+C,IAAA,cACA,MAAAynB,EAAAxC,QAAAo9B,EAAA,WACA,IAAAC,EAAAD,EAAAriD,IAAA,KACA,MAAAynB,EAAA1B,QAAAu8B,EAAA,UACA,IAAAziC,EAAAwiC,EAAAriD,IAAA,MACA,EAAAynB,EAAA1B,QAAAlG,EAAA,WACAjO,IACAA,MAEAA,EAAA4C,KAAA,oBAGA0tC,EAAAG,GAGA,SAAA76B,EAAAvmB,QAAAmS,KAAA,aAAAxB,IAEA2wC,QAAA,WACA,IAAAzjC,EAAA1L,KAEAA,KAAAgrC,mBAAAv4B,QACA,IAAA28B,KAIA,OAHApvC,KAAA8qC,UAAAt5B,QAAA,SAAA9H,GACA0lC,EAAAhuC,KAAAsI,KAEAC,QAAA2F,IAAA8/B,GAAAxiC,KAAA,SAAAyiC,GACA,QAAAtjD,EAAA,EAAA8V,EAAAwtC,EAAA5uC,OAAoD1U,EAAA8V,EAAQ9V,IAAA,CAC5D,IAAA4S,EAAA0wC,EAAAtjD,GAAA4W,YACAhE,EAAA2wC,WAEA5jC,EAAAo/B,UAAAr4B,QACA/G,EAAAq/B,iBAAAv+C,OAAAoT,OAAA,SAGA2vC,QAAA,SAAA7S,GACA,IAAAjvB,EAAAzN,KAWA,OATA08B,KAAA18B,KAAAirC,eACAjrC,KAAAirC,aAAAvO,GAAA18B,KAAAwvC,YAAA9S,GAAA9vB,KAAA,SAAAlK,GACA,IAAA6L,EAAAu7B,EAAApnC,EAAA,GACAC,EAAA4L,EAAA,GACA4D,EAAA5D,EAAA,GAEA,OAAAd,EAAAk9B,YAAA8E,WAAA/S,EAAA/5B,EAAAwP,EAAA1E,EAAAq9B,UAAAr9B,EAAAs9B,qBAGA/qC,KAAAirC,aAAAvO,IAEA8S,YAAA,SAAA9S,GACA,IAEAjb,EAFAhY,GAAA,EAAA2K,EAAA/kB,2BACAqgD,GAAA1vC,KAAA4qC,QAAAx5B,OAAA,UAEAu+B,EAAA,EACAv/B,EAAApQ,KAAAoQ,KACA46B,EAAAhrC,KAAAgrC,mBACA,SAAAtd,IACA,MAAAgiB,EAAAjvC,OAAA,CACA,IAAAmvC,EAAAF,EAAAG,MACA,MAAAx7B,EAAAnD,OAAA0+B,GAAA,CAEA,GADAnuB,EAAAupB,EAAAp+C,IAAAgjD,GACAnuB,EAAA,GAAAkuB,EAAAluB,EAAAib,EAAA,CACAiT,GAAAluB,EACA,SAkBA,YAhBArR,EAAA0/B,WAAAF,GAAAhjC,KAAA,SAAAhb,IACA,EAAAyiB,EAAAxC,QAAAjgB,EAAA,YAAAyiB,EAAAxC,QAAAjgB,OAAA2f,IAAA,QACAmrB,IAAAiT,GACAC,IAAA5E,EAAAz5B,IAAAq+B,IACA5E,EAAA54B,IAAAw9B,EAAA,GAEAnmC,EAAAG,SAAAhY,EAAAg+C,MAEAD,IACAjiB,MAIAgiB,EAAAtuC,KAAAxP,GACA87B,MACajkB,EAAAI,QAGb,OAAAwK,EAAAxC,QAAA+9B,GAEA,YADAnmC,EAAAI,OAAA,IAAAuK,EAAAzkB,YAAA,iEAIA,GADA8xB,EAAAmuB,EAAAhjD,IAAA,SACAkR,OAAAC,UAAA0jB,OAAA,GACA,IAAAnR,EAAAs/B,EAAAt/B,MAIA,GAHAA,IAAA06B,EAAAz5B,IAAAjB,IACA06B,EAAA54B,IAAA9B,EAAAmR,GAEAkuB,EAAAluB,GAAAib,EAAA,CACAiT,GAAAluB,EACA,UAGA,IAAAsuB,EAAAH,EAAAhjD,IAAA,QACA,IAAAyZ,MAAA4K,QAAA8+B,GAAA,CACA,MAAA17B,EAAA1B,QAAAi9B,EAAAhjD,IAAA,kBAAAgjD,EAAAr+B,IAAA,SAAAq+B,EAAAr+B,IAAA,aACA,GAAAo+B,IAAAjT,EAEA,YADAjzB,EAAAG,SAAAgmC,EAAA,OAGAD,IACA,SAGA,YADAlmC,EAAAI,OAAA,IAAAuK,EAAAzkB,YAAA,gDAGA,QAAAqgD,EAAAD,EAAAtvC,OAAA,EAA0CuvC,GAAA,EAAWA,IACrDN,EAAAtuC,KAAA2uC,EAAAC,IAGAvmC,EAAAI,OAAA,IAAAzL,MAAA,cAAAs+B,EAAA,gBAGA,OADAhP,IACAjkB,EAAAC,SAEAumC,aAAA,SAAAC,GACA,IAAA9/B,EAAApQ,KAAAoQ,KACA,SAAA+/B,EAAAC,GACA,IACAC,EADAnH,EAAA,EAEA,OAAA94B,EAAA0/B,WAAAM,GAAAxjC,KAAA,SAAA0jC,GACA,MAAAj8B,EAAAxB,aAAAu9B,EAAAF,MAAA,EAAA77B,EAAAxC,QAAAy+B,EAAA,cAAAj8B,EAAAxC,QAAAy+B,MAAA/+B,IAAA,UAAA++B,EAAA/+B,IAAA,aACA,UAAA6C,EAAAzkB,YAAA,iDAEA,IAAA2gD,EACA,YAEA,OAAAj8B,EAAAxC,QAAAy+B,GACA,UAAAl8B,EAAAzkB,YAAA,wBAGA,OADA0gD,EAAAC,EAAAl/B,OAAA,UACAk/B,EAAAv/B,SAAA,YACSnE,KAAA,SAAAg/B,GACT,IAAAA,EACA,YAEA,OAAAv3B,EAAAxC,QAAA+5B,GACA,UAAAx3B,EAAAzkB,YAAA,0BAEA,OAAAi8C,EAAA76B,SAAA,UACSnE,KAAA,SAAAmjC,GACT,IAAAA,EACA,YAIA,IAFA,IAAAQ,KACA5e,GAAA,EACA5lC,EAAA,EAAyBA,EAAAgkD,EAAAtvC,OAAiB1U,IAAA,CAC1C,IAAAykD,EAAAT,EAAAhkD,GACA,OAAAsoB,EAAAnD,OAAAs/B,GACA,UAAAp8B,EAAAzkB,YAAA,sBAEA,MAAA0kB,EAAAxB,aAAA29B,EAAAJ,GAAA,CACAze,GAAA,EACA,MAEA4e,EAAAnvC,KAAAgP,EAAA0/B,WAAAU,GAAA5jC,KAAA,SAAA4jC,GACA,OAAAn8B,EAAAxC,QAAA2+B,GACA,UAAAp8B,EAAAzkB,YAAA,4BAEA,GAAA6gD,EAAAj/B,IAAA,UACA,IAAAkQ,EAAA+uB,EAAA5jD,IAAA,SACAs8C,GAAAznB,OAEAynB,OAIA,IAAAvX,EACA,UAAAvd,EAAAzkB,YAAA,qCAEA,OAAAga,QAAA2F,IAAAihC,GAAA3jC,KAAA,WACA,OAAAs8B,EAAAmH,OAIA,IAAAnH,EAAA,EACA,SAAAxb,EAAAvb,GACA,OAAAg+B,EAAAh+B,GAAAvF,KAAA,SAAAjE,GACA,IAAAA,EACA,OAAAugC,EAEA,IAAAznB,EAAA9Y,EAAA,GACA0nC,EAAA1nC,EAAA,GAEA,OADAugC,GAAAznB,EACAiM,EAAA2iB,KAGA,OAAA3iB,EAAAwiB,KAGArG,EAAAmC,oBAAA,SAAAjzB,GACA,SAAA03B,EAAArxC,GACA,WAAAA,EAAAsxC,QAAA,QACA,UAAAtxC,EAEAA,EAEA,SAAAuxC,EAAAvxC,GACA,IACA,SAAAgV,EAAA3mB,oBAAA2R,GACO,MAAAH,GACP,OAAAG,GAGA,IAAA6sC,EAAAlzB,EAAAkzB,SACA,MAAA53B,EAAAxC,QAAAo6B,GAAA,CAIA,IAAAC,EAAAnzB,EAAAmzB,UACA,oCAAAA,EAAA,YAAAz6C,EAAAy6C,IAAA,CAIA,IAEA9sC,EACAqhB,EAHA0rB,EAAApzB,EAAAozB,YAAA,KACA1/B,EAAAw/B,EAAAr/C,IAAA,KAMA,KAHA,EAAAynB,EAAAxC,QAAApF,IAAAw/B,EAAA16B,IAAA,UACA9E,EAAAw/B,EAAAr/C,IAAA,UAEA,EAAAynB,EAAAxC,QAAApF,GAAA,CACA,IAAAyiC,EAAAziC,EAAA7f,IAAA,KACA,OAAAynB,EAAA1B,QAAAu8B,GAEA,YADA,EAAA96B,EAAA7mB,MAAA,2DAGA,IAAA0f,EAAAiiC,EAAA7iD,KACA,OAAA4gB,GACA,UACA7N,EAAAqN,EAAA7f,IAAA,QACA,EAAAynB,EAAA1B,QAAAvT,GACAA,EAAA,IAAAA,EAAA/S,MACW,EAAA+nB,EAAA1lB,UAAA0Q,KACXA,EAAAqxC,EAAArxC,IAEA,MACA,WACAqhB,EAAAhU,EAAA7f,IAAA,KACA,MACA,aACA,YACA,IAAAgkD,EAAAnkC,EAAA7f,IAAA,MACA,EAAAynB,EAAAxC,QAAA++B,GACAxxC,EAAAwxC,EAAAhkD,IAAA,YACW,EAAAwnB,EAAA1lB,UAAAkiD,KACXxxC,EAAAwxC,GAEA,IAAAC,EAAApkC,EAAA7f,IAAA,KACA,GAAAikD,KACA,EAAAx8B,EAAA1B,QAAAk+B,KACAA,IAAAxkD,OAEA,EAAA+nB,EAAA1lB,UAAA0Q,IAAA,CACA,IAAAR,EAAAQ,EAAA4f,MAAA,SACA,EAAA5K,EAAA1lB,UAAAmiD,GACAzxC,EAAAR,EAAA,IAAAiyC,EACexqC,MAAA4K,QAAA4/B,KACfzxC,EAAAR,EAAA,IAAAkyC,KAAAC,UAAAF,IAIA,IAAApE,EAAAhgC,EAAA7f,IAAA,cACA,EAAAwnB,EAAAvlB,QAAA49C,KACAP,EAAAO,aAEA,MACA,YACA,IAAAuE,EAAAvkC,EAAA7f,IAAA,MACA,EAAAynB,EAAA1B,QAAAq+B,KACA9E,EAAAz/B,OAAAukC,EAAA3kD,MAEA,MACA,iBACA,IACA2iD,EADAiC,EAAAxkC,EAAA7f,IAAA,MAOA,IALA,EAAAynB,EAAArB,UAAAi+B,GACAjC,GAAA,EAAA56B,EAAA7kB,eAAA0hD,EAAAh+B,aACW,EAAAmB,EAAA1lB,UAAAuiD,KACXjC,EAAAiC,GAEAjC,EAAA,CACA,IAAAkC,GAAA,+BACAC,EAAA,IAAAC,OAAA,SAAAF,EAAA7vC,KAAA,KAAA2d,MAAA,KAAA3d,KAAA,kEACAgwC,EAAAF,EAAAzxB,MAAA,EAAAtL,EAAA1mB,mBAAAshD,IACA,GAAAqC,KAAA,IACAjyC,EAAAiyC,EAAA,GACA,SAAAA,EAAA,sBAAAA,EAAA,KACAnF,EAAAO,WAAA,GAEA,OAGA,SACA,EAAAr4B,EAAA7mB,MAAA,iDAAA0f,EAAA,MACA,YAEKg/B,EAAA16B,IAAA,UACLkP,EAAAwrB,EAAAr/C,IAAA,SAEA,MAAAwnB,EAAA1lB,UAAA0Q,GAAA,CACAA,EAAAuxC,EAAAvxC,GACA,IAAAE,GAAA,EAAA8U,EAAA7lB,wBAAA6Q,EAAA+sC,GACA7sC,IACA4sC,EAAA9sC,IAAAE,EAAAgyC,MAEApF,EAAAM,UAAAptC,EAEAqhB,KACA,EAAApM,EAAA1B,QAAA8N,KACAA,IAAAp0B,QAEA,EAAA+nB,EAAA1lB,UAAA+xB,IAAApa,MAAA4K,QAAAwP,MACAyrB,EAAAzrB,cAtGA,EAAArM,EAAA7mB,MAAA,4DALA,EAAA6mB,EAAA7mB,MAAA,0DA+GAs8C,EAxqBA,GA0qBAF,EAAA,WACA,SAAAA,EAAAt9B,EAAAq+B,GACA1qC,KAAAqM,SACArM,KAAA0qC,aACA1qC,KAAAqtB,WACArtB,KAAAuxC,SAAA/kD,OAAAoT,OAAA,MACAI,KAAAwxC,SACAxxC,KAAAkyB,OACAC,eACAsf,cA8hBA,OA3hBA9H,EAAA18C,WACAykD,aAAA,SAAAC,GACA3xC,KAAA4xC,gBAAAD,IAEAjvB,MAAA,SAAAgM,GACA,IAAAmjB,EACAnjB,IAGA,EAAAta,EAAA7mB,MAAA,4BACAskD,EAAA7xC,KAAA8xC,gBAHAD,EAAA7xC,KAAA+xC,WAKAF,EAAAphC,WAAAzQ,MACAA,KAAAgyC,QAAAH,EACA,IAAAxG,EAAAwG,EAAAjlD,IAAA,WACA,MAAAynB,EAAAxC,QAAAw5B,GAAA,CACA,IAAA4G,EAAAJ,EAAAjlD,IAAA,MACAslD,EAAAD,KAAAxxC,OAAAwxC,EAAA,MACA5G,EAAA96B,oBAAA,EACAvQ,KAAAqrC,QAAA,IAAAb,EAAA2H,uBAAA9G,EAAA6G,EAAAlyC,KAAA0qC,WAAA0H,UAEA,KAAApyC,KAAA1U,KAAAumD,EAAAjlD,IAAA,SACA,UAAAwnB,EAAAzkB,YAAA,2BAGA0iD,iBAAA,SAAA9d,GACA,eAAAv0B,OACAA,KAAAsyC,YACAC,SAAA,EACAC,UAAAje,EAAA/F,MAAAniB,OAAAvK,IACA2wC,WAAAle,EAAA1F,KACA6jB,WAAAne,EAAAxF,OAGA,IAAAn9B,EAAAoO,KAAA2yC,cAAApe,GACA,OAAAlgB,EAAAzB,OAAAhhB,EAAA,WACA,UAAAwiB,EAAAzkB,YAAA,yDAEA,IAAAgT,EAAA4xB,EAAAzF,SAIA,KAHA,EAAAza,EAAAxC,QAAAlP,aACAA,YAEA,EAAA0R,EAAAxC,QAAAlP,GACA,UAAAyR,EAAAzkB,YAAA,0DAGA,cADAqQ,KAAAsyC,WACA3vC,GAEAgwC,cAAA,SAAApe,GACA,IAKA3iC,EALAya,EAAAkoB,EAAA/F,MAAAniB,OACAimC,EAAAtyC,KAAAsyC,WACAjmC,EAAAvK,IAAAwwC,EAAAE,UACAje,EAAA1F,KAAAyjB,EAAAG,WACAle,EAAAxF,KAAAujB,EAAAI,WAEA,SACA,uBAAAJ,MAAA,eAAAA,GAAA,CACA,MAAAj+B,EAAAzB,OAAAhhB,EAAA2iC,EAAAzF,SAAA,WACA,MAEAwjB,EAAAM,cAAAhhD,EACA0gD,EAAAO,WAAAte,EAAAzF,SAEA,IAAAlqB,EAAA0tC,EAAAM,cACAnxB,EAAA6wB,EAAAO,WACA,IAAA/0C,OAAAC,UAAA6G,KAAA9G,OAAAC,UAAA0jB,GACA,UAAArN,EAAAzkB,YAAA,wDAEA,QAAA5D,EAAAumD,EAAAC,SAAyCxmD,EAAA01B,EAAW11B,IAAA,CACpDumD,EAAAE,UAAAnmC,EAAAvK,IACAwwC,EAAAC,SAAAxmD,EACAumD,EAAAG,WAAAle,EAAA1F,KACAyjB,EAAAI,WAAAne,EAAAxF,KACA,IAAA+jB,KACAA,EAAA1wC,OAAAmyB,EAAAzF,SACAgkB,EAAA7gC,IAAAsiB,EAAAzF,SACA,IAAA9kB,EAAAuqB,EAAAzF,SAMA,IALA,EAAAza,EAAAzB,OAAA5I,EAAA,KACA8oC,EAAAC,MAAA,GACW,EAAA1+B,EAAAzB,OAAA5I,EAAA,OACX8oC,EAAAE,cAAA,IAEAl1C,OAAAC,UAAA+0C,EAAA1wC,UAAAtE,OAAAC,UAAA+0C,EAAA7gC,OAAA6gC,EAAAC,OAAAD,EAAAE,aACA,UAAA5+B,EAAAzkB,YAAA,qCAAAiV,EAAA,KAAA6c,GAEA,IAAA11B,GAAA+mD,EAAAC,MAAA,IAAAnuC,IACAA,EAAA,GAEA5E,KAAAqtB,QAAAthC,EAAA6Y,KACA5E,KAAAqtB,QAAAthC,EAAA6Y,GAAAkuC,GAGAR,EAAAC,SAAA,EACAD,EAAAE,UAAAnmC,EAAAvK,IACAwwC,EAAAG,WAAAle,EAAA1F,KACAyjB,EAAAI,WAAAne,EAAAxF,YACAujB,EAAAM,qBACAN,EAAAO,WAEA,GAAA7yC,KAAAqtB,QAAA,KAAArtB,KAAAqtB,QAAA,GAAA0lB,KACA,UAAA3+B,EAAAzkB,YAAA,+CAEA,OAAAiC,GAEAqhD,kBAAA,SAAA5mC,GACA,qBAAArM,MAAA,CACA,IAAAkzC,EAAA7mC,EAAA1J,KACAwwC,EAAAD,EAAAtmD,IAAA,KACAu3B,EAAA+uB,EAAAtmD,IAAA,SACAu3B,IACAA,GAAA,EAAA+uB,EAAAtmD,IAAA,UAEAoT,KAAAozC,aACAC,YAAAlvB,EACAgvB,aACAZ,SAAA,EACAC,UAAAnmC,EAAAvK,KAKA,OAFA9B,KAAAszC,eAAAjnC,UACArM,KAAAozC,YACA/mC,EAAA1J,MAEA2wC,eAAA,SAAAjnC,GACA,IAAAtgB,EAAAiuB,EACAo5B,EAAApzC,KAAAozC,YACA/mC,EAAAvK,IAAAsxC,EAAAZ,UACA,IAAAW,EAAAC,EAAAD,WACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GACAE,EAAAD,EAAAC,YACA,MAAAA,EAAA5yC,OAAA,GACA,IAAAmE,EAAAyuC,EAAA,GACAxmD,EAAAwmD,EAAA,GACA,IAAAv1C,OAAAC,UAAA6G,KAAA9G,OAAAC,UAAAlR,GACA,UAAAunB,EAAAzkB,YAAA,8BAAAiV,EAAA,KAAA/X,GAEA,IAAAiR,OAAAC,UAAAw1C,KAAAz1C,OAAAC,UAAAy1C,KAAA11C,OAAAC,UAAA01C,GACA,UAAAr/B,EAAAzkB,YAAA,qCAAAiV,EAAA,KAAA/X,GAEA,IAAAd,EAAAqnD,EAAAb,SAAsCxmD,EAAAc,IAAOd,EAAA,CAC7CqnD,EAAAb,SAAAxmD,EACAqnD,EAAAZ,UAAAnmC,EAAAvK,IACA,IAAAkI,EAAA,EACA5H,EAAA,EACAsxC,EAAA,EACA,IAAA15B,EAAA,EAAqBA,EAAAu5B,IAAoBv5B,EACzChQ,KAAA,EAAAqC,EAAAmI,UAKA,IAHA,IAAA++B,IACAvpC,EAAA,GAEAgQ,EAAA,EAAqBA,EAAAw5B,IAAsBx5B,EAC3C5X,KAAA,EAAAiK,EAAAmI,UAEA,IAAAwF,EAAA,EAAqBA,EAAAy5B,IAA0Bz5B,EAC/C05B,KAAA,EAAArnC,EAAAmI,UAEA,IAAAs+B,KAGA,OAFAA,EAAA1wC,SACA0wC,EAAA7gC,IAAAyhC,EACA1pC,GACA,OACA8oC,EAAAC,MAAA,EACA,MACA,OACAD,EAAAE,cAAA,EACA,MACA,OACA,MACA,QACA,UAAA5+B,EAAAzkB,YAAA,4BAAAqa,GAEAhK,KAAAqtB,QAAAzoB,EAAA7Y,KACAiU,KAAAqtB,QAAAzoB,EAAA7Y,GAAA+mD,GAGAM,EAAAb,SAAA,EACAa,EAAAZ,UAAAnmC,EAAAvK,IACAuxC,EAAAnZ,OAAA,OAGA4X,aAAA,WACA,IAAA6B,EAAA,EACAjkB,EAAA,GACAC,EAAA,GACAF,EAAA,GACAmkB,EAAA,GACAC,EAAA,GACA,SAAAC,EAAA/xC,EAAAK,GACA,IAAA2xC,EAAA,GACAvqC,EAAAzH,EAAAK,GACA,MAAAoH,IAAAkmB,GAAAlmB,IAAAmmB,GAAAnmB,IAAAqqC,EAAA,CACA,KAAAzxC,GAAAL,EAAAtB,OACA,MAEAszC,GAAApzC,OAAAC,aAAA4I,GACAA,EAAAzH,EAAAK,GAEA,OAAA2xC,EAEA,SAAAC,EAAAjyC,EAAAK,EAAAkW,GACA,IAAA7X,EAAA6X,EAAA7X,OACAwzC,EAAAlyC,EAAAtB,OACAixB,EAAA,EACA,MAAAtvB,EAAA6xC,EAAA,CACA,IAAAloD,EAAA,EACA,MAAAA,EAAA0U,GAAAsB,EAAAK,EAAArW,KAAAusB,EAAAvsB,KACAA,EAEA,GAAAA,GAAA0U,EACA,MAEA2B,IACAsvB,IAEA,OAAAA,EAEA,IAAAwiB,EAAA,yBACAC,EAAA,kBACAC,EAAA,8BACAC,EAAA,GACAC,EAAA,IAAAhzC,YAAA,6BACAizC,EAAA,IAAAjzC,YAAA,qCACAkzC,EAAA,IAAAlzC,YAAA,aACAmzC,EAAA,IAAAnzC,YAAA,mBACAtB,KAAAqtB,QAAA5sB,OAAA,EACA,IAAA4L,EAAArM,KAAAqM,OACAA,EAAAvK,IAAA,EACA,IAoEA/V,EAAA8V,EAKAc,EAzEAH,EAAA6J,EAAA4G,WACAkzB,EAAA95B,EAAAlK,MACA1B,EAAA+B,EAAA/B,OACAi0C,KACAC,KACA,MAAAxO,EAAA1lC,EAAA,CACA,IAAA+I,EAAAhH,EAAA2jC,GACA,GAAA38B,IAAAmqC,GAAAnqC,IAAAkmB,GAAAlmB,IAAAmmB,GAAAnmB,IAAAimB,EAIA,GAAAjmB,IAAAoqC,EAAA,CAUA,IACA1nD,EADA6nD,EAAAD,EAAAtxC,EAAA2jC,GAEA,OAAA4N,EAAArD,QAAA,aAAAqD,EAAAtzC,SAAA,KAAA29B,KAAA2V,EAAA,IAIS,GAAA7nD,EAAAgoD,EAAAx0B,KAAAq0B,GAAA,CACT,qBAAA/zC,KAAAqtB,QAAAnhC,EAAA,MACA8T,KAAAqtB,QAAAnhC,EAAA,KACAkW,OAAA+jC,EAAA95B,EAAAlK,MACA8P,IAAA,EAAA/lB,EAAA,GACA8mD,cAAA,IAGA,IAAA4B,OAAA,EACA/kB,EAAAsW,EAAA4N,EAAAtzC,OACA,MAAAovB,EAAArtB,EAAA/B,OAAA,CACA,IAAAo0C,EAAAhlB,EAAAmkB,EAAAxxC,EAAAqtB,EAAA2kB,GAAA,EACAI,EAAAC,EAAA1O,EACA,IAAA2O,EAAA9zC,KAAAqD,IAAAwwC,EAAAR,EAAAxkB,GACAklB,GAAA,EAAA3gC,EAAA7kB,eAAAiT,EAAArB,SAAA2zC,EAAAD,IACA,GAAAV,EAAA/V,KAAA2W,GACA,MAEA,IAAAC,EAAAZ,EAAA10B,KAAAq1B,GACA,GAAAC,KAAA,KACA,EAAA5gC,EAAA7mB,MAAA,2GACAqnD,GAAAI,EAAA,GAAAv0C,OACA,MAGAovB,GAAA+kB,EAEA,IAAAK,EAAAzyC,EAAArB,SAAAglC,IAAAyO,GACAM,EAAAlB,EAAAiB,EAAA,EAAAR,GACAS,EAAAN,GAAAK,EAAAC,EAAA,QACAP,EAAAvzC,KAAA+kC,EAAA95B,EAAAlK,OACAnC,KAAAuxC,SAAApL,EAAA95B,EAAAlK,OAAA,GAEAgkC,GAAAyO,OACS,IAAAb,EAAArD,QAAA,gBAAAqD,EAAAtzC,SAAA,KAAA29B,KAAA2V,EAAA,IAIT5N,GAAA4N,EAAAtzC,OAAA,GAHAi0C,EAAAtzC,KAAA+kC,GACAA,GAAA6N,EAAAxxC,EAAA2jC,EAAAoO,SAvCApO,GAAA6N,EAAAxxC,EAAA2jC,EAAAmO,GACAI,EAAAtzC,KAAA+kC,GACAA,GAAA6N,EAAAxxC,EAAA2jC,EAAAoO,QAdA,GAEA,KADApO,EACAA,GAAA1lC,EACA,MAEA+I,EAAAhH,EAAA2jC,SACW38B,IAAAkmB,GAAAlmB,IAAAmmB,SAVXwW,EA6DA,IAAAp6C,EAAA,EAAA8V,EAAA8yC,EAAAl0C,OAAuC1U,EAAA8V,IAAQ9V,EAC/CiU,KAAA4xC,eAAAxwC,KAAAuzC,EAAA5oD,IACAiU,KAAA+xC,UAAA,GAGA,IAAAhmD,EAAA,EAAA8V,EAAA6yC,EAAAj0C,OAAuC1U,EAAA8V,IAAQ9V,EAAA,CAC/CsgB,EAAAvK,IAAA4yC,EAAA3oD,GACA,IAAAwoC,EAAA,IAAA+V,EAAA1c,OAAA,IAAA0c,EAAAxc,MAAAzhB,IAAA,EAAArM,MAAA,GACApO,EAAA2iC,EAAAzF,SACA,MAAAza,EAAAzB,OAAAhhB,EAAA,aAGA+Q,EAAA4xB,EAAAzF,UACA,EAAAza,EAAAxC,QAAAlP,IAGAA,EAAA4O,IAAA,OACA,OAAA5O,EAGA,GAAAA,EACA,OAAAA,EAEA,UAAAyR,EAAA1jB,oBAAA,0BAEAqhD,SAAA,SAAArjB,GACA,IAAAriB,EAAArM,KAAAqM,OACA8oC,EAAA3oD,OAAAoT,OAAA,MACA,IACA,MAAAI,KAAA4xC,eAAAnxC,OAAA,CACA,IAAAkxC,EAAA3xC,KAAA4xC,eAAA,GACA,GAAAuD,EAAAxD,IACA,EAAAv9B,EAAA7mB,MAAA,+DACAyS,KAAA4xC,eAAA57B,YAFA,CAKAm/B,EAAAxD,IAAA,EACAtlC,EAAAvK,IAAA6vC,EAAAtlC,EAAAlK,MACA,IAEAQ,EAFA4xB,EAAA,IAAA+V,EAAA1c,OAAA,IAAA0c,EAAAxc,MAAAzhB,IAAA,EAAArM,MACApO,EAAA2iC,EAAAzF,SAEA,MAAAza,EAAAzB,OAAAhhB,EAAA,SAMA,GALA+Q,EAAA3C,KAAAqyC,iBAAA9d,GACAv0B,KAAAo1C,UACAp1C,KAAAo1C,QAAAzyC,GAEA/Q,EAAA+Q,EAAA/V,IAAA,WACAkR,OAAAC,UAAAnM,GAAA,CACA,IAAAkQ,EAAAlQ,EACAkQ,KAAA9B,KAAAuxC,WACAvxC,KAAAuxC,SAAAzvC,GAAA,EACA9B,KAAA4xC,eAAAxwC,KAAAU,SAGW,KAAAhE,OAAAC,UAAAnM,GAYX,UAAAwiB,EAAAzkB,YAAA,8BAXA,IAAAmO,OAAAC,UAAAw2B,EAAAzF,aAAA,EAAAza,EAAAzB,OAAA2hB,EAAAzF,SAAA,YAAAza,EAAArB,UAAAphB,EAAA2iC,EAAAzF,UACA,UAAA1a,EAAAzkB,YAAA,uBAMA,GAJAgT,EAAA3C,KAAAizC,kBAAArhD,GACAoO,KAAAo1C,UACAp1C,KAAAo1C,QAAAzyC,IAEAA,EACA,UAAAyR,EAAAzkB,YAAA,8BAKAiC,EAAA+Q,EAAA/V,IAAA,QACAkR,OAAAC,UAAAnM,GACAoO,KAAA4xC,eAAAxwC,KAAAxP,IACW,EAAAyiB,EAAAnD,OAAAtf,IACXoO,KAAA4xC,eAAAxwC,KAAAxP,EAAAogB,KAEAhS,KAAA4xC,eAAA57B,SAEA,OAAAhW,KAAAo1C,QACO,MAAAn2C,GACP,GAAAA,aAAAmV,EAAA5jB,qBACA,MAAAyO,GAEA,EAAAmV,EAAArlB,MAAA,yBAAAkQ,GAEA,IAAAyvB,EAGA,UAAAta,EAAAxkB,oBAEAylD,SAAA,SAAAtpD,GACA,IAAAupD,EAAAt1C,KAAAqtB,QAAAthC,GACA,OAAAupD,MAAAvC,MAAAuC,EAAAlzC,OACAkzC,EAEA,MAEAxkC,WAAA,SAAAlf,EAAA2e,GACA,SAAA8D,EAAAnD,OAAAtf,GAGAoO,KAAAmR,MAAAvf,EAAA2e,GAFA3e,GAIAuf,MAAA,SAAAgB,EAAA5B,GACA,OAAA8D,EAAAnD,OAAAiB,GACA,UAAA/T,MAAA,iCAEA,IAAA4T,EAAAG,EAAAH,IACA,GAAAA,KAAAhS,KAAAwxC,MAAA,CACA,IAAArgB,EAAAnxB,KAAAwxC,MAAAx/B,GAIA,OAHAmf,aAAA9c,EAAAnE,OAAAihB,EAAA7gB,QACA6gB,EAAA7gB,MAAA6B,EAAAjH,YAEAimB,EAEA,IAAAmkB,EAAAt1C,KAAAq1C,SAAArjC,GACA,cAAAsjC,EACAt1C,KAAAwxC,MAAAx/B,GAAA,MAGAsjC,EADAA,EAAAtC,aACAhzC,KAAAu1C,kBAAApjC,EAAAmjC,EAAA/kC,GAEAvQ,KAAAw1C,gBAAAF,EAAA/kC,IAEA,EAAA8D,EAAAxC,QAAAyjC,GACAA,EAAAhlC,MAAA6B,EAAAjH,YACO,EAAAmJ,EAAArB,UAAAsiC,KACPA,EAAA3yC,KAAA2N,MAAA6B,EAAAjH,YAEAoqC,IAEAC,kBAAA,SAAApjC,EAAAmjC,EAAA/kC,GACA,IAAA0B,EAAAE,EAAAF,IACAD,EAAAG,EAAAH,IACA,GAAAsjC,EAAArjC,QACA,UAAAmC,EAAAzkB,YAAA,mCAEA,IAAA0c,EAAArM,KAAAqM,OAAA8I,cAAAmgC,EAAAlzC,OAAApC,KAAAqM,OAAAlK,OACAoyB,EAAA,IAAA+V,EAAA1c,OAAA,IAAA0c,EAAAxc,MAAAzhB,IAAA,EAAArM,MACAyG,EAAA8tB,EAAAzF,SACApoB,EAAA6tB,EAAAzF,SACA0F,EAAAD,EAAAzF,SAOA,GANAhxB,OAAAC,UAAA0I,KACAA,EAAAgvC,SAAAhvC,EAAA,KAEA3I,OAAAC,UAAA2I,KACAA,EAAA+uC,SAAA/uC,EAAA,KAEAD,IAAAuL,GAAAtL,IAAAuL,KAAA,EAAAoC,EAAAzB,OAAA4hB,GACA,UAAApgB,EAAAzkB,YAAA,kBAEA,WAAA6kC,EAAAzkB,IAAA,CACA,OAAAykB,EAAAzkB,IAAA2gC,QAAA,SACA1+B,EAAAyjC,SAAAjhB,EAAAzkB,IAAA2lC,UAAA,QACA53C,OAAAq3B,MAAAnjB,IACA,OAAAA,EAGA,UAAAoC,EAAAzkB,YAAA,kBAUA,OAPA2lD,EADAt1C,KAAAqrC,UAAA96B,EACAgkB,EAAAzF,OAAA9uB,KAAAqrC,QAAAsK,sBAAA3jC,EAAAC,IAEAsiB,EAAAzF,UAEA,EAAAza,EAAArB,UAAAsiC,KACAt1C,KAAAwxC,MAAAx/B,GAAAsjC,GAEAA,GAEAE,gBAAA,SAAAF,EAAA/kC,GACA,IAAAqlC,EAAAN,EAAAlzC,OACAiK,EAAArM,KAAAmR,MAAA,IAAAkD,EAAAtC,IAAA6jC,EAAA,IACA,OAAAvhC,EAAArB,UAAA3G,GACA,UAAA+H,EAAAzkB,YAAA,qBAEA,IAAAiV,EAAAyH,EAAA1J,KAAA/V,IAAA,SACAC,EAAAwf,EAAA1J,KAAA/V,IAAA,KACA,IAAAkR,OAAAC,UAAA6G,KAAA9G,OAAAC,UAAAlR,GACA,UAAAunB,EAAAzkB,YAAA,oDAEA,IAAA4kC,EAAA,IAAA+V,EAAA1c,OAAA,IAAA0c,EAAAxc,MAAAzhB,IAAA,EAAArM,MACAu0B,EAAA9F,cAAA,EACA,IAAA1iC,EAEAimB,EADAqb,KAEAwgB,KACA,IAAA9hD,EAAA,EAAiBA,EAAAc,IAAOd,EAAA,CAExB,GADAimB,EAAAuiB,EAAAzF,UACAhxB,OAAAC,UAAAiU,GACA,UAAAoC,EAAAzkB,YAAA,+CAAAqiB,GAEA67B,EAAAzsC,KAAA4Q,GACA,IAAA5P,EAAAmyB,EAAAzF,SACA,IAAAhxB,OAAAC,UAAAqE,GACA,UAAAgS,EAAAzkB,YAAA,+CAAAyS,GAGA,IAAArW,EAAA,EAAiBA,EAAAc,IAAOd,EAAA,CACxBshC,EAAAjsB,KAAAmzB,EAAAzF,WACA,EAAAza,EAAAzB,OAAA2hB,EAAA1F,KAAA,WACA0F,EAAAve,QAEAhE,EAAA67B,EAAA9hD,GACA,IAAA+mD,EAAA9yC,KAAAqtB,QAAArb,GACA8gC,KAAA1wC,SAAAwzC,GAAA9C,EAAA7gC,MAAAlmB,IACAiU,KAAAwxC,MAAAx/B,GAAAqb,EAAAthC,IAIA,GADAupD,EAAAjoB,EAAAioB,EAAArjC,UACAzgB,IAAA8jD,EACA,UAAAlhC,EAAAzkB,YAAA,wCAEA,OAAA2lD,GAEAtkC,gBAAA,SAAApf,EAAA2e,GACA,SAAA8D,EAAAnD,OAAAtf,GAGAoO,KAAA8vC,WAAAl+C,EAAA2e,GAFA5G,QAAAC,QAAAhY,IAIAk+C,WAAA,SAAA39B,EAAA5B,GACA,IAAAslC,EAAA71C,KAAAqM,OAAAg5B,QACAj1B,EAAApQ,KACA,WAAA2J,QAAA,SAAAmsC,EAAAlsC,EAAAC,GACA,IACAD,EAAAwG,EAAAe,MAAAgB,EAAA5B,IACS,MAAAtR,GACT,GAAAA,aAAAmV,EAAA5jB,qBAIA,YAHAqlD,EAAApN,aAAAxpC,EAAAkB,MAAAlB,EAAAmB,KAAAwM,KAAA,WACAkpC,EAAAlsC,EAAAC,IACaA,GAGbA,EAAA5K,OAIA4rC,cAAA,WACA,OAAA7qC,KAAA1U,OAGAq+C,EAviBA,GAyiBAoM,EAAA,WACA,SAAAA,EAAAzqD,EAAA8kB,IACA,EAAAgE,EAAA9mB,aAAA,uCA+FA,OA7FAyoD,EAAA9oD,WACAmgD,OAAA,WACA,IAAAzqC,EAAAnW,OAAAoT,OAAA,MACA,IAAAI,KAAA1U,KACA,OAAAqX,EAEA,IAAAyN,EAAApQ,KAAAoQ,KACAy7B,EAAA,IAAAx3B,EAAAnC,OACA25B,EAAAz5B,IAAApS,KAAA1U,MACA,IAAAotC,GAAA14B,KAAA1U,MACA,MAAAotC,EAAAj4B,OAAA,GACA,IAAA1U,EAAAc,EACA+E,EAAAwe,EAAAU,WAAA4nB,EAAA1iB,SACA,MAAA3B,EAAAxC,QAAAjgB,GAGA,GAAAA,EAAA2f,IAAA,SACA,IAAAw+B,EAAAn+C,EAAAhF,IAAA,QACA,IAAAb,EAAA,EAAAc,EAAAkjD,EAAAtvC,OAAsC1U,EAAAc,EAAOd,IAAA,CAC7C,IAAAykD,EAAAT,EAAAhkD,GACA,GAAA8/C,EAAAt6B,IAAAi/B,GACA,UAAAp8B,EAAAzkB,YAAA,uBAAAqQ,KAAAg2C,MAAA,WAEAtd,EAAAt3B,KAAAovC,GACA3E,EAAAz5B,IAAAo+B,QARA,CAYA,IAAAnjB,EAAAz7B,EAAAhF,IAAAoT,KAAAg2C,OACA,GAAA3vC,MAAA4K,QAAAoc,GACA,IAAAthC,EAAA,EAAAc,EAAAwgC,EAAA5sB,OAAyC1U,EAAAc,EAAOd,GAAA,EAChD4W,EAAAyN,EAAAU,WAAAuc,EAAAthC,KAAAqkB,EAAAU,WAAAuc,EAAAthC,EAAA,KAIA,OAAA4W,GAEA/V,IAAA,SAAAgW,GACA,IAAA5C,KAAA1U,KACA,YAEA,IAIAU,EAAAsX,EAAApX,EAJAkkB,EAAApQ,KAAAoQ,KACA6lC,EAAA7lC,EAAAU,WAAA9Q,KAAA1U,MACA4X,EAAA,EACAgzC,EAAA,GAEA,MAAAD,EAAA1kC,IAAA,SACA,KAAArO,EAAAgzC,EAEA,OADA,EAAA9hC,EAAA7mB,MAAA,mCAAAyS,KAAAg2C,MAAA,WACA,KAEA,IAAAjG,EAAAkG,EAAArpD,IAAA,QACA,IAAAyZ,MAAA4K,QAAA8+B,GACA,YAEA/jD,EAAA,EACAsX,EAAAysC,EAAAtvC,OAAA,EACA,MAAAzU,GAAAsX,EAAA,CACApX,EAAAF,EAAAsX,GAAA,EACA,IAAAktC,EAAApgC,EAAAU,WAAAi/B,EAAA7jD,IACAiqD,EAAA3F,EAAA5jD,IAAA,UACA,GAAAgW,EAAAwN,EAAAU,WAAAqlC,EAAA,IACA7yC,EAAApX,EAAA,MACW,MAAA0W,EAAAwN,EAAAU,WAAAqlC,EAAA,KAEA,CACXF,EAAA7lC,EAAAU,WAAAi/B,EAAA7jD,IACA,MAHAF,EAAAE,EAAA,GAMA,GAAAF,EAAAsX,EACA,YAGA,IAAA+pB,EAAA4oB,EAAArpD,IAAAoT,KAAAg2C,OACA,GAAA3vC,MAAA4K,QAAAoc,GAAA,CACArhC,EAAA,EACAsX,EAAA+pB,EAAA5sB,OAAA,EACA,MAAAzU,GAAAsX,EAAA,CACApX,EAAAF,EAAAsX,GAAA,EACA,IAAA8yC,EAAAhmC,EAAAU,WAAAuc,EAAAnhC,IACA,GAAA0W,EAAAwzC,EACA9yC,EAAApX,EAAA,MACW,MAAA0W,EAAAwzC,GAGX,OAAAhmC,EAAAU,WAAAuc,EAAAnhC,EAAA,IAFAF,EAAAE,EAAA,IAMA,cAGA6pD,EAjGA,GAmGA7I,EAAA,WACA,SAAAA,EAAA5hD,EAAA8kB,GACApQ,KAAA1U,OACA0U,KAAAoQ,OACApQ,KAAAg2C,MAAA,QAGA,OADA5hC,EAAAvkB,KAAA8W,QAAAumC,EAAA6I,MACA7I,EAPA,GASAU,EAAA,WACA,SAAAA,EAAAtiD,EAAA8kB,GACApQ,KAAA1U,OACA0U,KAAAoQ,OACApQ,KAAAg2C,MAAA,OAGA,OADA5hC,EAAAvkB,KAAA8W,QAAAinC,EAAAmI,MACAnI,EAPA,GASAlE,EAAA,WACA,SAAAA,EAAAp+C,EAAA8kB,GACA9kB,IAAA,EAAA+oB,EAAAxC,QAAAvmB,KAGA0U,KAAAoQ,OACApQ,KAAA1U,OACAA,EAAAimB,IAAA,QACAvR,KAAA4uC,GAAAtjD,EAAAsB,IAAA,OAEAoT,KAAAq2C,YAAA/qD,EAAAimB,IAAA,WAAA6C,EAAA1mB,mBAAApC,EAAAsB,IAAA,YACAtB,EAAAimB,IAAA,QACA,EAAA6C,EAAA7mB,MAAA,iDAEAyS,KAAAs2C,kBAAA,EACAhrD,EAAAimB,IAAA,QACAvR,KAAAs2C,kBAAA,GACA,EAAAliC,EAAA7mB,MAAA,wDAGA,SAAAgpD,EAAA5zC,GACA,OAAAA,EAAA4O,IAAA,MACA5O,EAAA/V,IAAA,MACK+V,EAAA4O,IAAA,KACL5O,EAAA/V,IAAA,KACK+V,EAAA4O,IAAA,QACL5O,EAAA/V,IAAA,QACK+V,EAAA4O,IAAA,OACL5O,EAAA/V,IAAA,OACK+V,EAAA4O,IAAA,OACL5O,EAAA/V,IAAA,OAEA,KAsCA,OApCA88C,EAAAz8C,WACAupD,eACA,IAAAx2C,KAAAy2C,WAAAz2C,KAAA1U,KAAA,CACA,IAAAkrD,EAAAD,EAAAv2C,KAAA1U,OAAA,UACA0U,KAAAy2C,WAAA,EAAAriC,EAAA1mB,mBAAA8oD,GAAAj2C,QAAA,cAAAA,QAAA,aAAAA,QAAA,WAEA,OAAAP,KAAAy2C,WAEAxB,cACA,IAAAj1C,KAAAs2C,iBACA,aAEAt2C,KAAA02C,YAAA12C,KAAA1U,OACA0U,KAAA02C,WAAAH,EAAAv2C,KAAA1U,KAAAsB,IAAA,QAEA,IAAAqoD,EAAA,KACA,GAAAj1C,KAAA02C,WAAA,CACA,IAAAtmC,EAAApQ,KAAAoQ,KACAumC,EAAAvmC,EAAAU,WAAA9Q,KAAA02C,YACAC,IAAA,EAAAtiC,EAAArB,UAAA2jC,GACA1B,EAAA0B,EAAA1jC,YAEA,EAAAmB,EAAA7mB,MAAA,2EAGA,EAAA6mB,EAAA7mB,MAAA,uDAEA,OAAA0nD,GAEApG,mBACA,OACA2H,SAAAx2C,KAAAw2C,SACAvB,QAAAj1C,KAAAi1C,WAIAvL,EAtEA,GAwEAE,EAAA,WACA,SAAAgN,EAAAvpD,GACA,SAAAgnB,EAAAnD,OAAA7jB,KAAA,EAAAgnB,EAAAxC,QAAAxkB,IAAAgZ,MAAA4K,QAAA5jB,KAAA,EAAAgnB,EAAArB,UAAA3lB,GAEA,SAAAwpD,EAAAvG,EAAAZ,GACA,MAAAr7B,EAAAxC,QAAAy+B,KAAA,EAAAj8B,EAAArB,UAAAs9B,GAGA,IAFA,IAAA3tC,GAAA,EAAA0R,EAAAxC,QAAAy+B,OAAA3tC,KACAm0C,EAAAn0C,EAAA0O,UACAtlB,EAAA,EAAA8V,EAAAi1C,EAAAr2C,OAA2C1U,EAAA8V,EAAQ9V,IAAA,CACnD,IAAAgrD,EAAAp0C,EAAAyO,OAAA0lC,EAAA/qD,IACA6qD,EAAAG,IACArH,EAAAtuC,KAAA21C,QAGK,GAAA1wC,MAAA4K,QAAAq/B,GACL,QAAAjG,EAAA,EAAA2M,EAAA1G,EAAA7vC,OAAyC4pC,EAAA2M,EAAU3M,IAAA,CACnD,IAAAh9C,EAAAijD,EAAAjG,GACAuM,EAAAvpD,IACAqiD,EAAAtuC,KAAA/T,IAKA,SAAAu8C,EAAAjnC,EAAA2O,EAAAlB,GACApQ,KAAA2C,OACA3C,KAAAsR,OACAtR,KAAAoQ,OACApQ,KAAAi3C,OAAA,KACAj3C,KAAAyJ,WAAA,KAmFA,OAjFAmgC,EAAA38C,WACAiqD,KAAA,WAEA,GADAl3C,KAAAyJ,YAAA,EAAA2K,EAAA/kB,6BACA2Q,KAAAoQ,KAAA/D,kBAAAk+B,EAAAnF,gBAAA,IAAAplC,KAAAoQ,KAAA/D,OAAAs5B,mBAAAllC,OAEA,OADAT,KAAAyJ,WAAAG,UACA5J,KAAAyJ,WAAAC,QAEA,IAAA4H,EAAAtR,KAAAsR,KACA3O,EAAA3C,KAAA2C,KAEA3C,KAAAi3C,OAAA,IAAA5iC,EAAAnC,OAEA,IADA,IAAAw9B,KACA3jD,EAAA,EAAA8V,EAAAyP,EAAA7Q,OAAuC1U,EAAA8V,EAAQ9V,IAAA,CAC/C,IAAAgrD,EAAAp0C,EAAAyO,OAAAE,EAAAvlB,SACAyF,IAAAulD,GACArH,EAAAtuC,KAAA21C,GAIA,OADA/2C,KAAAm3C,MAAAzH,GACA1vC,KAAAyJ,WAAAC,SAEAytC,MAAA,SAAAzH,GACA,IAAArhC,EAAArO,KAEAo3C,KACAC,KACA,MAAA3H,EAAAjvC,OAAA,CACA,IAAAmvC,EAAAF,EAAAG,MACA,MAAAx7B,EAAAnD,OAAA0+B,GAAA,CACA,GAAA5vC,KAAAi3C,OAAA1lC,IAAAq+B,GACA,SAEA,IACA5vC,KAAAi3C,OAAA7kC,IAAAw9B,GACAA,EAAA5vC,KAAAoQ,KAAAe,MAAAy+B,GACW,MAAArwC,GACX,KAAAA,aAAA6U,EAAA5jB,sBACA,MAAA+O,EAEA63C,EAAAh2C,KAAAwuC,GACAyH,EAAAj2C,MACAjB,MAAAZ,EAAAY,MACAC,IAAAb,EAAAa,OAIA,GAAAwvC,KAAA95B,eAAA,CAGA,IAFA,IAAAI,EAAA05B,EAAA95B,iBACAwhC,GAAA,EACAvrD,EAAA,EAAA8V,EAAAqU,EAAAzV,OAAkD1U,EAAA8V,EAAQ9V,IAAA,CAC1D,IAAAsgB,EAAA6J,EAAAnqB,GACAsgB,EAAAs5B,kBAAAt5B,EAAAs5B,mBAAAllC,SACA62C,GAAA,EACAD,EAAAj2C,MACAjB,MAAAkM,EAAAlK,MACA/B,IAAAiM,EAAAjM,OAIAk3C,GACAF,EAAAh2C,KAAAwuC,GAGAiH,EAAAjH,EAAAF,GAEA2H,EAAA52C,OACAT,KAAAoQ,KAAA/D,OAAAg5B,QAAAuD,cAAAyO,GAAAzqC,KAAA,WACA,QAAA2qC,EAAA,EAAAC,EAAAJ,EAAA32C,OAAyD82C,EAAAC,EAAYD,IAAA,CACrE,IAAAjH,EAAA8G,EAAAG,IACA,EAAAljC,EAAAnD,OAAAo/B,IACAjiC,EAAA4oC,OAAA5kC,OAAAi+B,GAGAjiC,EAAA8oC,MAAAC,IACSp3C,KAAAyJ,WAAAI,SAGT7J,KAAAi3C,OAAA,KACAj3C,KAAAyJ,WAAAG,aAGAggC,EA/GA,GAiHAn+C,EAAAo+C,UACAp+C,EAAAm+C,eACAn+C,EAAAk+C,OACAl+C,EAAAi+C,YAIA,SAAAl+C,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAgsD,qBAAAjmD,EAEA,IAAA4iB,EAAAvoB,EAAA,GAEA4rD,EAAA,WACA,IAAAC,GAAA,EACAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,KAAA,iBAAAD,IAAA,EAAAD,IAAA,EAAAD,IAAA,EAAAA,IAAA,EAAAD,IAAA,EAAAA,IAAA,EAAAL,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAC,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAG,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAD,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAD,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IACAQ,KAAA,UAAAZ,KAAA,+QACAa,KAAA,42GACAC,KAAA,kBAAAd,IAAA,GAAAA,KAAA,qkCACAe,IAAA,u3CACAC,KAAA,uYACA,SAAAjB,EAAAn8B,GACA,IAAAq9B,EAAAxuC,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,GAAAA,UAAA,MAEA,IAAAmR,GAAA,oBAAAA,EAAAoS,KACA,UAAAtvB,MAAA,iDAEA4B,KAAAsb,SACAtb,KAAAuV,KAAA,EACAvV,KAAA44C,SAAAD,EAAA,QACA34C,KAAA64C,OAAAF,EAAA,iBACA34C,KAAA84C,UAAAH,EAAA,wBACA34C,KAAAoZ,QAAAu/B,EAAA,iBACA34C,KAAA+4C,KAAAJ,EAAA,WACA,IAAAK,EAAAL,EAAA,cACA,OAAAK,QAAAxnD,IAAAwnD,IACAA,GAAA,GAEAh5C,KAAAg5C,UACAh5C,KAAAi5C,MAAAN,EAAA,gBACA34C,KAAAk5C,WAAA,IAAA32C,YAAAvC,KAAAoZ,QAAA,GACApZ,KAAAm5C,QAAA,IAAA52C,YAAAvC,KAAAoZ,QAAA,GACApZ,KAAAk5C,WAAA,GAAAl5C,KAAAoZ,QACApZ,KAAAo5C,UAAA,EACAp5C,KAAAq5C,IAAA,EACAr5C,KAAAs5C,WAAAt5C,KAAA44C,SAAA,EACA54C,KAAAu5C,UAAA,EACAv5C,KAAAw5C,SAAA,EACAx5C,KAAAy5C,WAAA,EACAz5C,KAAA05C,UAAA,EACA,IAAAhhC,OAAA,EACA,WAAAA,EAAA1Y,KAAA25C,UAAA,KACA35C,KAAA45C,SAAA,GAEA,IAAAlhC,GACA1Y,KAAA45C,SAAA,IAEA55C,KAAA44C,SAAA,IACA54C,KAAAs5C,YAAAt5C,KAAA25C,UAAA,GACA35C,KAAA45C,SAAA,IAqdA,OAldAnC,EAAAxqD,WACA4sD,aAAA,WACA,GAAA75C,KAAAuV,IACA,SAEA,IAAA4jC,EAAAn5C,KAAAm5C,QACAD,EAAAl5C,KAAAk5C,WACA9/B,EAAApZ,KAAAoZ,QACA0gC,OAAA,EACAC,OAAA,EACAhjC,OAAA,EACAhrB,OAAA,EACA,OAAAiU,KAAAy5C,WAAA,CAIA,GAHAz5C,KAAA05C,WACA15C,KAAAuV,KAAA,GAEAvV,KAAAuV,IACA,SAEAvV,KAAAupC,KAAA,EACA,IAAA7wB,OAAA,EACAhB,OAAA,EACAsiC,OAAA,EACA,GAAAh6C,KAAAs5C,WAAA,CACA,IAAAvtD,EAAA,EAAqBmtD,EAAAntD,GAAAqtB,IAAyBrtB,EAC9CotD,EAAAptD,GAAAmtD,EAAAntD,GAEAotD,EAAAptD,KAAAqtB,EACA+/B,EAAAptD,GAAAqtB,EACA8/B,EAAA,KACAl5C,KAAAo5C,UAAA,EACAU,EAAA,EACAC,EAAA,EACA,MAAAb,EAAAl5C,KAAAo5C,WAAAhgC,EAEA,OADAV,EAAA1Y,KAAAi6C,iBACAvhC,GACA,KAAAk/B,EACA53C,KAAAk6C,WAAAf,EAAAW,EAAA,GAAAC,GACAZ,EAAAW,EAAA,GAAA1gC,IACA0gC,GAAA,GAEA,MACA,KAAAjC,EAEA,GADAn/B,EAAAhB,EAAA,EACAqiC,EAAA,CACA,GACArhC,GAAAshC,EAAAh6C,KAAAm6C,sBACmBH,GAAA,IACnB,GACAtiC,GAAAsiC,EAAAh6C,KAAAo6C,sBACmBJ,GAAA,QACF,CACjB,GACAthC,GAAAshC,EAAAh6C,KAAAo6C,sBACmBJ,GAAA,IACnB,GACAtiC,GAAAsiC,EAAAh6C,KAAAm6C,sBACmBH,GAAA,IAEnBh6C,KAAAk6C,WAAAhB,EAAAl5C,KAAAo5C,WAAA1gC,EAAAqhC,GACAb,EAAAl5C,KAAAo5C,WAAAhgC,GACApZ,KAAAk6C,WAAAhB,EAAAl5C,KAAAo5C,WAAA1hC,EAAA,EAAAqiC,GAEA,MAAAZ,EAAAW,IAAAZ,EAAAl5C,KAAAo5C,YAAAD,EAAAW,GAAA1gC,EACA0gC,GAAA,EAEA,MACA,KAAA3B,EAGA,GAFAn4C,KAAAk6C,WAAAf,EAAAW,GAAA,EAAAC,GACAA,GAAA,EACAb,EAAAl5C,KAAAo5C,WAAAhgC,EAAA,GACA0gC,EACA,MAAAX,EAAAW,IAAAZ,EAAAl5C,KAAAo5C,YAAAD,EAAAW,GAAA1gC,EACA0gC,GAAA,EAGA,MACA,KAAA7B,EAGA,GAFAj4C,KAAAk6C,WAAAf,EAAAW,GAAA,EAAAC,GACAA,GAAA,EACAb,EAAAl5C,KAAAo5C,WAAAhgC,EAAA,GACA0gC,EACA,MAAAX,EAAAW,IAAAZ,EAAAl5C,KAAAo5C,YAAAD,EAAAW,GAAA1gC,EACA0gC,GAAA,EAGA,MACA,KAAA/B,EAGA,GAFA/3C,KAAAk6C,WAAAf,EAAAW,GAAA,EAAAC,GACAA,GAAA,EACAb,EAAAl5C,KAAAo5C,WAAAhgC,EAAA,GACA0gC,EACA,MAAAX,EAAAW,IAAAZ,EAAAl5C,KAAAo5C,YAAAD,EAAAW,GAAA1gC,EACA0gC,GAAA,EAGA,MACA,KAAAhC,EAGA,GAFA93C,KAAAk6C,WAAAf,EAAAW,GAAAC,GACAA,GAAA,EACAb,EAAAl5C,KAAAo5C,WAAAhgC,EAAA,GACA0gC,EACA,MAAAX,EAAAW,IAAAZ,EAAAl5C,KAAAo5C,YAAAD,EAAAW,GAAA1gC,EACA0gC,GAAA,EAGA,MACA,KAAA1B,EAGA,GAFAp4C,KAAAq6C,cAAAlB,EAAAW,GAAA,EAAAC,GACAA,GAAA,EACAb,EAAAl5C,KAAAo5C,WAAAhgC,EAAA,CACA0gC,EAAA,IACAA,IAEAA,EAEA,MAAAX,EAAAW,IAAAZ,EAAAl5C,KAAAo5C,YAAAD,EAAAW,GAAA1gC,EACA0gC,GAAA,EAGA,MACA,KAAA5B,EAGA,GAFAl4C,KAAAq6C,cAAAlB,EAAAW,GAAA,EAAAC,GACAA,GAAA,EACAb,EAAAl5C,KAAAo5C,WAAAhgC,EAAA,CACA0gC,EAAA,IACAA,IAEAA,EAEA,MAAAX,EAAAW,IAAAZ,EAAAl5C,KAAAo5C,YAAAD,EAAAW,GAAA1gC,EACA0gC,GAAA,EAGA,MACA,KAAA9B,EAGA,GAFAh4C,KAAAq6C,cAAAlB,EAAAW,GAAA,EAAAC,GACAA,GAAA,EACAb,EAAAl5C,KAAAo5C,WAAAhgC,EAAA,CACA0gC,EAAA,IACAA,IAEAA,EAEA,MAAAX,EAAAW,IAAAZ,EAAAl5C,KAAAo5C,YAAAD,EAAAW,GAAA1gC,EACA0gC,GAAA,EAGA,MACA,KAAAnC,EACA33C,KAAAk6C,WAAA9gC,EAAA,GACApZ,KAAAuV,KAAA,EACA,MACA,SACA,EAAAnB,EAAArlB,MAAA,eACAiR,KAAAk6C,WAAA9gC,EAAA,GACApZ,KAAAupC,KAAA,OAGS,CACT2P,EAAA,KACAl5C,KAAAo5C,UAAA,EACAW,EAAA,EACA,MAAAb,EAAAl5C,KAAAo5C,WAAAhgC,EAAA,CAEA,GADAV,EAAA,EACAqhC,EACA,GACArhC,GAAAshC,EAAAh6C,KAAAm6C,sBACeH,GAAA,SAEf,GACAthC,GAAAshC,EAAAh6C,KAAAo6C,sBACeJ,GAAA,IAEfh6C,KAAAk6C,WAAAhB,EAAAl5C,KAAAo5C,WAAA1gC,EAAAqhC,GACAA,GAAA,GAGA,IAAAO,GAAA,EAIA,GAHAt6C,KAAA84C,YACA94C,KAAAu5C,YAAA,GAEAv5C,KAAAg5C,SAAAh5C,KAAAq5C,MAAAr5C,KAAA+4C,KAAA,EAES,CAET,GADArgC,EAAA1Y,KAAA25C,UAAA,IACA35C,KAAA64C,OACA,MAAAngC,IAAAi/B,GAAA,IAAAj/B,EACA1Y,KAAA45C,SAAA,GACAlhC,EAAA1Y,KAAA25C,UAAA,SAGA,UAAAjhC,EACA1Y,KAAA45C,SAAA,GACAlhC,EAAA1Y,KAAA25C,UAAA,IAGA,IAAAjhC,GACA1Y,KAAA45C,SAAA,IACAU,GAAA,GACW5hC,IAAAi/B,IACX33C,KAAAuV,KAAA,QAlBAvV,KAAA05C,UAAA,EAyBA,IAJA15C,KAAAuV,KAAAvV,KAAA44C,SAAA,IAAA54C,KAAA05C,WACA15C,KAAAs5C,YAAAt5C,KAAA25C,UAAA,GACA35C,KAAA45C,SAAA,IAEA55C,KAAAg5C,SAAAsB,GAAAt6C,KAAA84C,WAEA,GADApgC,EAAA1Y,KAAA25C,UAAA,IACA,IAAAjhC,EAAA,CAMA,GALA1Y,KAAA45C,SAAA,IACA55C,KAAA44C,SAAA,IACA54C,KAAA25C,UAAA,GACA35C,KAAA45C,SAAA,IAEA55C,KAAA44C,UAAA,EACA,IAAA7sD,EAAA,EAAyBA,EAAA,IAAOA,EAChC2sB,EAAA1Y,KAAA25C,UAAA,IACA,IAAAjhC,IACA,EAAAtE,EAAArlB,MAAA,iBAAA2pB,GAEA1Y,KAAA45C,SAAA,IACA55C,KAAA44C,SAAA,IACA54C,KAAA25C,UAAA,GACA35C,KAAA45C,SAAA,IAIA55C,KAAAuV,KAAA,QAES,GAAAvV,KAAAupC,KAAAvpC,KAAA64C,OAAA,CACT,SAEA,GADAngC,EAAA1Y,KAAA25C,UAAA,IACAjhC,IAAAi/B,EAEA,OADA33C,KAAAuV,KAAA,GACA,EAEA,GAAAmD,GAAA,MACA,MAEA1Y,KAAA45C,SAAA,GAEA55C,KAAA45C,SAAA,IACA55C,KAAA44C,SAAA,IACA54C,KAAA45C,SAAA,GACA55C,KAAAs5C,aAAA,EAAA5gC,IAGAwgC,EAAA,KACAl5C,KAAAy5C,WAAAP,EAAAl5C,KAAAo5C,UAAA,GAEAp5C,KAAAy5C,WAAAP,EAAAl5C,KAAAo5C,UAAA,GAEAp5C,KAAAq5C,MAEA,IAAAltD,OAAA,EACA,GAAA6T,KAAAy5C,YAAA,EACAttD,EAAA,EAAA6T,KAAAo5C,UAAA,MACAp5C,KAAAy5C,YAAA,EACA,IAAAz5C,KAAAy5C,YAAAP,EAAAl5C,KAAAo5C,WAAAhgC,IACApZ,KAAAo5C,YACAp5C,KAAAy5C,WAAAP,EAAAl5C,KAAAo5C,WAAAF,EAAAl5C,KAAAo5C,UAAA,QAEO,CACPriC,EAAA,EACA5qB,EAAA,EACA,GACA6T,KAAAy5C,WAAA1iC,GACA5qB,IAAA4qB,EACA,EAAA/W,KAAAo5C,YACAjtD,GAAA,OAAA4qB,GAEA/W,KAAAy5C,YAAA1iC,EACAA,EAAA,IAEA5qB,IAAA6T,KAAAy5C,WACA,EAAAz5C,KAAAo5C,YACAjtD,GAAA,OAAA6T,KAAAy5C,YAEA1iC,GAAA/W,KAAAy5C,WACAz5C,KAAAy5C,WAAA,EACAP,EAAAl5C,KAAAo5C,WAAAhgC,GACApZ,KAAAo5C,YACAp5C,KAAAy5C,WAAAP,EAAAl5C,KAAAo5C,WAAAF,EAAAl5C,KAAAo5C,UAAA,IACariC,EAAA,IACb5qB,IAAA4qB,EACAA,EAAA,UAGSA,GAKT,OAHA/W,KAAAi5C,QACA9sD,GAAA,KAEAA,GAEA+tD,WAAA,SAAAK,EAAAR,GACA,IAAAb,EAAAl5C,KAAAk5C,WACAE,EAAAp5C,KAAAo5C,UACAmB,EAAArB,EAAAE,KACAmB,EAAAv6C,KAAAoZ,WACA,EAAAhF,EAAArlB,MAAA,uBACAiR,KAAAupC,KAAA,EACAgR,EAAAv6C,KAAAoZ,SAEA,EAAAggC,EAAAW,KACAX,EAEAF,EAAAE,GAAAmB,GAEAv6C,KAAAo5C,aAEAiB,cAAA,SAAAE,EAAAR,GACA,IAAAb,EAAAl5C,KAAAk5C,WACAE,EAAAp5C,KAAAo5C,UACA,GAAAmB,EAAArB,EAAAE,GACAmB,EAAAv6C,KAAAoZ,WACA,EAAAhF,EAAArlB,MAAA,uBACAiR,KAAAupC,KAAA,EACAgR,EAAAv6C,KAAAoZ,SAEA,EAAAggC,EAAAW,KACAX,EAEAF,EAAAE,GAAAmB,OACO,GAAAA,EAAArB,EAAAE,GAAA,CACPmB,EAAA,KACA,EAAAnmC,EAAArlB,MAAA,gBACAiR,KAAAupC,KAAA,EACAgR,EAAA,GAEA,MAAAnB,EAAA,GAAAmB,EAAArB,EAAAE,EAAA,KACAA,EAEAF,EAAAE,GAAAmB,EAEAv6C,KAAAo5C,aAEAoB,eAAA,SAAAr4C,EAAA/B,EAAA6W,EAAAwB,GAEA,IADA,IAAAgiC,EAAAhiC,GAAA,EACA1sB,EAAAoW,EAAyBpW,GAAAqU,IAAUrU,EAAA,CACnC,IAAAgU,EAAAC,KAAA25C,UAAA5tD,GACA,GAAAgU,IAAA43C,EACA,gBAKA,GAHA5rD,EAAAqU,IACAL,IAAAK,EAAArU,IAEA0uD,GAAA16C,GAAA06C,EAAA,CACA,IAAAttD,EAAA8pB,EAAAlX,EAAA06C,GACA,GAAAttD,EAAA,KAAApB,EAEA,OADAiU,KAAA45C,SAAA7tD,KACA,EAAAoB,EAAA,QAIA,iBAEA8sD,eAAA,WACA,IAAAl6C,EAAA,EACA5S,OAAA,EACA,GAAA6S,KAAAg5C,SAGA,GAFAj5C,EAAAC,KAAA25C,UAAA,GACAxsD,EAAAkrD,EAAAt4C,GACA5S,KAAA,KAEA,OADA6S,KAAA45C,SAAAzsD,EAAA,IACAA,EAAA,OAEO,CACP,IAAAuY,EAAA1F,KAAAw6C,eAAA,IAAAnC,GACA,GAAA3yC,EAAA,IAAAA,EAAA,GACA,OAAAA,EAAA,GAIA,OADA,EAAA0O,EAAArlB,MAAA,oBACA4oD,GAEAyC,cAAA,WACA,IAAAr6C,EAAA,EACA5S,OAAA,EACA,GAAA6S,KAAAg5C,QAAA,CAEA,GADAj5C,EAAAC,KAAA25C,UAAA,IACA55C,IAAA43C,EACA,SAOA,GAJAxqD,EADA4S,GAAA,MACAu4C,EAAAv4C,GAEAw4C,EAAAx4C,GAAA,GAEA5S,EAAA,KAEA,OADA6S,KAAA45C,SAAAzsD,EAAA,IACAA,EAAA,OAEO,CACP,IAAAuY,EAAA1F,KAAAw6C,eAAA,IAAAjC,GACA,GAAA7yC,EAAA,GACA,OAAAA,EAAA,GAGA,GADAA,EAAA1F,KAAAw6C,eAAA,MAAAlC,GACA5yC,EAAA,GACA,OAAAA,EAAA,GAKA,OAFA,EAAA0O,EAAArlB,MAAA,kBACAiR,KAAA45C,SAAA,GACA,GAEAO,cAAA,WACA,IAAAp6C,OAAA,EACA5S,OAAA,EACA,GAAA6S,KAAAg5C,QAAA,CAEA,GADAj5C,EAAAC,KAAA25C,UAAA,IACA55C,IAAA43C,EACA,SASA,GANAxqD,EADA4S,GAAA,MACAy4C,EAAAz4C,GACSA,GAAA,OAAAA,GAAA,MACT04C,GAAA14C,GAAA,OAEA24C,EAAA34C,GAAA,GAEA5S,EAAA,KAEA,OADA6S,KAAA45C,SAAAzsD,EAAA,IACAA,EAAA,OAEO,CACP,IAAAuY,EAAA1F,KAAAw6C,eAAA,IAAA9B,GACA,GAAAhzC,EAAA,GACA,OAAAA,EAAA,GAGA,GADAA,EAAA1F,KAAAw6C,eAAA,KAAA/B,EAAA,IACA/yC,EAAA,GACA,OAAAA,EAAA,GAGA,GADAA,EAAA1F,KAAAw6C,eAAA,MAAAhC,GACA9yC,EAAA,GACA,OAAAA,EAAA,GAKA,OAFA,EAAA0O,EAAArlB,MAAA,kBACAiR,KAAA45C,SAAA,GACA,GAEAD,UAAA,SAAA9sD,GACA,IAAAV,OAAA,EACA,MAAA6T,KAAAu5C,UAAA1sD,EAAA,CACA,SAAAV,EAAA6T,KAAAsb,OAAAoS,QACA,WAAA1tB,KAAAu5C,UACA5B,EAEA33C,KAAAw5C,UAAA3sD,EAAAmT,KAAAu5C,UAAA,UAAA1sD,EAEAmT,KAAAw5C,SAAAx5C,KAAAw5C,UAAA,EAAArtD,EACA6T,KAAAu5C,WAAA,EAEA,OAAAv5C,KAAAw5C,UAAAx5C,KAAAu5C,UAAA1sD,EAAA,UAAAA,GAEA+sD,SAAA,SAAA/sD,IACAmT,KAAAu5C,WAAA1sD,GAAA,IACAmT,KAAAu5C,UAAA,KAIA9B,EA7gBA,GA+gBAhsD,EAAAgsD,mBAIA,SAAAjsD,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA,IAAAqtD,EAAA,WACA,IAAAC,IACAC,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GAC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C,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,OACAC,IAAA,SAEAD,MAAA,OACAC,IAAA,SAEAD,MAAA,QACAC,IAAA,UAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,OACAC,IAAA,SAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,OACAC,IAAA,SAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,OACAC,IAAA,SAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,OACAC,IAAA,SAEA,SAAAypE,EAAAx8E,GACA,QAAAtB,EAAA,EAAA8V,EAAA+nE,EAAAnpE,OAA4C1U,EAAA8V,EAAQ9V,IAAA,CACpD,IAAAo4B,EAAAylD,EAAA79E,GACA,GAAAsB,GAAA82B,EAAAhkB,OAAA9S,EAAA82B,EAAA/jB,IACA,OAAArU,EAGA,SAEA,SAAA+9E,EAAAz8E,GACA,IAAA82B,EAAAylD,EAAA,IACA,OAAAv8E,GAAA82B,EAAAhkB,OAAA9S,EAAA82B,EAAA/jB,MAGA+jB,EAAAylD,EAAA,IACAv8E,GAAA82B,EAAAhkB,OAAA9S,EAAA82B,EAAA/jB,KAKA,IAAA2pE,EAAA96E,EAAA,SAAA0oeACAA,EAAA,cqyD,EAAAC,GACA,IAAAC,EAAAD,EAAAxpE,OACA,GAAAypE,GAAA,IAAAJ,EAAAG,EAAA1oE,WAAA,IACA,OAAA0oE,EAGA,IADA,IAAA78E,EAAA,GACAyU,EAAAqoE,EAAA,EAAgCroE,GAAA,EAASA,IACzCzU,GAAA68E,EAAApoE,GAEA,OAAAzU,EAEA3B,EAAA49E,0BACA59E,EAAAu+E,eACAv+E,EAAAo+E,qBACAp+E,EAAAs+E,wBACAt+E,EAAA69E,sBAIA,SAAA99E,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAA0+E,mBAAA1+E,EAAA2+E,oBAAA3+E,EAAA4+E,mBAAA5+E,EAAA6+E,mBAAA94E,EAEA,IAAAC,EAAA,oBAAAC,QAAA,kBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,oBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAzE,UAAA,gBAAA2E,GAE5I0gE,EAAA,WAAgC,SAAAC,EAAAt0C,EAAAu0C,GAA2C,QAAAzmE,EAAA,EAAgBA,EAAAymE,EAAA/xD,OAAkB1U,IAAA,CAAO,IAAA0mE,EAAAD,EAAAzmE,GAA2B0mE,EAAA9lE,WAAA8lE,EAAA9lE,aAAA,EAAwD8lE,EAAA/lE,cAAA,EAAgC,UAAA+lE,MAAAhzD,UAAA,GAAuDjT,OAAAC,eAAAwxB,EAAAw0C,EAAA7vD,IAAA6vD,IAA+D,gBAAAh9B,EAAAi9B,EAAAC,GAA2L,OAAlID,GAAAH,EAAA98B,EAAAxoC,UAAAylE,GAAqEC,GAAAJ,EAAA98B,EAAAk9B,GAA6Dl9B,GAAxhB,GAEArhB,EAAAvoB,EAAA,GAEAwoB,EAAAxoB,EAAA,GAEA0+E,EAAA1+E,EAAA,KAEA,SAAAsnE,EAAAC,EAAA39B,GAAiD,KAAA29B,aAAA39B,GAA0C,UAAA9W,UAAA,qCAE3F,IAAA6rD,GACAn9E,YACA,SAAA+mB,EAAAvmB,QAAAmS,KAAA,WAAAoU,EAAA/lB,sBAIAg8E,EAAA,WACA,SAAAA,EAAA3nE,GACA,IAAA0N,EAAA1N,EAAA0N,KACAq6D,EAAA/nE,EAAArU,gBACAA,OAAAmD,IAAAi5E,KAEAtX,EAAAnzD,KAAAqqE,GAEArqE,KAAAoQ,OACApQ,KAAA3R,iBAAA,IAAAA,EAyCA,OAtCAikE,EAAA+X,IACAznE,IAAA,SACAvV,MAAA,SAAAwd,GACA,OAAA6/D,EAAAhoD,OACAtS,KAAApQ,KAAAoQ,KACA/hB,gBAAA2R,KAAA3R,gBACAwc,UAIAjI,IAAA,kBACAvV,MAAA,SAAAs9E,GACA,OAAAD,EAAAE,YACAx6D,KAAApQ,KAAAoQ,KACA/hB,gBAAA2R,KAAA3R,gBACAs8E,aAIA/nE,IAAA,eACAvV,MAAA,SAAAy1B,GACA,OAAA4nD,EAAA1nD,QACA5S,KAAApQ,KAAAoQ,KACA/hB,gBAAA2R,KAAA3R,gBACAy0B,UAIAlgB,IAAA,WACAvV,MAAA,SAAAwd,GACA,OAAA6/D,EAAAjzC,OACArnB,KAAApQ,KAAAoQ,KACA/hB,gBAAA2R,KAAA3R,gBACAwc,WAKAw/D,EAlDA,GAqDAK,EAAA,WACA,IAAAG,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACA,OACAC,eAAA,SAAAv8D,EAAAw8D,EAAAC,EAAA9+D,GACA,IAAAtgB,EAAA8V,EACApB,EAAA,EACA,IAAA1U,EAAA,EAAA8V,EAAA6M,EAAAjO,OAAmC1U,EAAA8V,EAAQ9V,IAC3C0U,GAAAiO,EAAA3iB,GAEA0U,GAAAyqE,EACA,IAAA/7C,EAAA,IAAA9oB,MAAA5F,GACAmW,EAAA,EACAC,EAAA,EACAu0D,EAAA,GAAApqE,KAAAulB,IAAA,EAAA4kD,GAAA,GACAE,EAAAh/D,EAAA4G,UAAAxS,EAAA0qE,EAAA,MACAG,EAAA,EACA,IAAAv/E,EAAA,EAAiBA,EAAA0U,EAAY1U,IAAA,CAC7B,MAAA6qB,EAAAu0D,EACAt0D,IAAA,EACAA,GAAAw0D,EAAAC,KACA10D,GAAA,EAEAA,GAAAu0D,EACAh8C,EAAApjC,IAAA8qB,GAAAD,GAAAw0D,EACAv0D,IAAA,GAAAD,GAAA,EAEA,OAAAuY,GAEAsI,MAAA,SAAAlpB,GACA,IAAA6B,EAAA7B,EAAA6B,KACA/hB,EAAAkgB,EAAAlgB,gBACAwc,EAAA0D,EAAA1D,GAEAlI,EAAAkI,EAAAlI,KACAA,IACAA,EAAAkI,GAEA,IAAA06D,GAAAvlE,KAAAurE,iBAAA,KAAAvrE,KAAAwrE,sBAAAxrE,KAAAyrE,iBAAAzrE,KAAA0rE,qBACAC,EAAAhpE,EAAA/V,IAAA,gBACAg/E,EAAArG,EAAAoG,GACA,IAAAC,EACA,UAAAx3D,EAAAzkB,YAAA,4BAEA,OAAAi8E,EAAA3/E,KAAA+T,MACAoQ,OACA/hB,kBACAwc,KACAlI,UAGAqgB,OAAA,SAAA5T,GACA,IAAAgB,EAAAhB,EAAAgB,KACA/hB,EAAA+gB,EAAA/gB,gBACAy0B,EAAA1T,EAAA0T,GAEA9Y,EAAA8Y,EAAA,GACA,OAAA9Y,GACA,KAAA6gE,EACA,OAAA7qE,KAAA6rE,wBACAz7D,OACA/hB,kBACAy0B,OAEA,KAAAgoD,EACA,OAAA9qE,KAAA8rE,6BACA17D,OACA/hB,kBACAy0B,OAEA,KAAAioD,EACA,OAAA/qE,KAAA+rE,wBACA37D,OACA/hB,kBACAy0B,OAEA,QACA,OAAA9iB,KAAAgsE,2BACA57D,OACA/hB,kBACAy0B,SAIAJ,MAAA,SAAAupD,GACA,IAAA77D,EAAA67D,EAAA77D,KACA/hB,EAAA49E,EAAA59E,gBACAwc,EAAAohE,EAAAphE,GAEAiY,EAAA9iB,KAAAy3B,OACArnB,OACA/hB,kBACAwc,OAEA,OAAA7K,KAAAgjB,QACA5S,OACA/hB,kBACAy0B,QAGA8nD,WAAA,SAAAsB,GACA,IAAA97D,EAAA87D,EAAA97D,KACA/hB,EAAA69E,EAAA79E,gBACAs8E,EAAAuB,EAAAvB,MAEA,IAAAtkE,MAAA4K,QAAA05D,GACA,OAAA3qE,KAAA0iB,OACAtS,OACA/hB,kBACAwc,GAAA8/D,IAIA,IADA,IAAAvyC,KACApe,EAAA,EAAAy0B,EAAAk8B,EAAAlqE,OAAwCuZ,EAAAy0B,EAAQz0B,IAChDoe,EAAAh3B,KAAApB,KAAA0iB,OACAtS,OACA/hB,kBACAwc,GAAAuF,EAAAU,WAAA65D,EAAA3wD,OAGA,gBAAAlT,EAAAsa,EAAAX,EAAAc,GACA,QAAAx1B,EAAA,EAAA8V,EAAAu2B,EAAA33B,OAA4C1U,EAAA8V,EAAQ9V,IACpDqsC,EAAArsC,GAAA+a,EAAAsa,EAAAX,EAAAc,EAAAx1B,KAIAw/E,iBAAA,SAAAY,GACAA,EAAA/7D,KACA+7D,EAAA99E,gBADA,IAEAwc,EAAAshE,EAAAthE,GACAlI,EAAAwpE,EAAAxpE,KAEA,SAAAypE,EAAA5qE,GAIA,IAHA,IAAAmgB,EAAAngB,EAAAf,OACA4c,KACAoQ,EAAA,EACA1hC,EAAA,EAAuBA,EAAA41B,EAAiB51B,GAAA,EACxCsxB,EAAAoQ,IAAAjsB,EAAAzV,GAAAyV,EAAAzV,EAAA,MACA0hC,EAEA,OAAApQ,EAEA,IAAAgvD,EAAA1pE,EAAAG,SAAA,UACAqhB,EAAAxhB,EAAAG,SAAA,SACA,IAAAupE,IAAAloD,EACA,UAAA/P,EAAAzkB,YAAA,sBAEA,IAAA28E,EAAAD,EAAA5rE,OAAA,EACAyqE,EAAA/mD,EAAA1jB,OAAA,EACA4rE,EAAAD,EAAAC,GACAloD,EAAAioD,EAAAjoD,GACA,IAAAzV,EAAA/L,EAAA/V,IAAA,QACAu+E,EAAAxoE,EAAA/V,IAAA,iBACA64E,EAAA9iE,EAAA/V,IAAA,YACA,IAAA64E,IACA,EAAArxD,EAAArlB,MAAA,8CAAA02E,GAEA,IAAA8G,EAAA5pE,EAAAG,SAAA,UACA,IAAAypE,EAAA,CACAA,KACA,QAAAxgF,EAAA,EAAuBA,EAAAugF,IAAevgF,EACtCwgF,EAAAnrE,KAAA,GACAmrE,EAAAnrE,KAAAsN,EAAA3iB,GAAA,GAGAwgF,EAAAH,EAAAG,GACA,IAAA3nD,EAAAjiB,EAAAG,SAAA,UAIA8hB,EAHAA,EAGAwnD,EAAAxnD,GAFAT,EAIA,IAAAqoD,EAAAxsE,KAAAirE,eAAAv8D,EAAAw8D,EAAAC,EAAAtgE,GACA,OAAAggE,EAAAyB,EAAAD,EAAAE,EAAA3nD,EAAA4nD,EAAA99D,EAAAw8D,EAAAlqE,KAAAulB,IAAA,EAAA4kD,GAAA,EAAAhnD,IAEA0nD,uBAAA,SAAAY,GACAA,EAAAr8D,KACAq8D,EAAAp+E,gBADA,IAEAy0B,EAAA2pD,EAAA3pD,GAEA,SAAA4pD,EAAAzqE,EAAA0qE,EAAAC,EAAAC,EAAAC,GACA,OAAAD,GAAAC,EAAAD,IAAAD,EAAAD,IAAA1qE,EAAA0qE,GAEA,gBAAA7lE,EAAAsa,EAAAX,EAAAc,GACA,IAWAx1B,EAAAiuB,EAXA9tB,EAAA42B,EAAA,GACAupD,EAAAvpD,EAAA,GACAypD,EAAAzpD,EAAA,GACA8B,EAAA9B,EAAA,GACA0pD,EAAA1pD,EAAA,GACApU,EAAAoU,EAAA,GACAj2B,EAAAi2B,EAAA,GACAqB,EAAArB,EAAA,GACAiqD,EAAA,GAAA7gF,EACA8gF,EAAA,IAAAC,aAAAF,GACAG,EAAA,IAAA3qE,YAAAwqE,GAEA,IAAA/yD,EAAA,EAAmBA,EAAA+yD,EAAkB/yD,IACrCgzD,EAAAhzD,GAAA,EAEA,IAAApB,EAAA/rB,EACAiV,EAAA,EACA,IAAA/V,EAAA,EAAmBA,EAAAG,IAAOH,EAAA,CAC1B,IAAAohF,EAAAd,EAAAtgF,GAAA,GACAqhF,EAAAf,EAAAtgF,GAAA,GACAshF,EAAArsE,KAAAC,IAAAD,KAAAqD,IAAAyC,EAAAsa,EAAAr1B,GAAAohF,GAAAC,GACAnuE,EAAAytE,EAAAW,EAAAF,EAAAC,EAAAb,EAAAxgF,GAAA,GAAAwgF,EAAAxgF,GAAA,IACAuhF,EAAA5+D,EAAA3iB,GACAkT,EAAA+B,KAAAC,IAAAD,KAAAqD,IAAApF,EAAA,GAAAquE,EAAA,GACA,IAAAC,EAAAtuE,EAAAquE,EAAA,EAAAtsE,KAAAkgB,MAAAjiB,KAAA,EACAuuE,EAAAD,EAAA,EAAAtuE,EACAwuE,EAAAxuE,EAAAsuE,EACAnH,EAAAmH,EAAA30D,EACAytD,EAAAD,EAAAxtD,EACA,IAAAoB,EAAA,EAAqBA,EAAA+yD,EAAkB/yD,IACvCA,EAAAlY,GACAkrE,EAAAhzD,IAAAyzD,EACAP,EAAAlzD,IAAAqsD,IAEA2G,EAAAhzD,IAAAwzD,EACAN,EAAAlzD,IAAAosD,GAGAxtD,GAAA00D,EACAxrE,IAAA,EAEA,IAAAkY,EAAA,EAAmBA,EAAAntB,IAAOmtB,EAAA,CAC1B,IAAA0zD,EAAA,EACA,IAAA3hF,EAAA,EAAqBA,EAAAghF,EAAkBhhF,IACvC2hF,GAAAlB,EAAAU,EAAAnhF,GAAAiuB,GAAAgzD,EAAAjhF,GAEA2hF,EAAAhB,EAAAgB,EAAA,IAAA9oD,EAAA5K,GAAA,GAAA4K,EAAA5K,GAAA,IACAyG,EAAAc,EAAAvH,GAAAhZ,KAAAC,IAAAD,KAAAqD,IAAAqpE,EAAAvpD,EAAAnK,GAAA,IAAAmK,EAAAnK,GAAA,OAIAwxD,sBAAA,SAAAmC,GACAA,EAAAv9D,KACAu9D,EAAAt/E,gBACAs/E,EAAA9iE,GAFA,IAGAlI,EAAAgrE,EAAAhrE,KAEAirE,EAAAjrE,EAAAG,SAAA,WACA+qE,EAAAlrE,EAAAG,SAAA,WACAjW,EAAA8V,EAAA/V,IAAA,KACA,IAAAyZ,MAAA4K,QAAA28D,KAAAvnE,MAAA4K,QAAA48D,GACA,UAAAz5D,EAAAzkB,YAAA,gDAIA,IAFA,IAAA8Q,EAAAmtE,EAAAntE,OACAqtE,KACA/hF,EAAA,EAAqBA,EAAA0U,IAAY1U,EACjC+hF,EAAA1sE,KAAAysE,EAAA9hF,GAAA6hF,EAAA7hF,IAEA,OAAA++E,EAAA8C,EAAAE,EAAAjhF,IAEAi/E,4BAAA,SAAAiC,GACAA,EAAA39D,KACA29D,EAAA1/E,gBADA,IAEAy0B,EAAAirD,EAAAjrD,GAEA8qD,EAAA9qD,EAAA,GACAgrD,EAAAhrD,EAAA,GACAj2B,EAAAi2B,EAAA,GACAriB,EAAAqtE,EAAArtE,OACA,gBAAAqG,EAAAsa,EAAAX,EAAAc,GAEA,IADA,IAAAtf,EAAA,IAAApV,EAAAia,EAAAsa,GAAApgB,KAAAulB,IAAAzf,EAAAsa,GAAAv0B,GACAmtB,EAAA,EAAuBA,EAAAvZ,IAAYuZ,EACnCyG,EAAAc,EAAAvH,GAAA4zD,EAAA5zD,GAAA/X,EAAA6rE,EAAA9zD,KAIAyxD,iBAAA,SAAAuC,GACA,IAAA59D,EAAA49D,EAAA59D,KACA/hB,EAAA2/E,EAAA3/E,gBAEAsU,GADAqrE,EAAAnjE,GACAmjE,EAAArrE,MAEA0pE,EAAA1pE,EAAAG,SAAA,UACA,IAAAupE,EACA,UAAAj4D,EAAAzkB,YAAA,aAEA,IAAA28E,EAAAD,EAAA5rE,OAAA,EACA,OAAA6rE,EACA,UAAAl4D,EAAAzkB,YAAA,mCAIA,IAFA,IAAAs+E,EAAAtrE,EAAA/V,IAAA,aACAshF,KACAniF,EAAA,EAAA8V,EAAAosE,EAAAxtE,OAAyC1U,EAAA8V,IAAQ9V,EACjDmiF,EAAA9sE,KAAApB,KAAAy3B,OACArnB,OACA/hB,kBACAwc,GAAAuF,EAAAU,WAAAm9D,EAAAliF,OAGA,IAAAoiF,EAAAxrE,EAAAG,SAAA,UACAypE,EAAA5pE,EAAAG,SAAA,UACA,OAAAioE,EAAAsB,EAAA8B,EAAA5B,EAAA2B,IAEAnC,uBAAA,SAAAqC,GAWA,IAVA,IAAAh+D,EAAAg+D,EAAAh+D,KACA/hB,EAAA+/E,EAAA//E,gBACAy0B,EAAAsrD,EAAAtrD,GAEAupD,EAAAvpD,EAAA,GACAqrD,EAAArrD,EAAA,GACAypD,EAAAzpD,EAAA,GACAurD,EAAAvrD,EAAA,GACAorD,KACA/oD,EAAA,IAAAD,aAAA,GACAn5B,EAAA,EAAA8V,EAAAwsE,EAAA5tE,OAAwC1U,EAAA8V,EAAQ9V,IAChDmiF,EAAA9sE,KAAApB,KAAAgjB,QACA5S,OACA/hB,kBACAy0B,GAAAurD,EAAAtiF,MAGA,gBAAA+a,EAAAsa,EAAAX,EAAAc,GAUA,IATA,IAAA1nB,EAAA,SAAA2K,EAAAvD,EAAAoD,GAMA,OALAG,EAAAH,EACAG,EAAAH,EACWG,EAAAvD,IACXuD,EAAAvD,GAEAuD,GAEAA,EAAA3K,EAAAiN,EAAAsa,GAAAirD,EAAA,GAAAA,EAAA,IACAtgF,EAAA,EAAA8V,EAAAssE,EAAA1tE,OAA2C1U,EAAA8V,IAAQ9V,EACnD,GAAAyY,EAAA2pE,EAAApiF,GACA,MAGA,IAAAuiF,EAAAjC,EAAA,GACAtgF,EAAA,IACAuiF,EAAAH,EAAApiF,EAAA,IAEA,IAAAwiF,EAAAlC,EAAA,GACAtgF,EAAAoiF,EAAA1tE,SACA8tE,EAAAJ,EAAApiF,IAEA,IAAAyiF,EAAAjC,EAAA,EAAAxgF,GACA0iF,EAAAlC,EAAA,EAAAxgF,EAAA,GACAo5B,EAAA,GAAAmpD,IAAAC,EAAAC,KAAAhqE,EAAA8pE,IAAAG,EAAAD,IAAAD,EAAAD,GACAJ,EAAAniF,GAAAo5B,EAAA,EAAA1E,EAAAc,KAGAmqD,oBAAA,SAAAgD,GACAA,EAAAt+D,KACAs+D,EAAArgF,gBADA,IAEAwc,EAAA6jE,EAAA7jE,GACAlI,EAAA+rE,EAAA/rE,KAEA0pE,EAAA1pE,EAAAG,SAAA,UACAqhB,EAAAxhB,EAAAG,SAAA,SACA,IAAAupE,EACA,UAAAj4D,EAAAzkB,YAAA,cAEA,IAAAw0B,EACA,UAAA/P,EAAAzkB,YAAA,aAEA,IAAA6+B,EAAA,IAAA+7C,EAAAoE,gBAAA9jE,GACA0pB,EAAA,IAAAg2C,EAAAqE,iBAAApgD,GACAzuB,EAAAw0B,EAAA7R,QACA,OAAAsoD,EAAAqB,EAAAloD,EAAApkB,IAEAisE,0BAAA,SAAA6C,GACAA,EAAAz+D,KAAA,IACA/hB,EAAAwgF,EAAAxgF,gBACAy0B,EAAA+rD,EAAA/rD,GAEAupD,EAAAvpD,EAAA,GACAqB,EAAArB,EAAA,GACA/iB,EAAA+iB,EAAA,GACA,GAAAz0B,GAAAm8E,EAAAn9E,MAAA,CACA,IAAAw5E,GAAA,IAAAsD,GAAA1D,QAAA1mE,EAAAssE,EAAAloD,GACA,GAAA0iD,EACA,WAAApkE,SAAA,sCAAAokE,IAGA,EAAAzyD,EAAArlB,MAAA,iCACA,IAAA+/E,EAAA3qD,EAAA1jB,QAAA,EACAsuE,EAAA1C,EAAA5rE,QAAA,EACAuuE,EAAA,IAAA5E,EAAArqE,GACAyxC,EAAAhlD,OAAAoT,OAAA,MACAqvE,EAAA,KACAC,EAAAD,EACA9pD,EAAA,IAAAD,aAAA6pD,GACA,gBAAAjoE,EAAAsa,EAAAX,EAAAc,GACA,IAAAx1B,EAAAsB,EACAuV,EAAA,GACAkY,EAAAqK,EACA,IAAAp5B,EAAA,EAAmBA,EAAAgjF,EAAehjF,IAClCsB,EAAAyZ,EAAAsa,EAAAr1B,GACA+uB,EAAA/uB,GAAAsB,EACAuV,GAAAvV,EAAA,IAEA,IAAA8hF,EAAA39B,EAAA5uC,GACA,QAAApR,IAAA29E,EAAA,CAIA,IAAA1b,EAAA,IAAAvuC,aAAA4pD,GACA3Q,EAAA6Q,EAAAI,QAAAt0D,GACAu0D,EAAAlR,EAAA19D,OAAAquE,EACA,IAAA/iF,EAAA,EAAmBA,EAAA+iF,EAAgB/iF,IAAA,CACnCsB,EAAA8wE,EAAAkR,EAAAtjF,GACA,IAAAujF,EAAAnrD,EAAA,EAAAp4B,GACAsB,EAAAiiF,EACAjiF,EAAAiiF,GAEAA,EAAAnrD,EAAA,EAAAp4B,EAAA,GACAsB,EAAAiiF,IACAjiF,EAAAiiF,IAGA7b,EAAA1nE,GAAAsB,EAEA6hF,EAAA,IACAA,IACA19B,EAAA5uC,GAAA6wD,GAEAhzC,EAAAze,IAAAyxD,EAAAlyC,QAvBAd,EAAAze,IAAAmtE,EAAA5tD,MA9YA,GA0aA,SAAA+oD,EAAA9lE,GACA,IAAA+qE,EACA,oCAAA/qE,EAAA,YAAA/S,EAAA+S,IACA,SACG,MAAA6P,EAAAxC,QAAArN,GACH+qE,EAAA/qE,MACG,QAAA6P,EAAArB,UAAAxO,GAGH,SAFA+qE,EAAA/qE,EAAA7B,KAIA,OAAA4sE,EAAAh+D,IAAA,gBAEA,IAAAi+D,EAAA,WACA,IAAAC,EAAA,IACA,SAAAD,EAAAE,GACA1vE,KAAAm+D,MAAAuR,EAAArpE,MAAApZ,UAAAiX,MAAAjY,KAAAyjF,EAAA,MAoDA,OAlDAF,EAAAviF,WACAmU,KAAA,SAAA/T,GACA,GAAA2S,KAAAm+D,MAAA19D,QAAAgvE,EACA,UAAArxE,MAAA,uCAEA4B,KAAAm+D,MAAA/8D,KAAA/T,IAEAwiD,IAAA,WACA,GAAA7vC,KAAAm+D,MAAA19D,QAAA,EACA,UAAArC,MAAA,wCAEA,OAAA4B,KAAAm+D,MAAAtuB,OAEA8/B,KAAA,SAAA9iF,GACA,GAAAmT,KAAAm+D,MAAA19D,OAAA5T,GAAA4iF,EACA,UAAArxE,MAAA,uCAGA,IADA,IAAA+/D,EAAAn+D,KAAAm+D,MACApyE,EAAAoyE,EAAA19D,OAAA5T,EAAAmtB,EAAAntB,EAAA,EAA+CmtB,GAAA,EAAQA,IAAAjuB,IACvDoyE,EAAA/8D,KAAA+8D,EAAApyE,KAGA0hC,MAAA,SAAA5gC,GACAmT,KAAAoB,KAAApB,KAAAm+D,MAAAn+D,KAAAm+D,MAAA19D,OAAA5T,EAAA,KAEA+iF,KAAA,SAAA/iF,EAAAM,GACA,IAIApB,EACAiuB,EACArC,EANAwmD,EAAAn+D,KAAAm+D,MACAnyE,EAAAmyE,EAAA19D,OAAA5T,EACAyW,EAAA66D,EAAA19D,OAAA,EACAtU,EAAAH,GAAAmB,EAAA6T,KAAAkgB,MAAA/zB,EAAAN,MAIA,IAAAd,EAAAC,EAAAguB,EAAA1W,EAAwBvX,EAAAiuB,EAAOjuB,IAAAiuB,IAC/BrC,EAAAwmD,EAAApyE,GACAoyE,EAAApyE,GAAAoyE,EAAAnkD,GACAmkD,EAAAnkD,GAAArC,EAEA,IAAA5rB,EAAAC,EAAAguB,EAAA7tB,EAAA,EAA4BJ,EAAAiuB,EAAOjuB,IAAAiuB,IACnCrC,EAAAwmD,EAAApyE,GACAoyE,EAAApyE,GAAAoyE,EAAAnkD,GACAmkD,EAAAnkD,GAAArC,EAEA,IAAA5rB,EAAAI,EAAA6tB,EAAA1W,EAAwBvX,EAAAiuB,EAAOjuB,IAAAiuB,IAC/BrC,EAAAwmD,EAAApyE,GACAoyE,EAAApyE,GAAAoyE,EAAAnkD,GACAmkD,EAAAnkD,GAAArC,IAIA63D,EAvDA,GAyDApF,EAAA,WACA,SAAAA,EAAAyF,GACA7vE,KAAA6vE,YAkOA,OAhOAzF,EAAAn9E,WACAmiF,QAAA,SAAAM,GACA,IAIAI,EAAAnrE,EAAAnB,EAJA26D,EAAA,IAAAqR,EAAAE,GACAtsC,EAAA,EACAysC,EAAA7vE,KAAA6vE,UACApvE,EAAAovE,EAAApvE,OAEA,MAAA2iC,EAAA3iC,EAEA,GADAqvE,EAAAD,EAAAzsC,KACA,kBAAA0sC,EAIA,OAAAA,GACA,SACAtsE,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAlrC,IACAy+B,EAAA5/B,GAEA,MACA,QACAmB,EAAAw5D,EAAAtuB,MACAzM,EAAAz+B,EACA,MACA,UACAA,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAJ,KAAAwH,IAAA7D,IACA,MACA,UACAnB,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,EAAAnB,GACA,MACA,UACAA,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,OACA,EAAAz7B,EAAAvlB,QAAA8V,KAAA,EAAAyP,EAAAvlB,QAAA2U,GACA26D,EAAA/8D,KAAAuD,GAAAnB,GAEA26D,EAAA/8D,KAAAuD,EAAAnB,GAEA,MACA,WACAmB,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAJ,KAAA+uE,KAAAprE,IACA,MACA,eACAnB,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAlrC,EAAA,EACAw5D,EAAA/8D,KAAAuD,GAAAnB,GAEA26D,EAAA/8D,KAAAuD,GAAAnB,GAEA,MACA,cACAmB,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAJ,KAAAkB,KAAAyC,IACA,MACA,WACAA,EAAAw5D,EAAAtuB,MACAsuB,EAAAwR,KAAAhrE,GACA,MACA,UACAA,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAJ,KAAAgvE,IAAArrE,IACA,MACA,UACAA,EAAA,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,GACA,MACA,UACA,MACA,UACAnB,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,EAAAnB,GACA,MACA,UACA26D,EAAAwR,KAAA,GACA,MACA,SACAnsE,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,IAAAnB,GACA,MACA,WACA26D,EAAAyR,KAAA,KACA,MACA,UACApsE,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAJ,KAAAulB,IAAA5hB,EAAAnB,IACA,MACA,YACA26D,EAAA/8D,MAAA,GACA,MACA,YACAuD,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAJ,KAAAkgB,MAAAvc,IACA,MACA,SACAnB,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,GAAAnB,GACA,MACA,SACAA,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,EAAAnB,GACA,MACA,WACAA,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,EAAAnB,EAAA,GACA,MACA,YACAmB,EAAAw5D,EAAAtuB,MACAsuB,EAAA1wC,MAAA9oB,GACA,MACA,SACAnB,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,GAAAnB,GACA,MACA,SACAmB,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAJ,KAAA9C,IAAAyG,IACA,MACA,UACAA,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAJ,KAAA9C,IAAAyG,GAAA3D,KAAAivE,MACA,MACA,SACAzsE,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,EAAAnB,GACA,MACA,UACAA,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,EAAAnB,GACA,MACA,UACAA,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,EAAAnB,GACA,MACA,SACAA,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,IAAAnB,GACA,MACA,UACAmB,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,MAAAuD,GACA,MACA,UACAA,EAAAw5D,EAAAtuB,OACA,EAAAz7B,EAAAvlB,QAAA8V,GACAw5D,EAAA/8D,MAAAuD,GAEAw5D,EAAA/8D,MAAAuD,GAEA,MACA,SACAnB,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,OACA,EAAAz7B,EAAAvlB,QAAA8V,KAAA,EAAAyP,EAAAvlB,QAAA2U,GACA26D,EAAA/8D,KAAAuD,GAAAnB,GAEA26D,EAAA/8D,KAAAuD,EAAAnB,GAEA,MACA,UACA26D,EAAAtuB,MACA,MACA,WACArsC,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAAyR,KAAAjrE,EAAAnB,GACA,MACA,YACAmB,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAJ,KAAA4pB,MAAAjmB,IACA,MACA,UACAA,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAJ,KAAAkvE,IAAAvrE,IACA,MACA,WACAA,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAJ,KAAA8D,KAAAH,IACA,MACA,UACAnB,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,MACAsuB,EAAA/8D,KAAAuD,EAAAnB,GACA,MACA,WACA26D,EAAA/8D,MAAA,GACA,MACA,eACAuD,EAAAw5D,EAAAtuB,MACAlrC,IAAA,EAAA3D,KAAAkB,KAAAyC,GAAA3D,KAAAkgB,MAAAvc,GACAw5D,EAAA/8D,KAAAuD,GACA,MACA,UACAnB,EAAA26D,EAAAtuB,MACAlrC,EAAAw5D,EAAAtuB,OACA,EAAAz7B,EAAAvlB,QAAA8V,KAAA,EAAAyP,EAAAvlB,QAAA2U,GACA26D,EAAA/8D,KAAAuD,IAAAnB,GAEA26D,EAAA/8D,KAAAuD,EAAAnB,GAEA,MACA,QACA,UAAA4Q,EAAAzkB,YAAA,oBAAAmgF,QAhNA3R,EAAA/8D,KAAA0uE,GAmNA,OAAA3R,UAGAiM,EApOA,GAsOAD,EAAA,WACA,SAAAgG,EAAAnmE,GACAhK,KAAAgK,OAKA,SAAAomE,EAAA3iD,EAAAxsB,EAAAoD,GACA8rE,EAAAlkF,KAAA+T,KAAA,QACAA,KAAAytB,QACAztB,KAAAiB,MACAjB,KAAAqE,MAMA,SAAAgsE,EAAAxqE,GACAsqE,EAAAlkF,KAAA+T,KAAA,WACAA,KAAA6F,SACA7F,KAAAiB,IAAA4E,EACA7F,KAAAqE,IAAAwB,EAMA,SAAAyqE,EAAAC,EAAAC,EAAAC,EAAAxvE,EAAAoD,GACA8rE,EAAAlkF,KAAA+T,KAAA,UACAA,KAAAuwE,KACAvwE,KAAAwwE,OACAxwE,KAAAywE,OACAzwE,KAAAiB,MACAjB,KAAAqE,MAMA,SAAAqsE,EAAAn4C,EAAAl0B,GACA8rE,EAAAlkF,KAAA+T,KAAA,OACAA,KAAAu4B,MACAv4B,KAAAiB,IAAAs3B,EAAAt3B,IACAjB,KAAAqE,MAMA,SAAAssE,EAAAljD,EAAAxsB,EAAAoD,GACA8rE,EAAAlkF,KAAA+T,KAAA,OACAA,KAAAytB,QACAztB,KAAAiB,MACAjB,KAAAqE,MAMA,SAAAusE,EAAAC,EAAAt4C,GACA43C,EAAAlkF,KAAA+T,KAAA,cACAA,KAAA6wE,WACA7wE,KAAAu4B,MAMA,SAAAu4C,IACA9wE,KAAA+wE,SAmCA,SAAAC,EAAAC,EAAAC,GACA,kBAAAA,EAAAlnE,MAAA,IAAAknE,EAAArrE,OACAorE,EAEA,YAAAA,EAAAjnE,MAAA,IAAAinE,EAAAprE,OACAqrE,EAEA,YAAAA,EAAAlnE,MAAA,YAAAinE,EAAAjnE,KACA,IAAAqmE,EAAAY,EAAAprE,OAAAqrE,EAAArrE,QAEA,IAAAyqE,EAAA,IAAAW,EAAAC,EAAAD,EAAAhwE,IAAAiwE,EAAAjwE,IAAAgwE,EAAA5sE,IAAA6sE,EAAA7sE,KAEA,SAAA8sE,EAAAF,EAAAC,GACA,eAAAA,EAAAlnE,KAAA,CACA,OAAAknE,EAAArrE,OACA,WAAAwqE,EAAA,GACO,OAAAa,EAAArrE,OACP,OAAAorE,EACO,eAAAA,EAAAjnE,KACP,WAAAqmE,EAAAY,EAAAprE,OAAAqrE,EAAArrE,QAGA,eAAAorE,EAAAjnE,KAAA,CACA,OAAAinE,EAAAprE,OACA,WAAAwqE,EAAA,GACO,OAAAY,EAAAprE,OACP,OAAAqrE,EAGA,IAAAjwE,EAAAD,KAAAC,IAAAgwE,EAAAhwE,IAAAiwE,EAAAjwE,IAAAgwE,EAAAhwE,IAAAiwE,EAAA7sE,IAAA4sE,EAAA5sE,IAAA6sE,EAAAjwE,IAAAgwE,EAAA5sE,IAAA6sE,EAAA7sE,KACAA,EAAArD,KAAAqD,IAAA4sE,EAAAhwE,IAAAiwE,EAAAjwE,IAAAgwE,EAAAhwE,IAAAiwE,EAAA7sE,IAAA4sE,EAAA5sE,IAAA6sE,EAAAjwE,IAAAgwE,EAAA5sE,IAAA6sE,EAAA7sE,KACA,WAAAisE,EAAA,IAAAW,EAAAC,EAAAjwE,EAAAoD,GAEA,SAAA+sE,EAAAH,EAAAC,GACA,eAAAA,EAAAlnE,KAAA,CACA,OAAAknE,EAAArrE,OACA,OAAAorE,EACO,eAAAA,EAAAjnE,KACP,WAAAqmE,EAAAY,EAAAprE,OAAAqrE,EAAArrE,QAGA,iBAAAqrE,EAAAlnE,MAAA,MAAAknE,EAAAX,IAAA,YAAAU,EAAAjnE,MAAA,IAAAinE,EAAAprE,QAAA,YAAAqrE,EAAAV,KAAAxmE,MAAA,IAAAknE,EAAAV,KAAA3qE,OACAqrE,EAAAT,KAEA,IAAAH,EAAA,IAAAW,EAAAC,EAAAD,EAAAhwE,IAAAiwE,EAAA7sE,IAAA4sE,EAAA5sE,IAAA6sE,EAAAjwE,KAEA,SAAAowE,EAAAJ,EAAA5sE,GACA,OAAA4sE,EAAAhwE,KAAAoD,EACA,IAAAgsE,EAAAhsE,GACK4sE,EAAA5sE,OACL4sE,EAEA,IAAAP,EAAAO,EAAA5sE,GAEA,SAAA8lE,KAgKA,OA1TAgG,EAAAljF,UAAAqkF,MAAA,SAAAC,IACA,EAAAn9D,EAAA9mB,aAAA,oBAQA8iF,EAAAnjF,UAAAT,OAAAoT,OAAAuwE,EAAAljF,WACAmjF,EAAAnjF,UAAAqkF,MAAA,SAAAC,GACAA,EAAAC,cAAAxxE,OAQAqwE,EAAApjF,UAAAT,OAAAoT,OAAAuwE,EAAAljF,WACAojF,EAAApjF,UAAAqkF,MAAA,SAAAC,GACAA,EAAAE,aAAAzxE,OAUAswE,EAAArjF,UAAAT,OAAAoT,OAAAuwE,EAAAljF,WACAqjF,EAAArjF,UAAAqkF,MAAA,SAAAC,GACAA,EAAAG,qBAAA1xE,OAQA0wE,EAAAzjF,UAAAT,OAAAoT,OAAAuwE,EAAAljF,WACAyjF,EAAAzjF,UAAAqkF,MAAA,SAAAC,GACAA,EAAAI,SAAA3xE,OAQA2wE,EAAA1jF,UAAAT,OAAAoT,OAAAuwE,EAAAljF,WACA0jF,EAAA1jF,UAAAqkF,MAAA,SAAAC,GACAA,EAAAK,cAAA5xE,OAOA4wE,EAAA3jF,UAAAT,OAAAoT,OAAAuwE,EAAAljF,WACA2jF,EAAA3jF,UAAAqkF,MAAA,SAAAC,GACAA,EAAAM,wBAAA7xE,OAKA8wE,EAAA7jF,WACAukF,cAAA,SAAAj5C,GACAv4B,KAAA+wE,MAAA3vE,KAAA,YAAAm3B,EAAAt3B,IAAA,cAAAs3B,EAAAl0B,IAAA,qBAAAk0B,EAAA9K,MAAA,QAEAmkD,cAAA,SAAAf,GACA7wE,KAAA+wE,MAAA3vE,KAAA,IAAAyvE,EAAApjD,QAEAgkD,aAAA,SAAAK,GACA9xE,KAAA+wE,MAAA3vE,KAAA0wE,EAAAjsE,SAEA6rE,qBAAA,SAAAK,GACA/xE,KAAA+wE,MAAA3vE,KAAA,KACA2wE,EAAAvB,KAAAc,MAAAtxE,MACAA,KAAA+wE,MAAA3vE,KAAA,IAAA2wE,EAAAxB,GAAA,KACAwB,EAAAtB,KAAAa,MAAAtxE,MACAA,KAAA+wE,MAAA3vE,KAAA,MAEAywE,wBAAA,SAAAG,GACAhyE,KAAA+wE,MAAA3vE,KAAA,QACA4wE,EAAAnB,SAAAS,MAAAtxE,MACAA,KAAA+wE,MAAA3vE,KAAA,OACA4wE,EAAAz5C,IAAA+4C,MAAAtxE,MACAA,KAAA+wE,MAAA3vE,KAAA,MAEAuwE,SAAA,SAAAttE,GACArE,KAAA+wE,MAAA3vE,KAAA,aACAiD,EAAAk0B,IAAA+4C,MAAAtxE,MACAA,KAAA+wE,MAAA3vE,KAAA,KAAAiD,MAAA,MAEA6G,SAAA,WACA,OAAAlL,KAAA+wE,MAAA1vE,KAAA,MA0DA8oE,EAAAl9E,WACAw5E,QAAA,SAAA1mE,EAAAssE,EAAAloD,GACA,IACAp4B,EAAA8V,EAKAhV,EAAAmtB,EACAi3D,EAAAC,EAAAe,EAAAC,EAAAC,EAAAzwE,EAPAy8D,KAEAiU,KACA9F,EAAAD,EAAA5rE,QAAA,EACAyqE,EAAA/mD,EAAA1jB,QAAA,EACA4xE,EAAA,EAGA,IAAAtmF,EAAA,EAAiBA,EAAAugF,EAAevgF,IAChCoyE,EAAA/8D,KAAA,IAAAgvE,EAAArkF,EAAAsgF,EAAA,EAAAtgF,GAAAsgF,EAAA,EAAAtgF,EAAA,KAEA,IAAAA,EAAA,EAAA8V,EAAA9B,EAAAU,OAAmC1U,EAAA8V,EAAQ9V,IAE3C,GADA2V,EAAA3B,EAAAhU,GACA,kBAAA2V,EAIA,OAAAA,GACA,UACA,GAAAy8D,EAAA19D,OAAA,EACA,YAEAywE,EAAA/S,EAAAtuB,MACAohC,EAAA9S,EAAAtuB,MACAsuB,EAAA/8D,KAAA4vE,EAAAC,EAAAC,IACA,MACA,UACA,GAAA/S,EAAA19D,OAAA,EACA,YAEA,MACA,UACA,GAAA09D,EAAA19D,OAAA,EACA,YAEAywE,EAAA/S,EAAAtuB,MACAohC,EAAA9S,EAAAtuB,MACAsuB,EAAA/8D,KAAA+vE,EAAAF,EAAAC,IACA,MACA,UACA,GAAA/S,EAAA19D,OAAA,EACA,YAEAywE,EAAA/S,EAAAtuB,MACAohC,EAAA9S,EAAAtuB,MACAsuB,EAAA/8D,KAAAgwE,EAAAH,EAAAC,IACA,MACA,WACA,GAAA/S,EAAA19D,OAAA,EACA,YAEAwxE,EAAA9T,EAAAtuB,MACAqiC,EAAA/T,EAAAtuB,MACAsuB,EAAA/8D,KAAA6wE,EAAAC,GACA,MACA,UACA,GAAA/T,EAAA19D,OAAA,EACA,YAEA09D,EAAAtuB,MACA,MACA,YACA,GAAAsuB,EAAA19D,OAAA,EACA,YAGA,GADAwwE,EAAA9S,EAAAtuB,MACA,YAAAohC,EAAAjnE,KACA,YAGA,GADAnd,EAAAokF,EAAAprE,OACAhZ,EAAA,IAAAiR,OAAAC,UAAAlR,IAAAsxE,EAAA19D,OAAA5T,EACA,YAGA,GADAolF,EAAA9T,IAAA19D,OAAA5T,EAAA,GACA,YAAAolF,EAAAjoE,MAAA,QAAAioE,EAAAjoE,KAAA,CACAm0D,EAAA/8D,KAAA6wE,GACA,MAEAE,EAAA,IAAAxB,EAAA0B,IAAAJ,EAAAhxE,IAAAgxE,EAAA5tE,KACA85D,IAAA19D,OAAA5T,EAAA,GAAAslF,EACAhU,EAAA/8D,KAAA+wE,GACAC,EAAAhxE,KAAA,IAAAwvE,EAAAuB,EAAAF,IACA,MACA,UACA,GAAA9T,EAAA19D,OAAA,EACA,YAEA,qBAAAV,EAAAhU,EAAA,WAAAgU,EAAAhU,EAAA,IAAAgU,EAAAhU,EAAA,KAAAA,EAAA,UAAAgU,EAAAhU,EAAA,YAAAgU,EAAAhU,EAAA,IAAAgU,EAAAhU,EAAA,KAAAgU,EAAAhU,EAAA,IACAklF,EAAA9S,EAAAtuB,MACAsuB,EAAA/8D,KAAAiwE,EAAAJ,EAAAlxE,EAAAhU,EAAA,KACAA,GAAA,EACA,MAGA,GADAkmF,EAAA9T,IAAA19D,OAAA,GACA,YAAAwxE,EAAAjoE,MAAA,QAAAioE,EAAAjoE,KAAA,CACAm0D,EAAA/8D,KAAA6wE,GACA,MAEAE,EAAA,IAAAxB,EAAA0B,IAAAJ,EAAAhxE,IAAAgxE,EAAA5tE,KACA85D,IAAA19D,OAAA,GAAA0xE,EACAhU,EAAA/8D,KAAA+wE,GACAC,EAAAhxE,KAAA,IAAAwvE,EAAAuB,EAAAF,IACA,MACA,WACA,GAAA9T,EAAA19D,OAAA,EACA,YAIA,GAFAywE,EAAA/S,EAAAtuB,MACAohC,EAAA9S,EAAAtuB,MACA,YAAAqhC,EAAAlnE,MAAA,YAAAinE,EAAAjnE,KACA,YAIA,GAFAgQ,EAAAk3D,EAAArrE,OACAhZ,EAAAokF,EAAAprE,OACAhZ,GAAA,IAAAiR,OAAAC,UAAAlR,KAAAiR,OAAAC,UAAAic,IAAAmkD,EAAA19D,OAAA5T,EACA,YAGA,GADAmtB,KAAAntB,OACA,IAAAmtB,EACA,MAEA3T,MAAApZ,UAAAmU,KAAAP,MAAAs9D,IAAAjkC,OAAAikC,EAAA19D,OAAA5T,IAAAmtB,IACA,MACA,QACA,iBA9GAmkD,EAAA/8D,KAAA,IAAAivE,EAAA3uE,IAiHA,GAAAy8D,EAAA19D,SAAAyqE,EACA,YAEA,IAAAxlE,KAwBA,OAvBA0sE,EAAA5gE,QAAA,SAAA8gE,GACA,IAAAC,EAAA,IAAAzB,EACAwB,EAAAhB,MAAAiB,GACA7sE,EAAAtE,KAAAmxE,EAAArnE,cAEAizD,EAAA3sD,QAAA,SAAAghE,EAAAzmF,GACA,IAAAwmF,EAAA,IAAAzB,EACA0B,EAAAlB,MAAAiB,GACA,IAAAtxE,EAAAkjB,EAAA,EAAAp4B,GACAsY,EAAA8f,EAAA,EAAAp4B,EAAA,GACAsxB,GAAAk1D,EAAArnE,YACAjK,EAAAuxE,EAAAvxE,MACAoc,EAAA9W,QAAA,YAAAtF,EAAA,MACAoc,EAAAjc,KAAA,MAEAiD,EAAAmuE,EAAAnuE,MACAgZ,EAAA9W,QAAA,YAAAlC,EAAA,MACAgZ,EAAAjc,KAAA,MAEAic,EAAA9W,QAAA,qBAAAxa,EAAA,QACAsxB,EAAAjc,KAAA,KACAsE,EAAAtE,KAAAic,EAAAhc,KAAA,OAEAqE,EAAArE,KAAA,QAGA8oE,EA9TA,GAgUA1+E,EAAA6+E,gBACA7+E,EAAA4+E,qBACA5+E,EAAA2+E,sBACA3+E,EAAA0+E,sBAIA,SAAA3+E,EAAAC,EAAAI,GAEA,aAGA,IAEA4mF,EAAA5mF,EAAA,IACAJ,EAAAinF,qBAAAD,EAAAC,sBAIA,SAAAlnF,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAinF,qBAAAjnF,EAAAknF,gBAAAnhF,EAEA,IAAAC,EAAA,oBAAAC,QAAA,kBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,oBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAzE,UAAA,gBAAA2E,GAE5Ik4C,EAAA,WAAkC,SAAAC,EAAAvoC,EAAAzV,GAAiC,IAAAi+C,KAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAA34C,EAAoB,IAAM,QAAA44C,EAAAC,EAAA7oC,EAAA9P,OAAAC,cAA0Cs4C,GAAAG,EAAAC,EAAA3c,QAAAC,MAA+Bsc,GAAA,EAAkC,GAArBD,EAAA5oC,KAAAgpC,EAAA/8C,OAAqBtB,GAAAi+C,EAAAvpC,SAAA1U,EAAA,MAAuC,MAAAw9C,GAAcW,GAAA,EAAWC,EAAAZ,EAAY,QAAU,KAAMU,GAAAI,EAAA,WAAAA,EAAA,YAA2C,QAAU,GAAAH,EAAA,MAAAC,GAAsB,OAAAH,EAAe,gBAAAxoC,EAAAzV,GAA2B,GAAAsa,MAAA4K,QAAAzP,GAA0B,OAAAA,EAAc,GAAA9P,OAAAC,YAAAnF,OAAAgV,GAA2C,OAAAuoC,EAAAvoC,EAAAzV,GAAuC,UAAA4yB,UAAA,yDAAjkB,GAEAvK,EAAAvoB,EAAA,GAEA+mF,EAAA/mF,EAAA,KAEAgnF,EAAAhnF,EAAA,IAEAinF,EAAAC,EAAAF,GAEAx+D,EAAAxoB,EAAA,GAEA,SAAAknF,EAAAnhF,GAAsC,OAAAA,KAAA9E,WAAA8E,GAAuCohF,QAAAphF,GAE7E,IAAA+gF,EAAA,WACA,SAAAA,EAAAtmF,GACA2T,KAAA3T,OACA2T,KAAAizE,YAAA,EACAjzE,KAAAkzE,aAAA,EAAA9+D,EAAA/kB,2BAkBA,OAhBAsjF,EAAA1lF,WACAkmF,eACA,OAAAnzE,KAAAkzE,YAAAxpE,SAEA0pE,OAAA,WACApzE,KAAAkzE,YAAAtpE,WAEAypE,UAAA,WACArzE,KAAAizE,YAAA,GAEAK,oBAAA,WACA,GAAAtzE,KAAAizE,WACA,UAAA70E,MAAA,gCAIAu0E,EAtBA,GAyBAY,EAAA,WACA,SAAAA,EAAAxsC,GACA/mC,KAAAwzE,YAAAzsC,EACA/mC,KAAAyzE,eAAA,KACAzzE,KAAA0zE,mBAAA,KACA1zE,KAAA2zE,wBAuBA,SAAAC,EAAA7sC,GACA,IAAAr7B,EAAA1L,KAEAA,KAAAwzE,YAAAzsC,EACA/mC,KAAAyzE,eAAA,KACAzzE,KAAA6zE,mBAAA,EACA7zE,KAAA8zE,uBAAA,EACA,IAAAC,EAAA/zE,KAAAwzE,YAAAjmE,eAAA,aACAvN,KAAAg0E,QAAAD,EAAAE,YACAj0E,KAAAk0E,cAAAl0E,KAAAwzE,YAAAlmE,gBAAA,sBAAAV,KAAA,SAAA7K,GACA2J,EAAAooE,sBAAA/xE,EAAA2lC,qBACAh8B,EAAAmoE,kBAAA9xE,EAAAoyE,iBACAzoE,EAAA+nE,eAAA1xE,EAAA6yC,gBAqCA,SAAAw/B,EAAAj0E,EAAAC,EAAA2mC,GACA/mC,KAAAwzE,YAAAzsC,EACA/mC,KAAA2nC,WAAA,KACA,IAAAosC,EAAA/zE,KAAAwzE,YAAAjmE,eAAA,kBACApN,QACAC,QAEAJ,KAAAg0E,QAAAD,EAAAE,YA2BA,OAxGAV,EAAAtmF,WACAonF,cAAA,WAGA,OAFA,EAAAjgE,EAAA5kB,SAAAwQ,KAAA0zE,oBACA1zE,KAAA0zE,mBAAA,IAAAE,EAAA5zE,KAAAwzE,aACAxzE,KAAA0zE,oBAEAjsC,eAAA,SAAAtnC,EAAAC,GACA,IAAAk0E,EAAA,IAAAF,EAAAj0E,EAAAC,EAAAJ,KAAAwzE,aAEA,OADAxzE,KAAA2zE,qBAAAvyE,KAAAkzE,GACAA,GAEA7qC,kBAAA,SAAAz+B,GACAhL,KAAA0zE,oBACA1zE,KAAA0zE,mBAAAxlE,OAAAlD,GAEA,IAAAupE,EAAAv0E,KAAA2zE,qBAAAzvE,MAAA,GACAqwE,EAAA/iE,QAAA,SAAA8iE,GACAA,EAAApmE,OAAAlD,OAmBA4oE,EAAA3mF,WACAunF,mBACA,OAAAx0E,KAAAk0E,eAEAt/B,oBACA,OAAA50C,KAAAyzE,gBAEA/rC,2BACA,OAAA1nC,KAAA8zE,uBAEAK,uBACA,OAAAn0E,KAAA6zE,mBAEA/rC,KAAA,WACA,OAAA9nC,KAAAg0E,QAAAlsC,OAAAl7B,KAAA,SAAAlK,GACA,IAAArV,EAAAqV,EAAArV,MACAsgC,EAAAjrB,EAAAirB,KAEA,OAAAA,GAEAtgC,WAAAmE,EACAm8B,MAAA,IAIAtgC,QAAAmV,OACAmrB,MAAA,MAIAzf,OAAA,SAAAlD,GACAhL,KAAAg0E,QAAA9lE,OAAAlD,KAYAopE,EAAAnnF,WACAy6C,2BACA,UAEAI,KAAA,WACA,OAAA9nC,KAAAg0E,QAAAlsC,OAAAl7B,KAAA,SAAA2B,GACA,IAAAlhB,EAAAkhB,EAAAlhB,MACAsgC,EAAApf,EAAAof,KAEA,OAAAA,GAEAtgC,WAAAmE,EACAm8B,MAAA,IAIAtgC,QAAAmV,OACAmrB,MAAA,MAIAzf,OAAA,SAAAlD,GACAhL,KAAAg0E,QAAA9lE,OAAAlD,KAGAuoE,EA/GA,GAiHAb,GACA+B,MAAA,SAAAvnE,EAAAw1B,GACA,IAAAgyC,GAAA,EACAxnE,EAAAF,GAAA,gBAAAjL,GACA,IAAA2yE,EAIA,GADAA,GAAA,EACA3yE,aAAAT,WAAA,CAIA,IAAAqzE,EAAA,MAAA5yE,EAAA,GACAmL,EAAArB,qBAAA8oE,EACA,IAAAC,EAAA,IAAAC,eACAC,EAAA,aAAAF,EACA,IACAA,EAAAG,aACO,MAAA91E,GACP61E,GAAA,EAEAA,EAIA5nE,EAAAE,KAAA,QACA4nE,mBAAA,EACAL,qBALAznE,EAAAE,KAAA,gBAbAF,EAAAE,KAAA,oBAqBAF,EAAAF,GAAA,qBAAAjL,IACA,EAAAqS,EAAAtmB,mBAAAiU,EAAAnE,aAEAsP,EAAAF,GAAA,yBAAAjL,GACA,OAAA2wE,EAAAuC,sBAAAlzE,EAAA2gC,MAGAuyC,sBAAA,SAAAC,EAAAxyC,GACA,IAAAgI,EACAuoC,GAAA,EACAkC,EAAA,KACAC,KACAC,EAAAH,EAAAG,WACAC,EAAA,UACA,UAAAD,OAAAC,EACA,UAAAl3E,MAAA,oBAAAi3E,EAAA,wCAAAC,EAAA,MAEA,IAAAC,EAAAL,EAAAK,MACAppC,EAAA+oC,EAAA/oC,WACAqpC,EAAAN,EAAAK,MAAA,UACAroE,EAAA,IAAAkH,EAAA3jB,eAAA+kF,EAAAD,EAAA7yC,GAEA,SAAA4wC,IACA,GAAAL,EACA,UAAA70E,MAAA,yBAGA,SAAAq3E,EAAAC,GACAN,EAAAh0E,KAAAs0E,GAEA,SAAAC,EAAAD,GACAA,EAAAtC,SACA,IAAArnF,EAAAqpF,EAAA1kC,QAAAglC,GACAN,EAAAl7C,OAAAnuC,EAAA,GAEA,SAAA6pF,EAAAlnD,GACA,IAAAmnD,GAAA,EAAAzhE,EAAA/kB,2BACAymF,EAAA,WACAnsE,QAAA2F,KAAAo7B,EAAAqrC,UAAA,YAAArrC,EAAAqrC,UAAA,iBAAAnpE,KAAA,SAAAwC,GACA,IAAA68D,EAAAniC,EAAA16B,EAAA,GACAulB,EAAAs3C,EAAA,GACA+J,EAAA/J,EAAA,GAEA4J,EAAAjsE,SACA+qB,WACAqhD,iBAESC,IAETA,EAAA,SAAAh3E,GACA42E,EAAAhsE,OAAA5K,IAOA,OALAyrC,EAAAqrC,UAAA,kBAAAnpE,KAAA,WACA89B,EAAAqrC,UAAA,qBAAAnpE,KAAA,WACA89B,EAAAqrC,UAAA,SAAArnD,IAAA9hB,KAAAkpE,EAAAG,IACSA,IACFA,GACPJ,EAAAnsE,QAEA,SAAAwsE,EAAAn0E,EAAAo0E,GACA,IACAzrC,EADA0rC,GAAA,EAAAhiE,EAAA/kB,2BAEAisB,EAAAvZ,EAAAuZ,OACA,GAAAA,EAAAvZ,KAAA,CACA,IACA2oC,EAAA,IAAAkoC,EAAAyD,gBAAAd,EAAAj6D,EAAAvZ,KAAAuZ,EAAA82B,SAAA+jC,EAAAhqC,GACAiqC,EAAAxsE,QAAA8gC,GACS,MAAAnrC,GACT62E,EAAAvsE,OAAAtK,GAEA,OAAA62E,EAAA1sE,QAEA,IAAA4sE,EACAC,KACA,IACAD,EAAA,IAAA/C,EAAArmE,GACO,MAAA3N,GAEP,OADA62E,EAAAvsE,OAAAtK,GACA62E,EAAA1sE,QAEA,IAAA8sE,EAAAF,EAAAjC,gBACAmC,EAAAhC,aAAA5nE,KAAA,WACA,GAAA4pE,EAAArC,iBAAA,CAGA,IAAArtC,EAAAxrB,EAAAwrB,kBAAA0vC,EAAA9uC,qBACAgD,EAAA,IAAAkoC,EAAA6D,kBAAAlB,EAAAe,GACAvvC,WAAA75B,EACA9N,IAAAkc,EAAAlc,IACAgzC,SAAA92B,EAAA82B,SACA3xC,OAAA+1E,EAAA5hC,cACA9N,mBACAD,eAAAvrB,EAAAurB,gBACSsvC,EAAAhqC,GACT,QAAApgD,EAAA,EAAuBA,EAAAwqF,EAAA91E,OAAyB1U,IAChD2+C,EAAAgsC,oBAAAH,EAAAxqF,IAEAwqF,KACAH,EAAAxsE,QAAA8gC,GACAyqC,EAAA,QACO7pE,MAAA,SAAAN,GACPorE,EAAAvsE,OAAAmB,GACAmqE,EAAA,OAEA,IAAAhuE,EAAA,EACAwvE,EAAA,WACA,IAAAC,GAAA,EAAAxiE,EAAA3kB,eAAA8mF,GACAj7D,EAAA7a,QAAAm2E,EAAAn2E,SAAA6a,EAAA7a,SACA,EAAA2T,EAAA7mB,MAAA,iDAEA,IACAm9C,EAAA,IAAAkoC,EAAAyD,gBAAAd,EAAAqB,EAAAt7D,EAAA82B,SAAA+jC,EAAAhqC,GACAiqC,EAAAxsE,QAAA8gC,GACS,MAAAnrC,GACT62E,EAAAvsE,OAAAtK,GAEAg3E,MAEAM,EAAA,IAAAltE,QAAA,SAAAC,EAAAC,GACA,IAAAg+B,EAAA,SAAAA,EAAA3mC,GACA,IAEA,GADAoyE,IACApyE,EAAAysB,KAKA,OAJA+c,GACAisC,SAEAxB,EAAA,MAGA,IAAApzE,EAAAb,EAAA7T,MACA8Z,IAAA,EAAAiN,EAAA1kB,iBAAAqS,GACAy0E,EAAA9uC,sBACAx6B,EAAAE,KAAA,eACAjG,SACA+hC,MAAAloC,KAAAqD,IAAA8C,EAAAqvE,EAAA5hC,eAAA,KAGAlK,EACAA,EAAAgsC,oBAAA30E,GAEAw0E,EAAAn1E,KAAAW,GAEAy0E,EAAA1uC,OAAAl7B,KAAAi7B,EAAAh+B,GACW,MAAA5K,GACX4K,EAAA5K,KAGAu3E,EAAA1uC,OAAAl7B,KAAAi7B,EAAAh+B,KASA,OAPAgtE,EAAAvrE,MAAA,SAAArM,GACAm3E,EAAAvsE,OAAA5K,GACAk2E,EAAA,OAEAA,EAAA,WACAmB,EAAA7sC,kBAAA,UAEA2sC,EAAA1sE,QAEA,SAAAotE,EAAA/0E,GACA,SAAAg1E,EAAAC,GACA1D,IACApmE,EAAAE,KAAA,UAAgC6pE,QAAAD,IAEhC,SAAAE,EAAAj4E,GAEA,GADAq0E,IACAr0E,aAAAmV,EAAAjkB,kBAAA,CACA,IAAAulF,EAAA,IAAA/C,EAAA,+BAAA1zE,EAAAc,MACA01E,EAAAC,GACAxoE,EAAAI,gBAAA,kBAAArO,GAAA2N,KAAA,SAAA7K,GACA4zE,EAAAD,GACAhrC,EAAAysC,eAAAp1E,EAAAqwC,UACAglC,MACW9rE,MAAA,SAAA/L,GACXo2E,EAAAD,GACAxoE,EAAAE,KAAA,oBAAA7N,IACWqoC,KAAA,KAAA3oC,SACFA,aAAAmV,EAAA1jB,oBACTwc,EAAAE,KAAA,aAAAnO,GACSA,aAAAmV,EAAA7jB,oBACT2c,EAAAE,KAAA,aAAAnO,GACSA,aAAAmV,EAAArkB,4BACTmd,EAAAE,KAAA,qBAAAnO,GAEAiO,EAAAE,KAAA,mBAAAgH,EAAAtkB,sBAAAmP,EAAAgB,QAAAhB,EAAAiM,aAGA,SAAAksE,IACA9D,IACAsC,GAAA,GAAAhpE,KAAAmqE,EAAA,SAAAx3E,GACA+zE,IACA/zE,aAAA6U,EAAAxkB,oBAIA86C,EAAA2sC,sBACA3sC,EAAApD,iBAAA16B,KAAA,WACA0mE,IACAsC,GAAA,GAAAhpE,KAAAmqE,EAAAG,MANAA,EAAA33E,IAQS23E,GAET5D,IACA,IAAA6C,GACAjsE,gBAAAnI,EAAAu1E,uBACAC,aAAAx1E,EAAAw1E,aACAC,gBAAAz1E,EAAAy1E,gBACAC,0BAAA11E,EAAA01E,0BACAC,aAAA31E,EAAA21E,aACArpF,gBAAA0T,EAAA1T,iBAEA6nF,EAAAn0E,EAAAo0E,GAAAvpE,KAAA,SAAA+qE,GACA,GAAA1E,EAEA,MADA0E,EAAAtE,YACA,IAAAj1E,MAAA,yBAEAssC,EAAAitC,EACAzqE,EAAAE,KAAA,wBACAs9B,EAAApD,iBAAA16B,KAAA,SAAAP,GACAa,EAAAE,KAAA,cAAsC3M,OAAA4L,EAAA7L,MAAAiB,iBAE/BmL,KAAAwqE,EAAAF,GAmKP,OA1WAhqE,EAAArB,qBAAAqpE,EAAArpE,qBAyMAqB,EAAAF,GAAA,mBAAAjL,GACA,OAAA2oC,EAAA6E,QAAAxtC,EAAA26B,WAAA9vB,KAAA,SAAAgrE,GACA,IAAAC,EAAAntC,EAAAotC,OAAAF,EAAA,UACAG,EAAArtC,EAAAotC,OAAAF,EAAA,OACAI,EAAAttC,EAAAotC,OAAAF,EAAA,YACAK,EAAAvtC,EAAAotC,OAAAF,EAAA,QACA,OAAAjuE,QAAA2F,KAAAuoE,EAAAE,EAAAC,EAAAC,IAAArrE,KAAA,SAAAsrE,GACA,OACAjkB,OAAAikB,EAAA,GACA/lE,IAAA+lE,EAAA,GACAC,SAAAD,EAAA,GACAE,KAAAF,EAAA,UAKAhrE,EAAAF,GAAA,wBAAAjL,GACA,IAAAoQ,EAAA,IAAAkC,EAAAtC,IAAAhQ,EAAAoQ,IAAAH,IAAAjQ,EAAAoQ,IAAAF,KACAomE,EAAA3tC,EAAA4tC,YAAAD,QACA,OAAAA,EAAApoC,aAAA99B,KAEAjF,EAAAF,GAAA,2BAAAjL,GACA,OAAA2oC,EAAA6tC,cAAA,kBAEArrE,EAAAF,GAAA,0BAAAjL,GACA,OAAA2oC,EAAA6tC,cAAA,kBAAAx2E,EAAAqqB,OAEAlf,EAAAF,GAAA,yBAAAjL,GACA,OAAA2oC,EAAA6tC,cAAA,gBAEArrE,EAAAF,GAAA,uBAAAjL,GACA,OAAA2oC,EAAA6tC,cAAA,cAEArrE,EAAAF,GAAA,0BAAAjL,GACA,OAAA2oC,EAAA6tC,cAAA,iBAEArrE,EAAAF,GAAA,yBAAAjL,GACA,OAAA2oC,EAAA6tC,cAAA,gBAEArrE,EAAAF,GAAA,sBAAAjL,GACA,OAAA2oC,EAAA6tC,cAAA,qBAEArrE,EAAAF,GAAA,uBAAAjL,GACA,OAAA4H,QAAA2F,KAAAo7B,EAAAqrC,UAAA,gBAAArrC,EAAA6tC,cAAA,gBAEArrE,EAAAF,GAAA,mBAAAjL,GAEA,OADA2oC,EAAA2sC,sBACA3sC,EAAApD,iBAAA16B,KAAA,SAAAP,GACA,OAAAA,EAAA7L,UAGA0M,EAAAF,GAAA,oBAAAjL,GACA,OAAA2oC,EAAA4tC,YAAAloE,KAAA8hB,QAEAhlB,EAAAF,GAAA,0BAAAjL,GACA,OAAA2oC,EAAA6E,QAAAxtC,EAAA26B,WAAA9vB,KAAA,SAAAgrE,GACA,OAAAltC,EAAAotC,OAAAF,EAAA,sBAAA71E,EAAAy6B,aAGAtvB,EAAAF,GAAA,6BAAAjL,GACA,IAAA26B,EAAA36B,EAAA26B,UACAgO,EAAA6E,QAAA7S,GAAA9vB,KAAA,SAAAgrE,GACA,IAAAlC,EAAA,IAAA/C,EAAA,2BAAAj2C,GACA+4C,EAAAC,GACA,IAAA8C,EAAA97C,EAAA,EACAv6B,EAAAs2E,KAAAh1C,MACAm0C,EAAAc,iBACAxrE,UACAwoE,OACAl5C,OAAAz6B,EAAAy6B,OACAm8C,uBAAA52E,EAAA42E,yBACS/rE,KAAA,SAAA0wB,GACTq4C,EAAAD,IACA,EAAAthE,EAAArlB,MAAA,QAAAypF,EAAA,6BAAAC,KAAAh1C,MAAAthC,GAAA,WAAAm7B,EAAAP,cACS,SAAA99B,GAET,GADA02E,EAAAD,IACAA,EAAAzC,WAAA,CAGA/lE,EAAAE,KAAA,sBAA8CwrE,UAAAxkE,EAAAjjB,qBAAAmN,UAC9C,IACAu6E,EADAC,EAAA,6DAGAD,EADA,kBAAA55E,GAEAgB,QAAAhB,EACAk/D,MAAA2a,GAEW,iCAAA75E,EAAA,YAAAxN,EAAAwN,KAEXgB,QAAAhB,EAAAgB,SAAAhB,EAAAiM,WACAizD,MAAAl/D,EAAAk/D,OAAA2a,IAIA74E,QAAA,iDAAAhB,EAAA,YAAAxN,EAAAwN,IACAk/D,MAAA2a,GAGA5rE,EAAAE,KAAA,aACAorE,UACAhsE,MAAAqsE,EACAr8C,OAAAz6B,EAAAy6B,eAIKx8B,MACLkN,EAAAF,GAAA,0BAAAjL,EAAAg3E,GACA,IAAAr8C,EAAA36B,EAAA26B,UACAq8C,EAAA/pE,OAAA,SAAAlB,KACAirE,EAAA9pE,SAAA,SAAAjE,KACA0/B,EAAA6E,QAAA7S,GAAA9vB,KAAA,SAAAgrE,GACA,IAAAlC,EAAA,IAAA/C,EAAA,wBAAAj2C,GACA+4C,EAAAC,GACA,IAAA8C,EAAA97C,EAAA,EACAv6B,EAAAs2E,KAAAh1C,MACAm0C,EAAAoB,oBACA9rE,UACAwoE,OACAqD,OACAE,oBAAAl3E,EAAAk3E,oBACAC,iBAAAn3E,EAAAm3E,mBACStsE,KAAA,WACT+oE,EAAAD,IACA,EAAAthE,EAAArlB,MAAA,uBAAAypF,EAAA,YAAAC,KAAAh1C,MAAAthC,GAAA,MACA42E,EAAAhqE,SACS,SAAA/D,GAET,GADA2qE,EAAAD,IACAA,EAAAzC,WAIA,MADA8F,EAAAvsE,MAAAxB,GACAA,QAIAkC,EAAAF,GAAA,mBAAAjL,GACA,OAAA2oC,EAAAyE,YAEAjiC,EAAAF,GAAA,qBAAAjL,GACAkxE,GAAA,EACAvoC,IACAA,EAAA2oC,YACA3oC,EAAA,MAEAyqC,GACAA,IAEA,IAAAgE,KAKA,OAJA/D,EAAA5jE,QAAA,SAAAkkE,GACAyD,EAAA/3E,KAAAs0E,EAAAvC,UACAuC,EAAArC,cAEA1pE,QAAA2F,IAAA6pE,GAAAvsE,KAAA,WACAM,EAAAsC,UACAtC,EAAA,SAGAA,EAAAF,GAAA,iBAAAjL,GACA+0E,EAAA5B,GACAA,EAAA,OAEAM,GAEA4D,mBAAA,SAAA12C,GACA,IAAAx1B,EAAA,IAAAkH,EAAA3jB,eAAA,gBAAAiyC,GACAgwC,EAAA+B,MAAAvnE,EAAAw1B,GACAx1B,EAAAE,KAAA,gBAGA,SAAAisE,EAAAC,GACA,0BAAAA,EAAAzsE,aAAA,cAAAysE,EAEA,qBAAAh7D,UAAA,EAAAw0D,EAAAE,YAAA,qBAAAtnF,MAAA2tF,EAAA3tF,OACAgnF,EAAA0G,mBAAA1tF,MAEAD,EAAAknF,aACAlnF,EAAAinF,wBAIA,SAAAlnF,EAAAC,EAAAI,GAEA,aAGA,IAAA4F,EAAA,oBAAAC,QAAA,kBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,oBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAzE,UAAA,gBAAA2E,GAE5I2nF,EAAA1tF,EAAA,IACA,IAAA0tF,EAAAC,2BAAA,CACAD,EAAAC,4BAAA,EACA,IAAAC,EAAA5tF,EAAA,IACA6tF,EAAA,iCAAAp7D,OAAA,YAAA7sB,EAAA6sB,UAAA,iCAAArX,SAAA,YAAAxV,EAAAwV,YACA,YACAsyE,EAAAI,MAAAF,MAGAF,EAAAI,KAAA,SAAA1P,GACA,OAAA7+E,EAAAg5C,KAAA6lC,EAAA,UAAA/+D,SAAA,aALA,GAQA,YACAquE,EAAAK,MAAAH,MAGAF,EAAAK,KAAA,SAAA9+D,GACA,OAAA1vB,EAAAg5C,KAAAtpB,EAAA,UAAA5P,SAAA,YALA,GAQA,WACAwuE,IAGA,kBAAAzyE,UAGAza,OAAAC,eAAAwa,SAAA,iBACAra,IAAA,WACA,IAAAitF,EAAA5yE,SAAAK,qBAAA,UACA,OAAAuyE,IAAAp5E,OAAA,IAGA9T,YAAA,EACAD,cAAA,KAdA,GAiBA,WACAgtF,GAGA,qBAAAI,QAAA7sF,UAAAolB,SAGAynE,QAAA7sF,UAAAolB,OAAA,WACArS,KAAA+5E,YACA/5E,KAAA+5E,WAAAj2C,YAAA9jC,QATA,GAaA,WACAW,OAAA1T,UAAA67C,UAGAj9C,EAAA,IAJA,GAMA,WACAwa,MAAApZ,UAAA67C,UAGAj9C,EAAA,IAJA,GAMA,WACAmV,KAAA5S,OAGA4S,KAAA5S,KAAAvC,EAAA,KAJA,GAMA,WACAiS,OAAAq3B,QAGAr3B,OAAAq3B,MAAAtpC,EAAA,KAJA,GAMA,WACAiS,OAAAC,YAGAD,OAAAC,UAAAlS,EAAA,KAJA,GAMA,WACA0tF,EAAA5vE,UAGA4vE,EAAA5vE,QAAA9d,EAAA,KAJA,GAMA,WACA0tF,EAAAS,UAGAT,EAAAS,QAAAnuF,EAAA,MAJA,GAMA,WACA,IAAAouF,GAAA,EACA,IACA,uBAAAl7E,KAAA,WAAAtN,EAAAsN,IAAA9R,YAAA,WAAA8R,IAAA9R,UAAA,CACA,IAAA8jE,EAAA,IAAAhyD,IAAA,gBACAgyD,EAAAmpB,SAAA,QACAD,EAAA,mBAAAlpB,EAAAzf,MAEK,MAAAryC,IACL,IAAAg7E,EAAA,CAGA,IAAAE,EAAA3tF,OAAAoT,OAAA,MACAu6E,EAAA,UACAA,EAAA,UACAA,EAAA,aACAA,EAAA,WACAA,EAAA,aACAA,EAAA,SACAA,EAAA,WACA,IAAAC,EAAA5tF,OAAAoT,OAAA,MACAw6E,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eA4BA,IAAA1qE,EACA2qE,EAAA,WACAC,EAAA,oBAkXAC,EAAAttF,WACAie,SAAA,WACA,OAAAlL,KAAAsxC,MAGAA,WACA,GAAAtxC,KAAAw6E,WACA,OAAAx6E,KAAAy6E,KAEA,IAAAC,EAAA,GAIA,MAHA,KAAA16E,KAAA26E,WAAA,OAAA36E,KAAA46E,YACAF,EAAA16E,KAAA26E,WAAA,OAAA36E,KAAA46E,UAAA,IAAA56E,KAAA46E,UAAA,SAEA56E,KAAAX,UAAAW,KAAA66E,YAAA,KAAAH,EAAA16E,KAAA86E,KAAA,IAAA96E,KAAAk6E,SAAAl6E,KAAA+6E,OAAA/6E,KAAAg7E,WAEA1pC,SAAAjkD,GACAolB,EAAAxmB,KAAA+T,MACA0iB,EAAAz2B,KAAA+T,KAAA3S,IAEAgS,eACA,OAAAW,KAAAi7E,QAAA,KAEA57E,aAAAhS,GACA2S,KAAAw6E,YAGA93D,EAAAz2B,KAAA+T,KAAA3S,EAAA,qBAEAytF,WACA,OAAA96E,KAAAw6E,WAAA,GAAAx6E,KAAAk7E,MAAAl7E,KAAAm7E,MAAA,IAAAn7E,KAAAk7E,MAAAl7E,KAAAm7E,OAEAL,SAAAztF,IACA2S,KAAAw6E,YAAAx6E,KAAA66E,aAGAn4D,EAAAz2B,KAAA+T,KAAA3S,EAAA,SAEA+tF,eACA,OAAAp7E,KAAAm7E,OAEAC,aAAA/tF,IACA2S,KAAAw6E,YAAAx6E,KAAA66E,aAGAn4D,EAAAz2B,KAAA+T,KAAA3S,EAAA,aAEAq1C,WACA,OAAA1iC,KAAAk7E,OAEAx4C,SAAAr1C,IACA2S,KAAAw6E,YAAAx6E,KAAA66E,aAGAn4D,EAAAz2B,KAAA+T,KAAA3S,EAAA,SAEA6sF,eACA,OAAAl6E,KAAAw6E,WAAA,GAAAx6E,KAAA66E,YAAA,IAAA76E,KAAAq7E,MAAAh6E,KAAA,KAAArB,KAAAs7E,aAEApB,aAAA7sF,IACA2S,KAAAw6E,YAAAx6E,KAAA66E,cAGA76E,KAAAq7E,SACA34D,EAAAz2B,KAAA+T,KAAA3S,EAAA,yBAEAkuF,aACA,OAAAv7E,KAAAw6E,aAAAx6E,KAAA+6E,QAAA,MAAA/6E,KAAA+6E,OAAA,GAAA/6E,KAAA+6E,QAEAQ,WAAAluF,IACA2S,KAAAw6E,YAAAx6E,KAAA66E,cAGA76E,KAAA+6E,OAAA,IACA,MAAA1tF,EAAA,KACAA,IAAA6W,MAAA,IAEAwe,EAAAz2B,KAAA+T,KAAA3S,EAAA,WAEAsmE,WACA,OAAA3zD,KAAAw6E,aAAAx6E,KAAAg7E,WAAA,MAAAh7E,KAAAg7E,UAAA,GAAAh7E,KAAAg7E,WAEArnB,SAAAtmE,GACA2S,KAAAw6E,aAGAx6E,KAAAg7E,UAAA,IACA,MAAA3tF,EAAA,KACAA,IAAA6W,MAAA,IAEAwe,EAAAz2B,KAAA+T,KAAA3S,EAAA,cAEA2R,aACA,IAAA87E,EACA,GAAA96E,KAAAw6E,aAAAx6E,KAAAi7E,QACA,SAEA,OAAAj7E,KAAAi7E,SACA,WACA,WACA,iBACA,aACA,aACA,WACA,IACA,WAAAV,EAAAv6E,KAAAs7E,aAAAt8E,QAAA,OACa,MAAAw8E,IACb,aAGA,OADAV,EAAA96E,KAAA86E,KACAA,EAGA96E,KAAAi7E,QAAA,MAAAH,EAFA,KAKA,IAAAW,EAAAlC,EAAAx6E,IACA08E,IACAlB,EAAAnrF,gBAAA,SAAAgb,GACA,OAAAqxE,EAAArsF,gBAAAyR,MAAA46E,EAAAtxE,YAEAowE,EAAAmB,gBAAA,SAAAt8E,GACAq8E,EAAAC,gBAAAt8E,KAGAm6E,EAAAx6E,IAAAw7E,EA3gBA,SAAAoB,EAAAC,GACA,YAAApqF,IAAA2oF,EAAAyB,GAEA,SAAAC,IACAppE,EAAAxmB,KAAA+T,MACAA,KAAAw6E,YAAA,EAEA,SAAAsB,EAAAniD,GAIA,MAHA,KAAAA,GACAkiD,EAAA5vF,KAAA+T,MAEA25B,EAAA1zB,cAEA,SAAA81E,EAAA5vF,GACA,IAAAq9E,EAAAr9E,EAAAoV,WAAA,GACA,OAAAioE,EAAA,IAAAA,EAAA,8BAAA94B,QAAA84B,GACAr9E,EAEAod,mBAAApd,GAEA,SAAA6vF,EAAA7vF,GACA,IAAAq9E,EAAAr9E,EAAAoV,WAAA,GACA,OAAAioE,EAAA,IAAAA,EAAA,2BAAA94B,QAAA84B,GACAr9E,EAEAod,mBAAApd,GAKA,SAAAu2B,EAAA5H,EAAAmhE,EAAAn9E,GACA,SAAAyqC,EAAAtpC,GACAi8E,EAAA96E,KAAAnB,GAEA,IAAA6vB,EAAAmsD,GAAA,eACAE,EAAA,EACA35E,EAAA,GACA45E,GAAA,EACAC,GAAA,EACAH,KACAI,EAAA,OAAAxhE,EAAAqhE,EAAA,KAAAzsE,GAAA,IAAAysE,KAAAn8E,KAAAw6E,WAAA,CACA,IAAAruF,EAAA2uB,EAAAqhE,GACA,OAAArsD,GACA,mBACA,IAAA3jC,IAAAkuF,EAAAj8C,KAAAjyC,GAGa,IAAA8vF,EAIA,CACb1yC,EAAA,mBACA,MAAA+yC,EALA95E,EAAA,GACAstB,EAAA,YACA,SALAttB,GAAArW,EAAA8Z,cACA6pB,EAAA,SASA,MACA,aACA,GAAA3jC,GAAAmuF,EAAAl8C,KAAAjyC,GACAqW,GAAArW,EAAA8Z,kBACa,UAAA9Z,EAkBA,IAAA8vF,EAKA,IAAA9vF,IAAAujB,EACb,MAAA4sE,EAEA/yC,EAAA,qCAAAp9C,GACA,MAAAmwF,EARA95E,EAAA,GACA25E,EAAA,EACArsD,EAAA,YACA,SAnBA,GAFA9vB,KAAAi7E,QAAAz4E,EACAA,EAAA,GACAy5E,EACA,MAAAK,EAEAX,EAAA37E,KAAAi7E,WACAj7E,KAAA66E,aAAA,GAGA/qD,EADA,SAAA9vB,KAAAi7E,QACA,WACej7E,KAAA66E,aAAA/7E,KAAAm8E,UAAAj7E,KAAAi7E,QACf,wBACej7E,KAAA66E,YACf,wBAEA,cAaA,MACA,kBACA,MAAA1uF,GACA6T,KAAA+6E,OAAA,IACAjrD,EAAA,SACa,MAAA3jC,GACb6T,KAAAg7E,UAAA,IACAlrD,EAAA,YAEA3jC,IAAAujB,GAAA,OAAAvjB,GAAA,OAAAA,GAAA,OAAAA,IACA6T,KAAAs7E,aAAAS,EAAA5vF,IAGA,MACA,gBACA,GAAA2S,GAAA68E,EAAA78E,EAAAm8E,SAGa,CACbnrD,EAAA,WACA,SAJAyZ,EAAA,mBACAsyC,EAAA5vF,KAAA+T,MAKA,MACA,4BACA,SAAA7T,GAAA,MAAA2uB,EAAAqhE,EAAA,GAEa,CACb5yC,EAAA,oBAAAp9C,GACA2jC,EAAA,WACA,SAJAA,EAAA,2BAMA,MACA,eAKA,GAJA9vB,KAAA66E,aAAA,EACA,SAAA76E,KAAAi7E,UACAj7E,KAAAi7E,QAAAn8E,EAAAm8E,SAEA9uF,IAAAujB,EAAA,CACA1P,KAAAm7E,MAAAr8E,EAAAq8E,MACAn7E,KAAAk7E,MAAAp8E,EAAAo8E,MACAl7E,KAAAq7E,MAAAv8E,EAAAu8E,MAAAn3E,QACAlE,KAAA+6E,OAAAj8E,EAAAi8E,OACA/6E,KAAA26E,UAAA77E,EAAA67E,UACA36E,KAAA46E,UAAA97E,EAAA87E,UACA,MAAA0B,EACa,SAAAnwF,GAAA,OAAAA,EACb,OAAAA,GACAo9C,EAAA,gCAEAzZ,EAAA,sBACa,SAAA3jC,EACb6T,KAAAm7E,MAAAr8E,EAAAq8E,MACAn7E,KAAAk7E,MAAAp8E,EAAAo8E,MACAl7E,KAAAq7E,MAAAv8E,EAAAu8E,MAAAn3E,QACAlE,KAAA+6E,OAAA,IACA/6E,KAAA26E,UAAA77E,EAAA67E,UACA36E,KAAA46E,UAAA97E,EAAA87E,UACA9qD,EAAA,YACa,UAAA3jC,EASA,CACb,IAAAowF,EAAAzhE,EAAAqhE,EAAA,GACAK,EAAA1hE,EAAAqhE,EAAA,IACA,SAAAn8E,KAAAi7E,UAAAZ,EAAAj8C,KAAAjyC,IAAA,MAAAowF,GAAA,MAAAA,GAAAC,IAAA9sE,GAAA,MAAA8sE,GAAA,OAAAA,GAAA,MAAAA,GAAA,MAAAA,KACAx8E,KAAAm7E,MAAAr8E,EAAAq8E,MACAn7E,KAAAk7E,MAAAp8E,EAAAo8E,MACAl7E,KAAA26E,UAAA77E,EAAA67E,UACA36E,KAAA46E,UAAA97E,EAAA87E,UACA56E,KAAAq7E,MAAAv8E,EAAAu8E,MAAAn3E,QACAlE,KAAAq7E,MAAAxrC,OAEA/f,EAAA,gBACA,SApBA9vB,KAAAm7E,MAAAr8E,EAAAq8E,MACAn7E,KAAAk7E,MAAAp8E,EAAAo8E,MACAl7E,KAAAq7E,MAAAv8E,EAAAu8E,MAAAn3E,QACAlE,KAAA+6E,OAAAj8E,EAAAi8E,OACA/6E,KAAAg7E,UAAA,IACAh7E,KAAA26E,UAAA77E,EAAA67E,UACA36E,KAAA46E,UAAA97E,EAAA87E,UACA9qD,EAAA,WAeA,MACA,qBACA,SAAA3jC,GAAA,OAAAA,EASa,CACb,SAAA6T,KAAAi7E,UACAj7E,KAAAm7E,MAAAr8E,EAAAq8E,MACAn7E,KAAAk7E,MAAAp8E,EAAAo8E,MACAl7E,KAAA26E,UAAA77E,EAAA67E,UACA36E,KAAA46E,UAAA97E,EAAA87E,WAEA9qD,EAAA,gBACA,SAhBA,OAAA3jC,GACAo9C,EAAA,gCAGAzZ,EADA,SAAA9vB,KAAAi7E,QACA,YAEA,2BAYA,MACA,4BACA,SAAA9uF,EAEa,CACbo9C,EAAA,sBAAAp9C,GACA2jC,EAAA,2BACA,SAJAA,EAAA,yBAMA,MACA,6BAEA,GADAA,EAAA,2BACA,MAAA3jC,EAAA,CACAo9C,EAAA,sBAAAp9C,GACA,SAEA,MACA,+BACA,SAAAA,GAAA,OAAAA,EAAA,CACA2jC,EAAA,YACA,SAEAyZ,EAAA,4BAAAp9C,GAEA,MACA,gBACA,SAAAA,EAAA,CACAiwF,IACA7yC,EAAA,mBACA/mC,GAAA,OAEA45E,GAAA,EACA,QAAArwF,EAAA,EAA6BA,EAAAyW,EAAA/B,OAAmB1U,IAAA,CAChD,IAAA0wF,EAAAj6E,EAAAzW,GACA,UAAA0wF,GAAA,OAAAA,GAAA,OAAAA,EAIA,SAAAA,GAAA,OAAAz8E,KAAA46E,UAAA,CAIA,IAAA8B,EAAAX,EAAAU,GACA,OAAAz8E,KAAA46E,UACA56E,KAAA46E,WAAA8B,EAEA18E,KAAA26E,WAAA+B,OAPA18E,KAAA46E,UAAA,QAJArxC,EAAA,oCAcA/mC,EAAA,OACa,IAAArW,IAAAujB,GAAA,MAAAvjB,GAAA,OAAAA,GAAA,MAAAA,GAAA,MAAAA,EAAA,CACbgwF,GAAA35E,EAAA/B,OACA+B,EAAA,GACAstB,EAAA,OACA,SAEAttB,GAAArW,EAEA,MACA,gBACA,GAAAA,IAAAujB,GAAA,MAAAvjB,GAAA,OAAAA,GAAA,MAAAA,GAAA,MAAAA,EAAA,CACA,IAAAqW,EAAA/B,SAAA45E,EAAAj8C,KAAA57B,EAAA,WAAAA,EAAA,UAAAA,EAAA,GAEe,IAAAA,EAAA/B,OACfqvB,EAAA,uBAEA9vB,KAAAm7E,MAAAW,EAAA7vF,KAAA+T,KAAAwC,GACAA,EAAA,GACAstB,EAAA,uBANAA,EAAA,gBAQA,SACa,OAAA3jC,GAAA,OAAAA,GAAA,OAAAA,EACbo9C,EAAA,oCAEA/mC,GAAArW,EAEA,MACA,WACA,eACA,SAAAA,GAAAkwF,EAOa,IAAAlwF,IAAAujB,GAAA,MAAAvjB,GAAA,OAAAA,GAAA,MAAAA,GAAA,MAAAA,EAAA,CAIb,GAHA6T,KAAAm7E,MAAAW,EAAA7vF,KAAA+T,KAAAwC,GACAA,EAAA,GACAstB,EAAA,sBACAmsD,EACA,MAAAK,EAEA,SACa,OAAAnwF,GAAA,OAAAA,GAAA,OAAAA,GACb,MAAAA,EACAkwF,GAAA,EACe,MAAAlwF,IACfkwF,GAAA,GAEA75E,GAAArW,GAEAo9C,EAAA,wCAAAp9C,QAnBA,GAHA6T,KAAAm7E,MAAAW,EAAA7vF,KAAA+T,KAAAwC,GACAA,EAAA,GACAstB,EAAA,OACA,aAAAmsD,EACA,MAAAK,EAoBA,MACA,WACA,WAAAl+C,KAAAjyC,GACAqW,GAAArW,MACa,IAAAA,IAAAujB,GAAA,MAAAvjB,GAAA,OAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA8vF,EAAA,CACb,QAAAz5E,EAAA,CACA,IAAAm6E,EAAAlnC,SAAAjzC,EAAA,IACAm6E,IAAAxC,EAAAn6E,KAAAi7E,WACAj7E,KAAAk7E,MAAAyB,EAAA,IAEAn6E,EAAA,GAEA,GAAAy5E,EACA,MAAAK,EAEAxsD,EAAA,sBACA,SACa,OAAA3jC,GAAA,OAAAA,GAAA,OAAAA,EACbo9C,EAAA,+BAAAp9C,GAEA0vF,EAAA5vF,KAAA+T,MAEA,MACA,0BAKA,GAJA,OAAA7T,GACAo9C,EAAA,6BAEAzZ,EAAA,gBACA,MAAA3jC,GAAA,OAAAA,EACA,SAEA,MACA,oBAKA,IAAAknE,EAJA,GAAAlnE,IAAAujB,GAAA,MAAAvjB,GAAA,OAAAA,IAAA8vF,GAAA,MAAA9vF,GAAA,MAAAA,GA6Ba,OAAAA,GAAA,OAAAA,GAAA,OAAAA,IACbqW,GAAAu5E,EAAA5vF,QA7BA,OAAAA,GACAo9C,EAAA,qCAGA8pB,EAAA+mB,EAAA53E,EAAAyD,kBACAzD,EAAA6wD,GAEA,OAAA7wD,GACAxC,KAAAq7E,MAAAxrC,MACA,MAAA1jD,GAAA,OAAAA,GACA6T,KAAAq7E,MAAAj6E,KAAA,KAEe,MAAAoB,GAAA,MAAArW,GAAA,OAAAA,EACf6T,KAAAq7E,MAAAj6E,KAAA,IACe,MAAAoB,IACf,SAAAxC,KAAAi7E,SAAA,IAAAj7E,KAAAq7E,MAAA56E,QAAA,IAAA+B,EAAA/B,QAAA45E,EAAAj8C,KAAA57B,EAAA,WAAAA,EAAA,KACAA,IAAA,QAEAxC,KAAAq7E,MAAAj6E,KAAAoB,IAEAA,EAAA,GACA,MAAArW,GACA6T,KAAA+6E,OAAA,IACAjrD,EAAA,SACe,MAAA3jC,IACf6T,KAAAg7E,UAAA,IACAlrD,EAAA,YAKA,MACA,YACAmsD,GAAA,MAAA9vF,EAGaA,IAAAujB,GAAA,OAAAvjB,GAAA,OAAAA,GAAA,OAAAA,IACb6T,KAAA+6E,QAAAiB,EAAA7vF,KAHA6T,KAAAg7E,UAAA,IACAlrD,EAAA,YAIA,MACA,eACA3jC,IAAAujB,GAAA,OAAAvjB,GAAA,OAAAA,GAAA,OAAAA,IACA6T,KAAAg7E,WAAA7uF,GAEA,MAEAgwF,KAGA,SAAA1pE,IACAzS,KAAAi7E,QAAA,GACAj7E,KAAAs7E,YAAA,GACAt7E,KAAA26E,UAAA,GACA36E,KAAA46E,UAAA,KACA56E,KAAAm7E,MAAA,GACAn7E,KAAAk7E,MAAA,GACAl7E,KAAAq7E,SACAr7E,KAAA+6E,OAAA,GACA/6E,KAAAg7E,UAAA,GACAh7E,KAAAw6E,YAAA,EACAx6E,KAAA66E,aAAA,EAEA,SAAAN,EAAAn7E,EAAAN,QACAtN,IAAAsN,gBAAAy7E,IACAz7E,EAAA,IAAAy7E,EAAA55E,OAAA7B,KAEAkB,KAAAy6E,KAAAr7E,EACAqT,EAAAxmB,KAAA+T,MACA,IAAA8a,EAAA1b,EAAAmB,QAAA,mCACAmiB,EAAAz2B,KAAA+T,KAAA8a,EAAA,KAAAhc,IAtaA,GAsiBA,WACAtS,OAAA2W,SAGA3W,OAAA2W,OAAAtX,EAAA,MAJA,KAUA,SAAAL,EAAAC,EAAAI,GAEA,aAGAL,EAAAC,QAAA,qBAAA6yB,eAAAtd,YAAAsd,OAAA,qBAAAjzB,KAAA2V,YAAA3V,EAAA,qBAAAK,WAAAsV,YAAAtV,SAIA,SAAAF,EAAAC,EAAAI,GAEA,aAGAA,EAAA,IACAL,EAAAC,QAAAI,EAAA,GAAA8U,OAAAmoC,UAIA,SAAAt9C,EAAAC,EAAAI,GAEA,aAGA,IAAAsxB,EAAAtxB,EAAA,GACA8sC,EAAA9sC,EAAA,IACA+wF,EAAA,WACAz/D,IAAAW,EAAAX,EAAAK,EAAA3xB,EAAA,GAAAA,CAAA+wF,GAAA,UACA9zC,SAAA,SAAA+zC,GACA,SAAAlkD,EAAA34B,KAAA68E,EAAAD,GAAAlsC,QAAAmsC,EAAA1yE,UAAA1J,OAAA,EAAA0J,UAAA,QAAA3Y,OAMA,SAAAhG,EAAAC,EAAAI,GAEA,aAGA,IAAAixF,EAAAjxF,EAAA,IACAm0B,EAAAn0B,EAAA,IACAL,EAAAC,QAAA,SAAA6zB,EAAAu9D,EAAA79C,GACA,GAAA89C,EAAAD,GAAA,MAAAl+D,UAAA,UAAAqgB,EAAA,0BACA,OAAAr+B,OAAAqf,EAAAV,MAKA,SAAA9zB,EAAAC,EAAAI,GAEA,aAGA,IAAA6yB,EAAA7yB,EAAA,GACAmpC,EAAAnpC,EAAA,IACAkxF,EAAAlxF,EAAA,EAAAA,CAAA,SACAL,EAAAC,QAAA,SAAA8nB,GACA,IAAAupE,EACA,OAAAp+D,EAAAnL,UAAA/hB,KAAAsrF,EAAAvpE,EAAAwpE,MAAAD,EAAA,UAAA9nD,EAAAzhB,MAKA,SAAA/nB,EAAAC,EAAAI,GAEA,aAGA,IAAAkxF,EAAAlxF,EAAA,EAAAA,CAAA,SACAL,EAAAC,QAAA,SAAAirC,GACA,IAAAsmD,EAAA,IACA,IACA,MAAAtmD,GAAAsmD,GACG,MAAA/9E,GACH,IAEA,OADA+9E,EAAAD,IAAA,GACA,MAAArmD,GAAAsmD,GACK,MAAAv9D,KAEL,WAKA,SAAAj0B,EAAAC,EAAAI,GAEA,aAGAA,EAAA,IACAL,EAAAC,QAAAI,EAAA,GAAAwa,MAAAyiC,UAIA,SAAAt9C,EAAAC,EAAAI,GAEA,aAGA,IAAAsxB,EAAAtxB,EAAA,GACAoxF,EAAApxF,EAAA,GAAAA,EAAA,GACAsxB,IAAAW,EAAA,SACAgrB,SAAA,SAAA/K,GACA,OAAAk/C,EAAAj9E,KAAA+9B,EAAA5zB,UAAA1J,OAAA,EAAA0J,UAAA,QAAA3Y,MAGA3F,EAAA,GAAAA,CAAA,aAIA,SAAAL,EAAAC,EAAAI,GAEA,aAGA,IAAAqpC,EAAArpC,EAAA,IACAwY,EAAArD,KAAAqD,IACApD,EAAAD,KAAAC,IACAzV,EAAAC,QAAA,SAAAgiC,EAAAhtB,GAEA,OADAgtB,EAAAyH,EAAAzH,GACAA,EAAA,EAAAppB,EAAAopB,EAAAhtB,EAAA,GAAAQ,EAAAwsB,EAAAhtB,KAKA,SAAAjV,EAAAC,EAAAI,GAEA,aAGAA,EAAA,IACAL,EAAAC,QAAAI,EAAA,GAAAmV,KAAA5S,MAIA,SAAA5C,EAAAC,EAAAI,GAEA,aAGA,IAAAsxB,EAAAtxB,EAAA,GACAsxB,IAAAS,EAAA,QACAxvB,KAAA,SAAA6T,GACA,OAAAjB,KAAA9C,IAAA+D,GAAAjB,KAAAk8E,QAMA,SAAA1xF,EAAAC,EAAAI,GAEA,aAGAA,EAAA,IACAL,EAAAC,QAAAI,EAAA,GAAAiS,OAAAq3B,OAIA,SAAA3pC,EAAAC,EAAAI,GAEA,aAGA,IAAAsxB,EAAAtxB,EAAA,GACAsxB,IAAAS,EAAA,UACAuX,MAAA,SAAAtvB,GACA,OAAAA,SAMA,SAAAra,EAAAC,EAAAI,GAEA,aAGAA,EAAA,IACAL,EAAAC,QAAAI,EAAA,GAAAiS,OAAAC,WAIA,SAAAvS,EAAAC,EAAAI,GAEA,aAGA,IAAAsxB,EAAAtxB,EAAA,GACAsxB,IAAAS,EAAA,UAA8B7f,UAAAlS,EAAA,OAI9B,SAAAL,EAAAC,EAAAI,GAEA,aAGA,IAAA6yB,EAAA7yB,EAAA,GACAq1B,EAAAlgB,KAAAkgB,MACA11B,EAAAC,QAAA,SAAA8nB,GACA,OAAAmL,EAAAnL,IAAA4pE,SAAA5pE,IAAA2N,EAAA3N,SAKA,SAAA/nB,EAAAC,EAAAI,GAEA,aAGAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAL,EAAAC,QAAAI,EAAA,GAAA8d,SAIA,SAAAne,EAAAC,EAAAI,GAEA,aAGA,IAAAuxF,EAAAvxF,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,CAAA8U,OAAA,kBAAA08E,GACAr9E,KAAAklC,GAAAvkC,OAAA08E,GACAr9E,KAAAqqC,GAAA,GACC,WACD,IAEAizC,EAFAp+D,EAAAlf,KAAAklC,GACAzX,EAAAztB,KAAAqqC,GAEA,OAAA5c,GAAAvO,EAAAze,QACApT,WAAAmE,EACAm8B,MAAA,IAEA2vD,EAAAF,EAAAl+D,EAAAuO,GACAztB,KAAAqqC,IAAAizC,EAAA78E,QAEApT,MAAAiwF,EACA3vD,MAAA,OAMA,SAAAniC,EAAAC,EAAAI,GAEA,aAGA,IAAAqpC,EAAArpC,EAAA,IACAm0B,EAAAn0B,EAAA,IACAL,EAAAC,QAAA,SAAAozB,GACA,gBAAAS,EAAAxd,GACA,IAGA6C,EAAAnB,EAHApW,EAAAuT,OAAAqf,EAAAV,IACAvzB,EAAAmpC,EAAApzB,GACA9V,EAAAoB,EAAAqT,OAEA,OAAA1U,EAAA,GAAAA,GAAAC,EAAA6yB,EAAA,QAAArtB,GACAmT,EAAAvX,EAAAmU,WAAAxV,GACA4Y,EAAA,OAAAA,EAAA,OAAA5Y,EAAA,IAAAC,IAAAwX,EAAApW,EAAAmU,WAAAxV,EAAA,WAAAyX,EAAA,MAAAqb,EAAAzxB,EAAA+b,OAAApd,GAAA4Y,EAAAka,EAAAzxB,EAAA8W,MAAAnY,IAAA,GAAAyX,EAAA,OAAAmB,EAAA,qBAMA,SAAAnZ,EAAAC,EAAAI,GAEA,aAGA,IAAA+T,EAAA/T,EAAA,IACA4mE,EAAA5mE,EAAA,IACA2yC,EAAA3yC,EAAA,IACAwzC,KACAxzC,EAAA,GAAAA,CAAAwzC,EAAAxzC,EAAA,EAAAA,CAAA,uBACA,OAAAmU,OAEAxU,EAAAC,QAAA,SAAAgqC,EAAAuJ,EAAAtR,GACA+H,EAAAxoC,UAAA2S,EAAAy/B,GAAqD3R,KAAA+kC,EAAA,EAAA/kC,KACrD8Q,EAAA/I,EAAAuJ,EAAA,eAKA,SAAAxzC,EAAAC,EAAAI,GAEA,aAGA,IAAA8zB,EAAA9zB,EAAA,GACA0xF,EAAA1xF,EAAA,IACA4gC,EAAA5gC,EAAA,IACA2xF,EAAA3xF,EAAA,GAAAA,CAAA,YACA4xF,EAAA,aACAvgE,EAAA,YACAwgE,EAAA,WACA,IAIAC,EAJAC,EAAA/xF,EAAA,GAAAA,CAAA,UACAE,EAAA0gC,EAAAhsB,OACAo9E,EAAA,IACAC,EAAA,IAEAF,EAAAnwC,MAAAswC,QAAA,OACAlyF,EAAA,IAAA0b,YAAAq2E,GACAA,EAAA92E,IAAA,cACA62E,EAAAC,EAAAI,cAAA/2E,SACA02E,EAAAM,OACAN,EAAAO,MAAAL,EAAA,SAAAC,EAAA,oBAAAD,EAAA,UAAAC,GACAH,EAAA5uE,QACA2uE,EAAAC,EAAAngE,EACA,MAAAzxB,WACA2xF,EAAAxgE,GAAAuP,EAAA1gC,IACG,OAAA2xF,KAEHlyF,EAAAC,QAAAe,OAAAoT,QAAA,SAAAsf,EAAAi/D,GACA,IAAAz4E,EAOA,OANA,OAAAwZ,GACAu+D,EAAAvgE,GAAAyC,EAAAT,GACAxZ,EAAA,IAAA+3E,EACAA,EAAAvgE,GAAA,KACAxX,EAAA83E,GAAAt+D,GACGxZ,EAAAg4E,SACHlsF,IAAA2sF,EAAAz4E,EAAA63E,EAAA73E,EAAAy4E,KAKA,SAAA3yF,EAAAC,EAAAI,GAEA,aAGA,IAAA0zB,EAAA1zB,EAAA,IACA8zB,EAAA9zB,EAAA,GACAwlB,EAAAxlB,EAAA,IACAL,EAAAC,QAAAI,EAAA,IAAAW,OAAA+lE,iBAAA,SAAArzC,EAAAi/D,GACAx+D,EAAAT,GACA,IAGApB,EAHAxM,EAAAD,EAAA8sE,GACA19E,EAAA6Q,EAAA7Q,OACA1U,EAAA,EAEA,MAAA0U,EAAA1U,EACAwzB,EAAAE,EAAAP,EAAApB,EAAAxM,EAAAvlB,KAAAoyF,EAAArgE,IACG,OAAAoB,IAKH,SAAA1zB,EAAAC,EAAAI,GAEA,aAGA,IAAA0lB,EAAA1lB,EAAA,IACA8xC,EAAA9xC,EAAA,IACAuyF,EAAAvyF,EAAA,GAAAA,EAAA,GACA2xF,EAAA3xF,EAAA,GAAAA,CAAA,YACAL,EAAAC,QAAA,SAAAsB,EAAAogD,GACA,IAGAvqC,EAHAsc,EAAAye,EAAA5wC,GACAhB,EAAA,EACA2Z,KAEA,IAAA9C,KAAAsc,EACAtc,GAAA46E,GAAAjsE,EAAA2N,EAAAtc,IAAA8C,EAAAtE,KAAAwB,GACG,MAAAuqC,EAAA1sC,OAAA1U,EACHwlB,EAAA2N,EAAAtc,EAAAuqC,EAAAphD,SACAqyF,EAAA14E,EAAA9C,IAAA8C,EAAAtE,KAAAwB,IAEG,OAAA8C,IAKH,SAAAla,EAAAC,EAAAI,GAEA,aAGA,IAAA0lB,EAAA1lB,EAAA,IACA04C,EAAA14C,EAAA,IACA2xF,EAAA3xF,EAAA,GAAAA,CAAA,YACAwyF,EAAA7xF,OAAAS,UACAzB,EAAAC,QAAAe,OAAAiyC,gBAAA,SAAAvf,GAEA,OADAA,EAAAqlB,EAAArlB,GACA3N,EAAA2N,EAAAs+D,GAAAt+D,EAAAs+D,GACA,mBAAAt+D,EAAArtB,aAAAqtB,eAAArtB,YACAqtB,EAAArtB,YAAA5E,UAEAiyB,aAAA1yB,OAAA6xF,EAAA,OAKA,SAAA7yF,EAAAC,EAAAI,GAEA,aAGA,IAAAyyF,EAAAzyF,EAAA,IACA0hC,EAAA1hC,EAAA,KACAyyC,EAAAzyC,EAAA,IACA8xC,EAAA9xC,EAAA,IACAL,EAAAC,QAAAI,EAAA,GAAAA,CAAAwa,MAAA,iBAAAg3E,EAAAljD,GACAn6B,KAAAklC,GAAAvH,EAAA0/C,GACAr9E,KAAAqqC,GAAA,EACArqC,KAAAg3D,GAAA78B,GACC,WACD,IAAAjb,EAAAlf,KAAAklC,GACA/K,EAAAn6B,KAAAg3D,GACAvpC,EAAAztB,KAAAqqC,KACA,OAAAnrB,GAAAuO,GAAAvO,EAAAze,QACAT,KAAAklC,QAAA1zC,EACA+7B,EAAA,IAEAA,EAAA,UAAA4M,EAAA1M,EACA,UAAA0M,EAAAjb,EAAAuO,IACAA,EAAAvO,EAAAuO,MACC,UACD6Q,EAAAigD,UAAAjgD,EAAAj4B,MACAi4E,EAAA,QACAA,EAAA,UACAA,EAAA,YAIA,SAAA9yF,EAAAC,EAAAI,GAEA,aAGAL,EAAAC,QAAA,SAAAkiC,EAAAtgC,GACA,OACAA,QACAsgC,YAMA,SAAAniC,EAAAC,EAAAI,GAEA,aAGA,IAqBA2yF,EAAAC,EAAAC,EAAAC,EArBAtgD,EAAAxyC,EAAA,IACAR,EAAAQ,EAAA,GACAoxB,EAAApxB,EAAA,IACAsyC,EAAAtyC,EAAA,IACAsxB,EAAAtxB,EAAA,GACA6yB,EAAA7yB,EAAA,GACAwzB,EAAAxzB,EAAA,IACA+yF,EAAA/yF,EAAA,IACAgzF,EAAAhzF,EAAA,IACAizF,EAAAjzF,EAAA,IACA6pF,EAAA7pF,EAAA,IAAAmW,IACA+8E,EAAAlzF,EAAA,IAAAA,GACAmzF,EAAAnzF,EAAA,IACAozF,EAAApzF,EAAA,IACAqzF,EAAArzF,EAAA,IACAszF,EAAA,UACAxgE,EAAAtzB,EAAAszB,UACAxzB,EAAAE,EAAAF,QACAi0F,EAAA/zF,EAAA8zF,GACAE,EAAA,WAAAlhD,EAAAhzC,GACAsmB,EAAA,aAEAuyB,EAAAy6C,EAAAO,EAAAv/D,EACA6/D,IAAA,WACA,IACA,IAAA51E,EAAA01E,EAAAx1E,QAAA,GACA21E,GAAA71E,EAAA7X,gBAA+ChG,EAAA,EAAAA,CAAA,qBAAA6zB,GAC/CA,EAAAjO,MAEA,OAAA4tE,GAAA,mBAAAG,wBAAA91E,EAAAkD,KAAA6E,aAAA8tE,EACG,MAAAtgF,KAPH,GASAwgF,EAAA,SAAAlsE,GACA,IAAA3G,EACA,SAAA8R,EAAAnL,IAAA,mBAAA3G,EAAA2G,EAAA3G,WAEA8yE,EAAA,SAAAh2E,EAAAi2E,GACA,IAAAj2E,EAAAugC,GAAA,CACAvgC,EAAAugC,IAAA,EACA,IAAA21C,EAAAl2E,EAAAm2E,GACAd,EAAA,WACA,IAAA1xF,EAAAqc,EAAAo2E,GACAC,EAAA,GAAAr2E,EAAA0gC,GACAr+C,EAAA,EACAu3C,EAAA,SAAA08C,GACA,IAIAt6E,EAAAkH,EAAAqzE,EAJA/yE,EAAA6yE,EAAAC,EAAAD,GAAAC,EAAAE,KACAt2E,EAAAo2E,EAAAp2E,QACAC,EAAAm2E,EAAAn2E,OACAwiE,EAAA2T,EAAA3T,OAEA,IACAn/D,GACA6yE,IACA,GAAAr2E,EAAAy2E,IAAAC,EAAA12E,GACAA,EAAAy2E,GAAA,IAEA,IAAAjzE,EAAAxH,EAAArY,GACAg/E,KAAAgU,QACA36E,EAAAwH,EAAA7f,GACAg/E,IACAA,EAAAiU,OACAL,GAAA,IAGAv6E,IAAAs6E,EAAAt2E,QACAG,EAAA8U,EAAA,yBACW/R,EAAA6yE,EAAA/5E,IACXkH,EAAA3gB,KAAAyZ,EAAAkE,EAAAC,GACWD,EAAAlE,IACFmE,EAAAxc,GACF,MAAA4R,GACPotE,IAAA4T,GAAA5T,EAAAiU,OACAz2E,EAAA5K,KAGA,MAAA2gF,EAAAn/E,OAAA1U,EACAu3C,EAAAs8C,EAAA7zF,MACK2d,EAAAm2E,MACLn2E,EAAAugC,IAAA,EACA01C,IAAAj2E,EAAAy2E,IAAAI,EAAA72E,OAGA62E,EAAA,SAAA72E,GACAgsE,EAAAzpF,KAAAZ,EAAA,WACA,IAEAqa,EAAAwH,EAAAjP,EAFA5Q,EAAAqc,EAAAo2E,GACAU,EAAAC,EAAA/2E,GAkBA,GAhBA82E,IACA96E,EAAAu5E,EAAA,WACAI,EACAl0F,EAAAu1F,KAAA,qBAAArzF,EAAAqc,IACSwD,EAAA7hB,EAAAs1F,sBACTzzE,GACAxD,UACAsB,OAAA3d,KAES4Q,EAAA5S,EAAA4S,YAAAuO,OACTvO,EAAAuO,MAAA,8BAAAnf,KAGAqc,EAAAy2E,GAAAd,GAAAoB,EAAA/2E,GAAA,KAEAA,EAAAk3E,QAAApvF,EACAgvF,GAAA96E,EAAAzG,EAAA,MAAAyG,EAAAlB,KAGAi8E,EAAA,SAAA/2E,GACA,WAAAA,EAAAy2E,IAAA,KAAAz2E,EAAAk3E,IAAAl3E,EAAAm2E,IAAAp/E,QAEA2/E,EAAA,SAAA12E,GACAgsE,EAAAzpF,KAAAZ,EAAA,WACA,IAAA6hB,EACAmyE,EACAl0F,EAAAu1F,KAAA,mBAAAh3E,IACKwD,EAAA7hB,EAAAw1F,qBACL3zE,GACAxD,UACAsB,OAAAtB,EAAAo2E,QAKAgB,EAAA,SAAAzzF,GACA,IAAAqc,EAAA1J,KACA0J,EAAAwgC,KACAxgC,EAAAwgC,IAAA,EACAxgC,IAAAq3E,IAAAr3E,EACAA,EAAAo2E,GAAAzyF,EACAqc,EAAA0gC,GAAA,EACA1gC,EAAAk3E,KAAAl3E,EAAAk3E,GAAAl3E,EAAAm2E,GAAA37E,SACAw7E,EAAAh2E,GAAA,KAEAs3E,EAAA,SAAAA,EAAA3zF,GACA,IACAuf,EADAlD,EAAA1J,KAEA,IAAA0J,EAAAwgC,GAAA,CACAxgC,EAAAwgC,IAAA,EACAxgC,IAAAq3E,IAAAr3E,EACA,IACA,GAAAA,IAAArc,EAAA,MAAAsxB,EAAA,qCACA/R,EAAA6yE,EAAApyF,IACA0xF,EAAA,WACA,IAAAkC,GACAF,GAAAr3E,EACAwgC,IAAA,GAEA,IACAt9B,EAAA3gB,KAAAoB,EAAA4vB,EAAA+jE,EAAAC,EAAA,GAAAhkE,EAAA6jE,EAAAG,EAAA,IACS,MAAAhiF,GACT6hF,EAAA70F,KAAAg1F,EAAAhiF,OAIAyK,EAAAo2E,GAAAzyF,EACAqc,EAAA0gC,GAAA,EACAs1C,EAAAh2E,GAAA,IAEG,MAAAzK,GACH6hF,EAAA70F,MACA80F,GAAAr3E,EACAwgC,IAAA,GACKjrC,MAGLqgF,IACAF,EAAA,SAAA8B,GACAtC,EAAA5+E,KAAAo/E,EAAAD,EAAA,MACA9/D,EAAA6hE,GACA1C,EAAAvyF,KAAA+T,MACA,IACAkhF,EAAAjkE,EAAA+jE,EAAAhhF,KAAA,GAAAid,EAAA6jE,EAAA9gF,KAAA,IACK,MAAAupC,GACLu3C,EAAA70F,KAAA+T,KAAAupC,KAGAi1C,EAAA,SAAA0C,GACAlhF,KAAA6/E,MACA7/E,KAAA4gF,QAAApvF,EACAwO,KAAAoqC,GAAA,EACApqC,KAAAkqC,IAAA,EACAlqC,KAAA8/E,QAAAtuF,EACAwO,KAAAmgF,GAAA,EACAngF,KAAAiqC,IAAA,GAEAu0C,EAAAvxF,UAAApB,EAAA,GAAAA,CAAAuzF,EAAAnyF,WACA2f,KAAA,SAAAu0E,EAAAC,GACA,IAAApB,EAAAh8C,EAAA86C,EAAA9+E,KAAAo/E,IAOA,OANAY,EAAAD,GAAA,mBAAAoB,KACAnB,EAAAE,KAAA,mBAAAkB,KACApB,EAAA3T,OAAAgT,EAAAl0F,EAAAkhF,YAAA76E,EACAwO,KAAA6/E,GAAAz+E,KAAA4+E,GACAhgF,KAAA4gF,IAAA5gF,KAAA4gF,GAAAx/E,KAAA4+E,GACAhgF,KAAAoqC,IAAAs1C,EAAA1/E,MAAA,GACAggF,EAAAt2E,SAEA4B,MAAA,SAAA81E,GACA,OAAAphF,KAAA4M,UAAApb,EAAA4vF,MAGA1C,EAAA,WACA,IAAAh1E,EAAA,IAAA80E,EACAx+E,KAAA0J,UACA1J,KAAA4J,QAAAqT,EAAA+jE,EAAAt3E,EAAA,GACA1J,KAAA6J,OAAAoT,EAAA6jE,EAAAp3E,EAAA,IAEAs1E,EAAAv/D,EAAAukB,EAAA,SAAAla,GACA,OAAAA,IAAAs1D,GAAAt1D,IAAA60D,EAAA,IAAAD,EAAA50D,GAAA20D,EAAA30D,KAGA3M,IAAAO,EAAAP,EAAAiB,EAAAjB,EAAAK,GAAA8hE,GAA0D31E,QAAAy1E,IAC1DvzF,EAAA,GAAAA,CAAAuzF,EAAAD,GACAtzF,EAAA,IAAAA,CAAAszF,GACAR,EAAA9yF,EAAA,GAAAszF,GACAhiE,IAAAS,EAAAT,EAAAK,GAAA8hE,EAAAH,GACAt1E,OAAA,SAAAvG,GACA,IAAAmG,EAAAu6B,EAAAhkC,MACA61B,EAAApsB,EAAAI,OAEA,OADAgsB,EAAAvyB,GACAmG,EAAAC,WAGAyT,IAAAS,EAAAT,EAAAK,GAAA6gB,IAAAihD,GAAAH,GACAv1E,QAAA,SAAA3H,GACA,OAAAi9E,EAAA7gD,GAAAr+B,OAAA2+E,EAAAS,EAAAp/E,KAAAiC,MAGAkb,IAAAS,EAAAT,EAAAK,IAAA8hE,GAAAzzF,EAAA,GAAAA,CAAA,SAAAy4C,GACA86C,EAAA9vE,IAAAg1B,GAAA,SAAA7yB,MACC0tE,GACD7vE,IAAA,SAAA8d,GACA,IAAAtD,EAAA9pB,KACAyJ,EAAAu6B,EAAAla,GACAlgB,EAAAH,EAAAG,QACAC,EAAAJ,EAAAI,OACAnE,EAAAu5E,EAAA,WACA,IAAA97E,KACAsqB,EAAA,EACA4zD,EAAA,EACAxC,EAAAzxD,GAAA,WAAA1jB,GACA,IAAA43E,EAAA7zD,IACA8zD,GAAA,EACAp+E,EAAA/B,UAAA5P,GACA6vF,IACAv3D,EAAAlgB,QAAAF,GAAAkD,KAAA,SAAAvf,GACAk0F,IACAA,GAAA,EACAp+E,EAAAm+E,GAAAj0F,IACAg0F,GAAAz3E,EAAAzG,KACS0G,OAETw3E,GAAAz3E,EAAAzG,KAGA,OADAuC,EAAAzG,GAAA4K,EAAAnE,EAAAlB,GACAiF,EAAAC,SAEA83E,KAAA,SAAAp0D,GACA,IAAAtD,EAAA9pB,KACAyJ,EAAAu6B,EAAAla,GACAjgB,EAAAJ,EAAAI,OACAnE,EAAAu5E,EAAA,WACAJ,EAAAzxD,GAAA,WAAA1jB,GACAogB,EAAAlgB,QAAAF,GAAAkD,KAAAnD,EAAAG,QAAAC,OAIA,OADAnE,EAAAzG,GAAA4K,EAAAnE,EAAAlB,GACAiF,EAAAC,YAMA,SAAAle,EAAAC,EAAAI,GAEA,aAGA,IAAA8zB,EAAA9zB,EAAA,GACAL,EAAAC,QAAA,SAAAkG,EAAAkZ,EAAAxd,EAAAggC,GACA,IACA,OAAAA,EAAAxiB,EAAA8U,EAAAtyB,GAAA,GAAAA,EAAA,IAAAwd,EAAAxd,GACG,MAAA4R,GACH,IAAAwiF,EAAA9vF,EAAA,UAEA,WADAH,IAAAiwF,GAAA9hE,EAAA8hE,EAAAx1F,KAAA0F,IACAsN,KAMA,SAAAzT,EAAAC,EAAAI,GAEA,aAGA,IAAAyyC,EAAAzyC,EAAA,IACAyhC,EAAAzhC,EAAA,EAAAA,CAAA,YACAqyC,EAAA73B,MAAApZ,UACAzB,EAAAC,QAAA,SAAA8nB,GACA,YAAA/hB,IAAA+hB,IAAA+qB,EAAAj4B,QAAAkN,GAAA2qB,EAAA5Q,KAAA/Z,KAKA,SAAA/nB,EAAAC,EAAAI,GAEA,aAGA,IAAAsyC,EAAAtyC,EAAA,IACAyhC,EAAAzhC,EAAA,EAAAA,CAAA,YACAyyC,EAAAzyC,EAAA,IACAL,EAAAC,QAAAI,EAAA,GAAA61F,kBAAA,SAAAnuE,GACA,QAAA/hB,GAAA+hB,EAAA,OAAAA,EAAA+Z,IAAA/Z,EAAA,eAAA+qB,EAAAH,EAAA5qB,MAKA,SAAA/nB,EAAAC,EAAAI,GAEA,aAGAL,EAAAC,QAAA,SAAAof,EAAAlC,EAAA2W,GACA,IAAAqiE,OAAAnwF,IAAA8tB,EACA,OAAA3W,EAAAlI,QACA,OACA,OAAAkhF,EAAA92E,MAAA5e,KAAAqzB,GACA,OACA,OAAAqiE,EAAA92E,EAAAlC,EAAA,IAAAkC,EAAA5e,KAAAqzB,EAAA3W,EAAA,IACA,OACA,OAAAg5E,EAAA92E,EAAAlC,EAAA,GAAAA,EAAA,IAAAkC,EAAA5e,KAAAqzB,EAAA3W,EAAA,GAAAA,EAAA,IACA,OACA,OAAAg5E,EAAA92E,EAAAlC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAkC,EAAA5e,KAAAqzB,EAAA3W,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,OACA,OAAAg5E,EAAA92E,EAAAlC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAkC,EAAA5e,KAAAqzB,EAAA3W,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,OAAAkC,EAAAhK,MAAAye,EAAA3W,KAKA,SAAAnd,EAAAC,EAAAI,GAEA,aAGA,IAAAR,EAAAQ,EAAA,GACA+1F,EAAA/1F,EAAA,IAAAmW,IACA6/E,EAAAx2F,EAAAy2F,kBAAAz2F,EAAA02F,uBACA52F,EAAAE,EAAAF,QACAwe,EAAAte,EAAAse,QACA01E,EAAA,WAAAxzF,EAAA,GAAAA,CAAAV,GACAK,EAAAC,QAAA,WACA,IAAA0/D,EAAAnb,EAAA0vC,EACAxjD,EAAA,WACA,IAAA0P,EAAA/gC,EACAw0E,IAAAzzC,EAAAzgD,EAAAkhF,SAAAzgC,EAAA00C,OACA,MAAAn1B,EAAA,CACAtgD,EAAAsgD,EAAAtgD,GACAsgD,IAAAz9B,KACA,IACA7iB,IACO,MAAA5L,GAEP,MADAksD,EAAAu0B,IAA2B1vC,OAAAx+C,EAC3ByN,GAGA+wC,OAAAx+C,EACAo6C,KAAAy0C,SAEA,GAAAhB,EACAK,EAAA,WACAv0F,EAAAq4C,SAAAtH,SAEG,IAAA2lD,GAAAx2F,EAAA22F,WAAA32F,EAAA22F,UAAAC,WAOA,GAAAt4E,KAAAC,QAAA,CACH,IAAAF,EAAAC,EAAAC,UACA81E,EAAA,WACAh2E,EAAAkD,KAAAsvB,SAGAwjD,EAAA,WACAkC,EAAA31F,KAAAZ,EAAA6wC,QAdG,CACH,IAAAgmD,GAAA,EACA5xC,EAAArpC,SAAAk7E,eAAA,IACA,IAAAN,EAAA3lD,GAAAkmD,QAAA9xC,GAAuC+xC,eAAA,IACvC3C,EAAA,WACApvC,EAAAvuC,KAAAmgF,MAYA,gBAAAr3E,GACA,IAAA6qE,GACA7qE,KACA6iB,UAAAl8B,GAEAw+C,MAAAtiB,KAAAgoD,GACAvqB,IACAA,EAAAuqB,EACAgK,KAEA1vC,EAAA0lC,KAMA,SAAAlqF,EAAAC,EAAAI,GAEA,aAGA,IAAAR,EAAAQ,EAAA,GACA0zB,EAAA1zB,EAAA,IACAy2F,EAAAz2F,EAAA,IACAy2C,EAAAz2C,EAAA,EAAAA,CAAA,WACAL,EAAAC,QAAA,SAAAirC,GACA,IAAA5M,EAAAz+B,EAAAqrC,GACA4rD,GAAAx4D,MAAAwY,IAAA/iB,EAAAE,EAAAqK,EAAAwY,GACA51C,cAAA,EACAE,IAAA,WACA,OAAAoT,UAOA,SAAAxU,EAAAC,EAAAI,GAEA,aAGA,IAAAsxB,EAAAtxB,EAAA,GACAixB,EAAAjxB,EAAA,GACAR,EAAAQ,EAAA,GACAizF,EAAAjzF,EAAA,IACAqzF,EAAArzF,EAAA,IACAsxB,IAAAW,EAAAX,EAAAkB,EAAA,WACAkkE,QAAA,SAAAC,GACA,IAAA14D,EAAAg1D,EAAA9+E,KAAA8c,EAAAnT,SAAAte,EAAAse,SACAyV,EAAA,mBAAAojE,EACA,OAAAxiF,KAAA4M,KAAAwS,EAAA,SAAAnd,GACA,OAAAi9E,EAAAp1D,EAAA04D,KAAA51E,KAAA,WACA,OAAA3K,KAEKugF,EAAApjE,EAAA,SAAAngB,GACL,OAAAigF,EAAAp1D,EAAA04D,KAAA51E,KAAA,WACA,MAAA3N,KAEKujF,OAML,SAAAh3F,EAAAC,EAAAI,GAEA,aAGA,IAAAsxB,EAAAtxB,EAAA,GACAm4C,EAAAn4C,EAAA,IACAozF,EAAApzF,EAAA,IACAsxB,IAAAS,EAAA,WACA6kE,IAAA,SAAAx9C,GACA,IAAAhB,EAAAD,EAAAvkB,EAAAzf,MACA0F,EAAAu5E,EAAAh6C,GAEA,OADAv/B,EAAAzG,EAAAglC,EAAAp6B,OAAAo6B,EAAAr6B,SAAAlE,EAAAlB,GACAy/B,EAAAv6B,YAMA,SAAAle,EAAAC,EAAAI,GAEA,aAGAA,EAAA,IACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAL,EAAAC,QAAAI,EAAA,GAAAmuF,SAIA,SAAAxuF,EAAAC,EAAAI,GAEA,aAGA,IAaA62F,EAbAC,EAAA92F,EAAA,GAAAA,CAAA,GACAmxB,EAAAnxB,EAAA,GACA2qC,EAAA3qC,EAAA,IACAupE,EAAAvpE,EAAA,KACA+2F,EAAA/2F,EAAA,KACA6yB,EAAA7yB,EAAA,GACAg3F,EAAAh3F,EAAA,IACAi3F,EAAAj3F,EAAA,IACAk3F,EAAA,UACAzsD,EAAAE,EAAAF,QACAN,EAAAxpC,OAAAwpC,aACAgtD,EAAAJ,EAAAK,QACA5vB,KAEA4tB,EAAA,SAAAr0F,GACA,kBACA,OAAAA,EAAAoT,KAAAmK,UAAA1J,OAAA,EAAA0J,UAAA,QAAA3Y,KAGA4tC,GACAxyC,IAAA,SAAAgW,GACA,GAAA8b,EAAA9b,GAAA,CACA,IAAAb,EAAAu0B,EAAA1zB,GACA,WAAAb,EAAAihF,EAAAF,EAAA9iF,KAAA+iF,IAAAn2F,IAAAgW,GACAb,IAAA/B,KAAAqqC,SAAA74C,IAGAwQ,IAAA,SAAAY,EAAAvV,GACA,OAAAu1F,EAAAl2D,IAAAo2D,EAAA9iF,KAAA+iF,GAAAngF,EAAAvV,KAGA61F,EAAA13F,EAAAC,QAAAI,EAAA,IAAAA,CAAAk3F,EAAA9B,EAAA7hD,EAAAwjD,GAAA,MACAC,EAAA,WACA,eAAAK,GAAAlhF,KAAAxV,OAAA22F,QAAA32F,QAAA6mE,GAAA,GAAAzmE,IAAAymE,OAEAqvB,EAAAE,EAAAQ,eAAAnC,EAAA8B,GACA3tB,EAAAstB,EAAAz1F,UAAAmyC,GACA5I,EAAAC,MAAA,EACAksD,GAAA,qCAAA//E,GACA,IAAA28B,EAAA2jD,EAAAj2F,UACAu+D,EAAAjsB,EAAA38B,GACAoa,EAAAuiB,EAAA38B,EAAA,SAAA+B,EAAAnB,GACA,GAAAkb,EAAA/Z,KAAAqxB,EAAArxB,GAAA,CACA3E,KAAAqjF,KAAArjF,KAAAqjF,GAAA,IAAAX,GACA,IAAAh9E,EAAA1F,KAAAqjF,GAAAzgF,GAAA+B,EAAAnB,GACA,aAAAZ,EAAA5C,KAAA0F,EAEA,OAAA8lD,EAAAv/D,KAAA+T,KAAA2E,EAAAnB,SAOA,SAAAhY,EAAAC,EAAAI,GAEA,aAGA,IAAAizF,EAAAjzF,EAAA,KACAL,EAAAC,QAAA,SAAA63F,EAAA7iF,GACA,WAAAq+E,EAAAwE,GAAA,CAAA7iF,KAKA,SAAAjV,EAAAC,EAAAI,GAEA,aAGA,IAAA6yB,EAAA7yB,EAAA,GACAolB,EAAAplB,EAAA,KACAy2C,EAAAz2C,EAAA,EAAAA,CAAA,WACAL,EAAAC,QAAA,SAAA63F,GACA,IAAAx5D,EASA,OARA7Y,EAAAqyE,KACAx5D,EAAAw5D,EAAAzxF,YACA,mBAAAi4B,OAAAzjB,QAAA4K,EAAA6Y,EAAA78B,aAAA68B,OAAAt4B,GACAktB,EAAAoL,KACAA,IAAAwY,GACA,OAAAxY,WAAAt4B,UAGAA,IAAAs4B,EAAAzjB,MAAAyjB,IAKA,SAAAt+B,EAAAC,EAAAI,GAEA,aAGA,IAAAmpC,EAAAnpC,EAAA,IACAL,EAAAC,QAAA4a,MAAA4K,SAAA,SAAAsnB,GACA,eAAAvD,EAAAuD,KAKA,SAAA/sC,EAAAC,EAAAI,GAEA,aAGA,IAAAwlB,EAAAxlB,EAAA,IACA03F,EAAA13F,EAAA,KACA23F,EAAA33F,EAAA,IACA04C,EAAA14C,EAAA,IACAk0B,EAAAl0B,EAAA,IACA43F,EAAAj3F,OAAA4oE,OACA5pE,EAAAC,SAAAg4F,GAAA53F,EAAA,GAAAA,CAAA,WACA,IAAAw6B,KACArI,KACAJ,EAAAlsB,SACAigE,EAAA,uBAKA,OAJAtrC,EAAAzI,GAAA,EACA+zC,EAAA3yC,MAAA,IAAAxN,QAAA,SAAAoH,GACAoF,EAAApF,OAEmB,GAAnB6qE,KAAmBp9D,GAAAzI,IAAApxB,OAAA8kB,KAAAmyE,KAAsCzlE,IAAA3c,KAAA,KAAAswD,IACxD,SAAA1zC,EAAA3C,GACD,IAAAga,EAAAiP,EAAAtmB,GACAylE,EAAAv5E,UAAA1J,OACAgtB,EAAA,EACAk2D,EAAAJ,EAAA9jE,EACAmkE,EAAAJ,EAAA/jE,EACA,MAAAikE,EAAAj2D,EAAA,CACA,IAIA7qB,EAJAgb,EAAAmC,EAAA5V,UAAAsjB,MACAnc,EAAAqyE,EAAAtyE,EAAAuM,GAAA2O,OAAAo3D,EAAA/lE,IAAAvM,EAAAuM,GACAnd,EAAA6Q,EAAA7Q,OACAuZ,EAAA,EAEA,MAAAvZ,EAAAuZ,EACA4pE,EAAA33F,KAAA2xB,EAAAhb,EAAA0O,EAAA0I,QAAAsb,EAAA1yB,GAAAgb,EAAAhb,IAGA,OAAA0yB,GACCmuD,GAID,SAAAj4F,EAAAC,EAAAI,GAEA,aAGAJ,EAAAg0B,EAAAjzB,OAAAq3F,uBAIA,SAAAr4F,EAAAC,EAAAI,GAEA,aAGA,IAAAi4F,EAAAj4F,EAAA,IACAyqC,EAAAzqC,EAAA,IAAAyqC,QACA3W,EAAA9zB,EAAA,GACA6yB,EAAA7yB,EAAA,GACA+yF,EAAA/yF,EAAA,IACAgzF,EAAAhzF,EAAA,IACAk4F,EAAAl4F,EAAA,IACAm4F,EAAAn4F,EAAA,IACAi3F,EAAAj3F,EAAA,IACAo4F,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA33D,EAAA,EACA42D,EAAA,SAAA1jE,GACA,OAAAA,EAAA6kE,KAAA7kE,EAAA6kE,GAAA,IAAAC,IAEAA,EAAA,WACApkF,KAAA2E,MAEA0/E,EAAA,SAAAnxE,EAAAtQ,GACA,OAAAqhF,EAAA/wE,EAAAvO,EAAA,SAAA4O,GACA,OAAAA,EAAA,KAAA3Q,KAGAwhF,EAAAn3F,WACAL,IAAA,SAAAgW,GACA,IAAAkwC,EAAAuxC,EAAArkF,KAAA4C,GACA,GAAAkwC,EAAA,OAAAA,EAAA,IAEAvhC,IAAA,SAAA3O,GACA,QAAAyhF,EAAArkF,KAAA4C,IAEAZ,IAAA,SAAAY,EAAAvV,GACA,IAAAylD,EAAAuxC,EAAArkF,KAAA4C,GACAkwC,IAAA,GAAAzlD,EAAgC2S,KAAA2E,EAAAvD,MAAAwB,EAAAvV,KAEhCi3F,OAAA,SAAA1hF,GACA,IAAA6qB,EAAAy2D,EAAAlkF,KAAA2E,EAAA,SAAA4O,GACA,OAAAA,EAAA,KAAA3Q,IAGA,OADA6qB,GAAAztB,KAAA2E,EAAAu1B,OAAAzM,EAAA,MACAA,IAGAjiC,EAAAC,SACA23F,eAAA,SAAAnC,EAAAjiD,EAAA2F,EAAA4/C,GACA,IAAAz6D,EAAAm3D,EAAA,SAAA3hE,EAAA8N,GACAwxD,EAAAt/D,EAAAwK,EAAAkV,EAAA,MACA1f,EAAA4lB,GAAAlG,EACA1f,EAAA+qB,GAAAje,IACA9M,EAAA6kE,QAAA3yF,OACAA,GAAA47B,GAAAyxD,EAAAzxD,EAAAuX,EAAArlB,EAAAilE,GAAAjlE,KAgBA,OAdAwkE,EAAAh6D,EAAA78B,WACAq3F,OAAA,SAAA1hF,GACA,IAAA8b,EAAA9b,GAAA,SACA,IAAAb,EAAAu0B,EAAA1zB,GACA,WAAAb,EAAAihF,EAAAF,EAAA9iF,KAAAg/B,IAAA,UAAAp8B,GACAb,GAAAiiF,EAAAjiF,EAAA/B,KAAAqqC,YAAAtoC,EAAA/B,KAAAqqC,KAEA94B,IAAA,SAAA3O,GACA,IAAA8b,EAAA9b,GAAA,SACA,IAAAb,EAAAu0B,EAAA1zB,GACA,WAAAb,EAAAihF,EAAAF,EAAA9iF,KAAAg/B,IAAAztB,IAAA3O,GACAb,GAAAiiF,EAAAjiF,EAAA/B,KAAAqqC,OAGAvgB,GAEA4C,IAAA,SAAApN,EAAA1c,EAAAvV,GACA,IAAA0U,EAAAu0B,EAAA3W,EAAA/c,IAAA,GAEA,OADA,IAAAb,EAAAihF,EAAA1jE,GAAAtd,IAAAY,EAAAvV,GAAiE0U,EAAAud,EAAA+qB,IAAAh9C,EACjEiyB,GAEA2jE,QAAAD,IAKA,SAAAx3F,EAAAC,EAAAI,GAEA,aAGA,IAAAR,EAAAQ,EAAA,GACAsxB,EAAAtxB,EAAA,GACAmxB,EAAAnxB,EAAA,GACAi4F,EAAAj4F,EAAA,IACA2qC,EAAA3qC,EAAA,IACAgzF,EAAAhzF,EAAA,IACA+yF,EAAA/yF,EAAA,IACA6yB,EAAA7yB,EAAA,GACAg3F,EAAAh3F,EAAA,IACA24F,EAAA34F,EAAA,IACA2yC,EAAA3yC,EAAA,IACA44F,EAAA54F,EAAA,KACAL,EAAAC,QAAA,SAAAuzC,EAAAiiD,EAAA7hD,EAAAslD,EAAA//C,EAAAggD,GACA,IAAA5lD,EAAA1zC,EAAA2zC,GACAlV,EAAAiV,EACAwlD,EAAA5/C,EAAA,YACApF,EAAAzV,KAAA78B,UACAiyB,KACA0lE,EAAA,SAAAluD,GACA,IAAA7rB,EAAA00B,EAAA7I,GACA1Z,EAAAuiB,EAAA7I,EAAA,UAAAA,EAAA,SAAA/xB,GACA,QAAAggF,IAAAjmE,EAAA/Z,KAAAkG,EAAA5e,KAAA+T,KAAA,IAAA2E,EAAA,EAAAA,IACK,OAAA+xB,EAAA,SAAA/xB,GACL,QAAAggF,IAAAjmE,EAAA/Z,KAAAkG,EAAA5e,KAAA+T,KAAA,IAAA2E,EAAA,EAAAA,IACK,OAAA+xB,EAAA,SAAA/xB,GACL,OAAAggF,IAAAjmE,EAAA/Z,QAAAnT,EAAAqZ,EAAA5e,KAAA+T,KAAA,IAAA2E,EAAA,EAAAA,IACK,OAAA+xB,EAAA,SAAA/xB,GAEL,OADAkG,EAAA5e,KAAA+T,KAAA,IAAA2E,EAAA,EAAAA,GACA3E,MACK,SAAA2E,EAAAnB,GAEL,OADAqH,EAAA5e,KAAA+T,KAAA,IAAA2E,EAAA,EAAAA,EAAAnB,GACAxD,QAGA,sBAAA8pB,IAAA66D,GAAAplD,EAAA/tB,UAAAqxE,EAAA,YACA,IAAA/4D,GAAAuD,UAAAK,UAKG,CACH,IAAA0lC,EAAA,IAAAtpC,EACA+6D,EAAAzxB,EAAAmxB,GAAAI,MAAqD,MAAAvxB,EACrD0xB,EAAAjC,EAAA,WACAzvB,EAAA7hD,IAAA,KAEAwzE,EAAAP,EAAA,SAAAlgD,GACA,IAAAxa,EAAAwa,KAEA0gD,GAAAL,GAAA9B,EAAA,WACA,IAAAoC,EAAA,IAAAn7D,EACA2D,EAAA,EACA,MAAAA,IACAw3D,EAAAV,GAAA92D,KACO,OAAAw3D,EAAA1zE,KAAA,KAEPwzE,IACAj7D,EAAAm3D,EAAA,SAAAhjE,EAAAmP,GACAwxD,EAAA3gE,EAAA6L,EAAAkV,GACA,IAAA1f,EAAAmlE,EAAA,IAAA1lD,EAAA9gB,EAAA6L,GAEA,YADAt4B,GAAA47B,GAAAyxD,EAAAzxD,EAAAuX,EAAArlB,EAAAilE,GAAAjlE,GACAA,IAEAwK,EAAA78B,UAAAsyC,EACAA,EAAA1tC,YAAAi4B,IAEAg7D,GAAAE,KACAJ,EAAA,UACAA,EAAA,OACAjgD,GAAAigD,EAAA,SAEAI,GAAAH,IAAAD,EAAAL,GACAI,GAAAplD,EAAA9sB,cAAA8sB,EAAA9sB,WAnCAqX,EAAA46D,EAAAtB,eAAAnC,EAAAjiD,EAAA2F,EAAA4/C,GACAT,EAAAh6D,EAAA78B,UAAAmyC,GACA5I,EAAAC,MAAA,EAuCA,OAJA+H,EAAA1U,EAAAkV,GACA9f,EAAA8f,GAAAlV,EACA3M,IAAAO,EAAAP,EAAAiB,EAAAjB,EAAAK,GAAAsM,GAAAiV,GAAA7f,GACAylE,GAAAD,EAAAQ,UAAAp7D,EAAAkV,EAAA2F,GACA7a,IAKA,SAAAt+B,EAAAC,EAAAI,GAEA,aAGA,IAAA6yB,EAAA7yB,EAAA,GACAonE,EAAApnE,EAAA,KAAAmW,IACAxW,EAAAC,QAAA,SAAA6zB,EAAArB,EAAA6L,GACA,IACAhM,EADAF,EAAAK,EAAApsB,YAKA,OAHA+rB,IAAAkM,GAAA,mBAAAlM,IAAAE,EAAAF,EAAA3wB,aAAA68B,EAAA78B,WAAAyxB,EAAAZ,IAAAm1C,GACAA,EAAA3zC,EAAAxB,GAEAwB,IAKA,SAAA9zB,EAAAC,EAAAI,GAEA,aAGA,IAAA6yB,EAAA7yB,EAAA,GACA8zB,EAAA9zB,EAAA,GACAitB,EAAA,SAAAoG,EAAAqgB,GAEA,GADA5f,EAAAT,IACAR,EAAA6gB,IAAA,OAAAA,EAAA,MAAA5gB,UAAA4gB,EAAA,8BAEA/zC,EAAAC,SACAuW,IAAAxV,OAAAymE,iBAAA,gBAAkD,SAAA70B,EAAA+mD,EAAAnjF,GAClD,IACAA,EAAAnW,EAAA,GAAAA,CAAA4W,SAAAxW,KAAAJ,EAAA,KAAA4zB,EAAAjzB,OAAAS,UAAA,aAAA+U,IAAA,GACAA,EAAAo8B,MACA+mD,IAAA/mD,aAAA/3B,OACK,MAAApH,GACLkmF,GAAA,EAEA,gBAAAjmE,EAAAqgB,GAGA,OAFAzmB,EAAAoG,EAAAqgB,GACA4lD,EAAAjmE,EAAAg0C,UAAA3zB,EAAqCv9B,EAAAkd,EAAAqgB,GACrCrgB,GAXkD,KAa5C,QAAA1tB,GACNsnB,UAKA,SAAAttB,EAAAC,EAAAI,GAEA,aAGA,IAAA23F,EAAA33F,EAAA,IACA2zB,EAAA3zB,EAAA,IACA8xC,EAAA9xC,EAAA,IACAg0B,EAAAh0B,EAAA,IACA0lB,EAAA1lB,EAAA,IACA+zB,EAAA/zB,EAAA,IACAu5F,EAAA54F,OAAA64F,yBACA55F,EAAAg0B,EAAA5zB,EAAA,IAAAu5F,EAAA,SAAAlmE,EAAApB,GAGA,GAFAoB,EAAAye,EAAAze,GACApB,EAAA+B,EAAA/B,GAAA,GACA8B,EAAA,IACA,OAAAwlE,EAAAlmE,EAAApB,GACG,MAAA7e,IACH,GAAAsS,EAAA2N,EAAApB,GAAA,OAAA0B,GAAAgkE,EAAA/jE,EAAAxzB,KAAAizB,EAAApB,GAAAoB,EAAApB,MAKA,SAAAtyB,EAAAC,EAAAI,GAEA,aAGAA,EAAA,IAAAA,CAAA,YAIA,SAAAL,EAAAC,EAAAI,GAEA,aAGA,IAAAsxB,EAAAtxB,EAAA,GACAL,EAAAC,QAAA,SAAA65F,GACAnoE,IAAAS,EAAA0nE,GACAC,GAAA,WACA,IAAA9kF,EAAA0J,UAAA1J,OACA4lB,EAAA,IAAAhgB,MAAA5F,GACA,MAAAA,IACA4lB,EAAA5lB,GAAA0J,UAAA1J,GACO,WAAAT,KAAAqmB,QAOP,SAAA76B,EAAAC,EAAAI,GAEA,aAGAA,EAAA,IAAAA,CAAA,YAIA,SAAAL,EAAAC,EAAAI,GAEA,aAGA,IAAAsxB,EAAAtxB,EAAA,GACAwzB,EAAAxzB,EAAA,IACAoxB,EAAApxB,EAAA,IACAgzF,EAAAhzF,EAAA,IACAL,EAAAC,QAAA,SAAA65F,GACAnoE,IAAAS,EAAA0nE,GACAlhD,KAAA,SAAA9oB,GACA,IACAkqE,EAAAn/D,EAAAx5B,EAAA44F,EADAC,EAAAv7E,UAAA,GAKA,OAHAkV,EAAArf,MACAwlF,OAAAh0F,IAAAk0F,EACAF,GAAAnmE,EAAAqmE,QACAl0F,GAAA8pB,EAAA,IAAAtb,MACAqmB,KACAm/D,GACA34F,EAAA,EACA44F,EAAAxoE,EAAAyoE,EAAAv7E,UAAA,MACA00E,EAAAvjE,GAAA,WAAAqqE,GACAt/D,EAAAjlB,KAAAqkF,EAAAE,EAAA94F,SAGAgyF,EAAAvjE,GAAA,EAAA+K,EAAAjlB,KAAAilB,GAEA,IAAArmB,KAAAqmB,SAOA,SAAA76B,EAAAC,EAAAI,GAEA,aAGAA,EAAA,KACAL,EAAAC,QAAAI,EAAA,GAAAW,OAAA2W,QAIA,SAAA3X,EAAAC,EAAAI,GAEA,aAGA,IAAAsxB,EAAAtxB,EAAA,GACA+5F,EAAA/5F,EAAA,IAAAA,EAAA,GACAsxB,IAAAS,EAAA,UACAza,OAAA,SAAAoQ,GACA,OAAAqyE,EAAAryE,OAMA,SAAA/nB,EAAAC,EAAAI,GAEA,aAGA,IAAAwlB,EAAAxlB,EAAA,IACA8xC,EAAA9xC,EAAA,IACA+3F,EAAA/3F,EAAA,IAAA4zB,EACAj0B,EAAAC,QAAA,SAAAo6F,GACA,gBAAAtyE,GACA,IAKA3Q,EALAsc,EAAAye,EAAApqB,GACAjC,EAAAD,EAAA6N,GACAze,EAAA6Q,EAAA7Q,OACA1U,EAAA,EACA2Z,KAEA,MAAAjF,EAAA1U,EACA63F,EAAA33F,KAAAizB,EAAAtc,EAAA0O,EAAAvlB,OACA2Z,EAAAtE,KAAAykF,GAAAjjF,EAAAsc,EAAAtc,IAAAsc,EAAAtc,IAEK,OAAA8C,KAML,SAAAla,EAAAC,EAAAI,GAEA,aAGA,IAAAi6F,GAAA,EACA,wBAAA/3F,eACA,IACA,IAAAA,gBACAoU,MAAA,SAAAuL,GACAA,EAAAqB,WAGA+2E,GAAA,EACG,MAAA7mF,IAGHxT,EAAAsC,eADA+3F,EACA/3F,eAEAlC,EAAA,KAAAkC,gBAKA,SAAAvC,EAAAC,EAAAI,GAEA,aAGA,IAAAk6F,EAAA,oBAAAr0F,QAAA,kBAAAA,OAAAC,SAAA,SAAAC,GAAqG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,oBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAzE,UAAA,gBAAA2E,IAE7I,SAAAqN,EAAA0F,GACA,QAAA5Y,KAAA4Y,EACA1F,EAAAlT,GAAA4Y,EAAA5Y,IAFA,CAICN,EAAA,SAAAE,GACD,IAAAC,KACA,SAAAC,EAAAC,GACA,GAAAF,EAAAE,GAAA,OAAAF,EAAAE,GAAAL,QACA,IAAAD,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAP,YAIA,OAFAE,EAAAG,GAAAG,KAAAT,EAAAC,QAAAD,IAAAC,QAAAI,GACAL,EAAAQ,GAAA,EACAR,EAAAC,QA6BA,OA3BAI,EAAAK,EAAAP,EACAE,EAAAM,EAAAP,EACAC,EAAAE,EAAA,SAAAsB,GACA,OAAAA,GAEAxB,EAAAO,EAAA,SAAAX,EAAAY,EAAAC,GACAT,EAAAU,EAAAd,EAAAY,IACAG,OAAAC,eAAAhB,EAAAY,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAIAT,EAAAgB,EAAA,SAAArB,GACA,IAAAc,EAAAd,KAAAsB,WAAA,WACA,OAAAtB,EAAA,YACK,WACL,OAAAA,GAGA,OADAK,EAAAO,EAAAE,EAAA,IAAAA,GACAA,GAEAT,EAAAU,EAAA,SAAAQ,EAAAC,GACA,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAEAnB,EAAAsB,EAAA,GACAtB,IAAAuB,EAAA,GAxCC,EAyCA,SAAA5B,EAAAC,EAAAI,GAGD,IAAA4F,EAAA,oBAAAC,QAAA,WAAAq0F,EAAAr0F,OAAAC,UAAA,SAAAC,GACA,2BAAAA,EAAA,YAAAm0F,EAAAn0F,IACG,SAAAA,GACH,OAAAA,GAAA,oBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAzE,UAAA,8BAAA2E,EAAA,YAAAm0F,EAAAn0F,IAEAo0F,EAAAn6F,EAAA,GACA2D,EAAAw2F,EAAAx2F,OACA,SAAAy2F,EAAAC,GACA,wBAAAA,GAAA,iCAAAA,EAAA,YAAAz0F,EAAAy0F,IAiDA,SAAAC,EAAA3oE,EAAA4oE,EAAAz9E,GACA,uBAAA6U,EACA,UAAAmB,UAAA,8BAEA,OAAAlc,SAAAxV,UAAA4T,MAAA5U,KAAAuxB,EAAA4oE,EAAAz9E,GAnDAld,EAAA46F,aAAA,SAAApkF,GACA,uCAAAA,EAAA,YAAAxQ,EAAAwQ,KAAA,OAAAA,GAAA,oBAAAA,GAEAxW,EAAA66F,mBAAA,SAAA/5F,EAAAY,EAAAqX,GACAhV,EAAA/D,EAAA46F,aAAA95F,IACAC,OAAAC,eAAAF,EAAAY,GACAE,MAAAmX,EACA/E,UAAA,EACA9S,YAAA,EACAD,cAAA,KAGAjB,EAAA86F,oBAAA,SAAAC,GACA,OAAAA,EAAAtiF,SAEAzY,EAAAg7F,gBAAA,SAAAhmE,EAAAc,EAAAza,EAAAsa,EAAAv0B,GACA,IAAAyU,WAAAmf,GAAAze,IAAA,IAAAV,WAAAwF,EAAAsa,EAAAv0B,GAAA00B,IAEA91B,EAAAi7F,uBAAA,SAAAr5F,EAAAsgC,GACAn+B,EAAA,mBAAAm+B,GACA,IAAA/7B,KAaA,OAZApF,OAAAC,eAAAmF,EAAA,SACAvE,QACAV,YAAA,EACA8S,UAAA,EACA/S,cAAA,IAEAF,OAAAC,eAAAmF,EAAA,QACAvE,MAAAsgC,EACAhhC,YAAA,EACA8S,UAAA,EACA/S,cAAA,IAEAkF,GAEAnG,EAAAk7F,0BAAA,SAAAniF,GACA,OAAA1G,OAAAq3B,MAAA3wB,KAGAA,IAAAoiF,OAGApiF,EAAA,KAWA/Y,EAAAo7F,aAAA,SAAA3nE,EAAApB,EAAAnV,GACAnZ,OAAAgC,IAAA0tB,GACA1vB,EAAAy2F,EAAAnoE,IACAtuB,EAAA6W,MAAA4K,QAAAtI,IACA,IAAA6iD,EAAAtsC,EAAApB,GACA,QAAAtsB,IAAAg6D,EAGA,OAAA26B,EAAA36B,EAAAtsC,EAAAvW,IAEAld,EAAAq7F,oBAAA,SAAA5nE,EAAApB,EAAAnV,GACAnZ,OAAAgC,IAAA0tB,GACA1vB,EAAAy2F,EAAAnoE,IACAtuB,EAAA6W,MAAA4K,QAAAtI,IACA,IACA,OAAAgB,QAAAC,QAAAne,EAAAo7F,aAAA3nE,EAAApB,EAAAnV,IACK,MAAAo+E,GACL,OAAAp9E,QAAAE,OAAAk9E,KAGAt7F,EAAAu7F,+BAAA,SAAA9nE,EAAApB,EAAAnV,EAAA6U,EAAAypE,GACAz3F,OAAAgC,IAAA0tB,GACA1vB,EAAAy2F,EAAAnoE,IACAtuB,EAAA6W,MAAA4K,QAAAtI,IACAnZ,EAAA6W,MAAA4K,QAAAg2E,IACA,IAAAz7B,OAAA,EACA,IACAA,EAAAtsC,EAAApB,GACK,MAAAopE,GACL,OAAAv9E,QAAAE,OAAAq9E,GAEA,QAAA11F,IAAAg6D,EACA,OAAAhuC,EAAA3c,MAAA,KAAAomF,GAEA,IACA,OAAAt9E,QAAAC,QAAAu8E,EAAA36B,EAAAtsC,EAAAvW,IACK,MAAA1J,GACL,OAAA0K,QAAAE,OAAA5K,KAGAxT,EAAA07F,oBAAA,SAAAjoE,GACA,OAAAA,EAAAhb,SAEAzY,EAAA27F,kCAAA,SAAAC,GAEA,GADAA,EAAAvpF,OAAAupF,GACAvpF,OAAAq3B,MAAAkyD,MAAA,EACA,UAAAC,WAAA,iFAEA,OAAAD,GAEA57F,EAAA87F,oCAAA,SAAA74E,EAAA24E,GACA,QAAA71F,IAAAkd,GAAA,oBAAAA,EACA,UAAAiQ,UAAA,0DAGA,OADA0oE,EAAA57F,EAAA27F,kCAAAC,IAEA34E,OACA24E,mBAGC,SAAA77F,EAAAC,EAAAI,GAGD,SAAA27F,EAAAvoF,GACAA,KAAApN,cAAA41F,GACA1jD,WAAA,WACA,MAAA9kC,GACO,GAGP,SAAAwoF,EAAAxnF,GACAD,KAAA3T,KAAA,iBACA2T,KAAAC,WAAA,GACAD,KAAAm+D,OAAA,IAAA//D,OAAA+/D,MAIA,SAAA3uE,EAAAnC,EAAA4S,GACA,IAAA5S,EACA,UAAAo6F,EAAAxnF,GAJAwnF,EAAAx6F,UAAAT,OAAAoT,OAAAxB,MAAAnR,WACAw6F,EAAAx6F,UAAA4E,YAAA41F,EAMAj8F,EAAAC,SACA+7F,iCACAC,iBACAj4F,WAEC,SAAAhE,EAAAC,EAAAI,GAGD,IAAAymE,EAAA,WACA,SAAAC,EAAAt0C,EAAAu0C,GACA,QAAAzmE,EAAA,EAAqBA,EAAAymE,EAAA/xD,OAAkB1U,IAAA,CACvC,IAAA0mE,EAAAD,EAAAzmE,GACA0mE,EAAA9lE,WAAA8lE,EAAA9lE,aAAA,EACA8lE,EAAA/lE,cAAA,EACA,UAAA+lE,MAAAhzD,UAAA,GACAjT,OAAAC,eAAAwxB,EAAAw0C,EAAA7vD,IAAA6vD,IAGA,gBAAAh9B,EAAAi9B,EAAAC,GAGA,OAFAD,GAAAH,EAAA98B,EAAAxoC,UAAAylE,GACAC,GAAAJ,EAAA98B,EAAAk9B,GACAl9B,GAbA,GAgBA,SAAA09B,EAAAC,EAAA39B,GACA,KAAA29B,aAAA39B,GACA,UAAA9W,UAAA,qCAGA,IAAAqnE,EAAAn6F,EAAA,GACAg7F,EAAAb,EAAAa,aACAC,EAAAd,EAAAc,oBACAS,EAAAvB,EAAAuB,oCACAlB,EAAAL,EAAAK,aACAqB,EAAA77F,EAAA,GACA2D,EAAAk4F,EAAAl4F,OACAg4F,EAAAE,EAAAF,+BACAG,EAAA97F,EAAA,GACA+7F,EAAAD,EAAAC,aACAC,EAAAF,EAAAE,qBACAC,EAAAH,EAAAG,eACAC,EAAAJ,EAAAI,WACAC,EAAA,WACA,SAAAA,IACA,IAAAC,EAAA99E,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,GAAAA,UAAA,MACAzH,EAAAyH,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,GAAAA,UAAA,MACAuE,EAAAhM,EAAAgM,KACAw5E,EAAAxlF,EAAA2kF,cACAA,OAAA71F,IAAA02F,EAAA,EAAAA,EACA/0B,EAAAnzD,KAAAgoF,GACAhoF,KAAAmoF,OAAA,WACAnoF,KAAAooF,kBAAA52F,EACAwO,KAAAqoF,aAAA72F,EACAwO,KAAAsoF,+BAAA92F,EACAwO,KAAAuoF,kBACAvoF,KAAAwoF,2BAAAh3F,EACAwO,KAAAyoF,mBAAAj3F,EACAwO,KAAA0oF,2BAAAl3F,EACAwO,KAAA2oF,0BAAAn3F,EACAwO,KAAA4oF,eAAA,EACA,IAAA5+E,EAAAi+E,EAAAj+E,KACA,QAAAxY,IAAAwY,EACA,UAAAs9E,WAAA,6BAEAtnF,KAAAsoF,0BAAA,IAAAO,EAAA7oF,KAAAioF,EAAAv5E,EAAA24E,GACArnF,KAAAsoF,0BAAAQ,eA8BA,OA5BAx2B,EAAA01B,IACAplF,IAAA,QACAvV,MAAA,SAAA2d,GACA,WAAA+9E,EAAA/oF,MACA2J,QAAAE,OAAAm/E,GAAA,WAEA,IAAAC,EAAAjpF,MACA2J,QAAAE,OAAA,IAAA8U,UAAA,oDAEAuqE,EAAAlpF,KAAAgL,MAGApI,IAAA,YACAvV,MAAA,WACA,QAAA07F,EAAA/oF,MACA,MAAAgpF,GAAA,aAEA,OAAAG,EAAAnpF,SAGA4C,IAAA,SACAhW,IAAA,WACA,QAAAm8F,EAAA/oF,MACA,MAAAgpF,GAAA,UAEA,OAAAC,EAAAjpF,UAGAgoF,EArDA,GAmEA,SAAAmB,EAAA98E,GACA,WAAA+8E,EAAA/8E,GAEA,SAAA08E,EAAA9mF,GACA,QAAAokF,EAAApkF,MAGAzV,OAAAS,UAAAC,eAAAjB,KAAAgW,EAAA,6BAKA,SAAAgnF,EAAA58E,GAEA,OADA7c,GAAA,IAAAu5F,EAAA18E,GAAA,6EACA7a,IAAA6a,EAAAg8E,QAKA,SAAAa,EAAA78E,EAAArB,GACA,IAAA8kB,EAAAzjB,EAAA87E,OACA,cAAAr4D,EACA,OAAAnmB,QAAAC,aAAApY,GAEA,eAAAs+B,EACA,OAAAnmB,QAAAE,OAAAwC,EAAA+7E,cAEA,IAAA57E,EAAA,IAAAmS,UAAA,sBACA,QAAAntB,IAAA6a,EAAAs8E,qBACA,OAAAh/E,QAAAE,OAAA2C,GAEAhd,EAAA,aAAAsgC,GAAA,aAAAA,EAAA,sCACA,IAAAu5D,GAAA,EACA,aAAAv5D,IACAu5D,GAAA,EACAr+E,OAAAxZ,GAEA,IAAAkY,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACAwC,EAAAs8E,sBACAW,SAAA1/E,EACA2/E,QAAA1/E,EACA2/E,QAAAx+E,EACAy+E,oBAAAJ,KAMA,OAHA,IAAAA,GACAK,EAAAr9E,EAAAG,GAEA9C,EAEA,SAAAigF,EAAAt9E,GACA7c,GAAA,IAAAy5F,EAAA58E,IACA7c,EAAA,aAAA6c,EAAA87E,QACA,IAAAz+E,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACA,IAAA+/E,GACAN,SAAA1/E,EACA2/E,QAAA1/E,GAEAwC,EAAAk8E,eAAAnnF,KAAAwoF,KAEA,OAAAlgF,EAEA,SAAAmgF,EAAAx9E,EAAAG,GACA,IAAAsjB,EAAAzjB,EAAA87E,OACA,aAAAr4D,GAIAtgC,EAAA,aAAAsgC,GACAg6D,EAAAz9E,IAJAq9E,EAAAr9E,EAAAG,GAMA,SAAAk9E,EAAAr9E,EAAArB,GACAxb,OAAAgC,IAAA6a,EAAA+7E,aAAA,qCACA54F,EAAA,aAAA6c,EAAA87E,OAAA,0BACA,IAAAz6E,EAAArB,EAAAi8E,0BACA94F,OAAAgC,IAAAkc,EAAA,oCACArB,EAAA87E,OAAA,WACA97E,EAAA+7E,aAAAp9E,EACA,IAAA++E,EAAA19E,EAAAg8E,aACA72F,IAAAu4F,GACAC,EAAAD,EAAA/+E,IAEA,IAAAi/E,EAAA59E,KAAA,IAAAqB,EAAAw8E,UACAJ,EAAAz9E,GAGA,SAAAy9E,EAAAz9E,GACA7c,EAAA,aAAA6c,EAAA87E,OAAA,8BACA34F,GAAA,IAAAy6F,EAAA59E,GAAA,8DACAA,EAAA87E,OAAA,UACA97E,EAAAi8E,0BAAA6B,eAEA,IADA,IAAAC,EAAA/9E,EAAA+7E,aACAr8F,EAAA,EAAmBA,EAAAsgB,EAAAk8E,eAAA9nF,OAAkC1U,IAAA,CACrD,IAAA69F,EAAAv9E,EAAAk8E,eAAAx8F,GACA69F,EAAAL,QAAAa,GAGA,GADA/9E,EAAAk8E,uBACA/2F,IAAA6a,EAAAs8E,qBAAA,CAIA,IAAA0B,EAAAh+E,EAAAs8E,qBAEA,GADAt8E,EAAAs8E,0BAAAn3F,GACA,IAAA64F,EAAAZ,oBAGA,OAFAY,EAAAd,QAAAa,QACAE,EAAAj+E,GAGA,IAAA3C,EAAA2C,EAAAi8E,0BAAAiC,aAAAF,EAAAb,SACA9/E,EAAAkD,KAAA,WACAy9E,EAAAf,WACAgB,EAAAj+E,IACK,SAAArB,GACLq/E,EAAAd,QAAAv+E,GACAs/E,EAAAj+E,UAhBAi+E,EAAAj+E,GAmBA,SAAAm+E,EAAAn+E,GACA7c,OAAAgC,IAAA6a,EAAAm8E,uBACAn8E,EAAAm8E,sBAAAc,cAAA93F,GACA6a,EAAAm8E,2BAAAh3F,EAEA,SAAAi5F,EAAAp+E,EAAAG,GACAhd,OAAAgC,IAAA6a,EAAAm8E,uBACAn8E,EAAAm8E,sBAAAe,QAAA/8E,GACAH,EAAAm8E,2BAAAh3F,EACAhC,EAAA,aAAA6c,EAAA87E,QAAA,aAAA97E,EAAA87E,QACA0B,EAAAx9E,EAAAG,GAEA,SAAAk+E,EAAAr+E,GACA7c,OAAAgC,IAAA6a,EAAAq8E,uBACAr8E,EAAAq8E,sBAAAY,cAAA93F,GACA6a,EAAAq8E,2BAAAl3F,EACA,IAAAs+B,EAAAzjB,EAAA87E,OACA34F,EAAA,aAAAsgC,GAAA,aAAAA,GACA,aAAAA,IACAzjB,EAAA+7E,kBAAA52F,OACAA,IAAA6a,EAAAs8E,uBACAt8E,EAAAs8E,qBAAAW,WACAj9E,EAAAs8E,0BAAAn3F,IAGA6a,EAAA87E,OAAA,SACA,IAAA4B,EAAA19E,EAAAg8E,aACA72F,IAAAu4F,GACAY,GAAAZ,GAEAv6F,OAAAgC,IAAA6a,EAAAs8E,qBAAA,6CACAn5F,OAAAgC,IAAA6a,EAAA+7E,aAAA,qCAEA,SAAAwC,EAAAv+E,EAAAG,GACAhd,OAAAgC,IAAA6a,EAAAq8E,uBACAr8E,EAAAq8E,sBAAAa,QAAA/8E,GACAH,EAAAq8E,2BAAAl3F,EACAhC,EAAA,aAAA6c,EAAA87E,QAAA,aAAA97E,EAAA87E,aACA32F,IAAA6a,EAAAs8E,uBACAt8E,EAAAs8E,qBAAAY,QAAA/8E,GACAH,EAAAs8E,0BAAAn3F,GAEAq4F,EAAAx9E,EAAAG,GAEA,SAAAq+E,EAAAx+E,GACA,YAAA7a,IAAA6a,EAAAo8E,oBAAAj3F,IAAA6a,EAAAq8E,sBAKA,SAAAuB,EAAA59E,GACA,YAAA7a,IAAA6a,EAAAm8E,4BAAAh3F,IAAA6a,EAAAq8E,sBAKA,SAAAoC,EAAAz+E,GACA7c,OAAAgC,IAAA6a,EAAAq8E,uBACAl5F,OAAAgC,IAAA6a,EAAAo8E,eACAp8E,EAAAq8E,sBAAAr8E,EAAAo8E,cACAp8E,EAAAo8E,mBAAAj3F,EAEA,SAAAu5F,EAAA1+E,GACA7c,OAAAgC,IAAA6a,EAAAm8E,sBAAA,0CACAh5F,EAAA,IAAA6c,EAAAk8E,eAAA9nF,OAAA,mCACA4L,EAAAm8E,sBAAAn8E,EAAAk8E,eAAAvyE,QAEA,SAAAs0E,EAAAj+E,GACA7c,EAAA,YAAA6c,EAAA87E,OAAA,0CACA32F,IAAA6a,EAAAo8E,gBACAj5F,OAAAgC,IAAA6a,EAAAq8E,uBACAr8E,EAAAo8E,cAAAc,QAAAl9E,EAAA+7E,cACA/7E,EAAAo8E,mBAAAj3F,GAEA,IAAAu4F,EAAA19E,EAAAg8E,aACA72F,IAAAu4F,IACAiB,GAAAjB,EAAA19E,EAAA+7E,cACA2B,EAAAkB,eAAA3/E,MAAA,eAGA,SAAA4/E,EAAA7+E,EAAA8+E,GACA37F,EAAA,aAAA6c,EAAA87E,QACA34F,GAAA,IAAAq7F,EAAAx+E,IACA,IAAA09E,EAAA19E,EAAAg8E,aACA72F,IAAAu4F,GAAAoB,IAAA9+E,EAAAu8E,iBACA,IAAAuC,EACAC,GAAArB,IAEAv6F,GAAA,IAAA27F,GACAE,GAAAtB,KAGA19E,EAAAu8E,cAAAuC,EA7NA3/F,EAAAC,SACA09F,qCACAJ,mBACAE,yBACAjB,iBACAkB,sBACAoC,wCACAC,uDACAC,qCACAC,mCACAZ,uCAqNA,IAAAzB,EAAA,WACA,SAAAA,EAAA/8E,GAEA,GADA8mD,EAAAnzD,KAAAopF,IACA,IAAAL,EAAA18E,GACA,UAAAsS,UAAA,sFAEA,QAAAsqE,EAAA58E,GACA,UAAAsS,UAAA,+EAEA3e,KAAA0rF,qBAAAr/E,EACAA,EAAAg8E,QAAAroF,KACA,IAAA8vB,EAAAzjB,EAAA87E,OACA,gBAAAr4D,GACA,IAAA+6D,EAAAx+E,KAAA,IAAAA,EAAAu8E,cACA+C,GAAA3rF,MAEA4rF,GAAA5rF,MAEA6rF,GAAA7rF,WACO,gBAAA8vB,EACPg8D,GAAA9rF,KAAAqM,EAAA+7E,cACApoF,KAAA+rF,cAAAzgF,MAAA,cACAugF,GAAA7rF,WACO,cAAA8vB,EACP87D,GAAA5rF,MACAgsF,GAAAhsF,UACO,CACPxQ,EAAA,YAAAsgC,EAAA,yBACA,IAAAs6D,EAAA/9E,EAAA+7E,aACA0D,GAAA9rF,KAAAoqF,GACApqF,KAAA+rF,cAAAzgF,MAAA,cACA2gF,GAAAjsF,KAAAoqF,GACApqF,KAAAirF,eAAA3/E,MAAA,eAiFA,OA9EAgnD,EAAA82B,IACAxmF,IAAA,QACAvV,MAAA,SAAA2d,GACA,WAAAkhF,EAAAlsF,MACA2J,QAAAE,OAAAsiF,GAAA,eAEA36F,IAAAwO,KAAA0rF,qBACA/hF,QAAAE,OAAAuiF,GAAA,UAEAC,EAAArsF,KAAAgL,MAGApI,IAAA,QACAvV,MAAA,WACA,QAAA6+F,EAAAlsF,MACA,OAAA2J,QAAAE,OAAAsiF,GAAA,UAEA,IAAA9/E,EAAArM,KAAA0rF,qBACA,YAAAl6F,IAAA6a,EACA1C,QAAAE,OAAAuiF,GAAA,WAEA,IAAAvB,EAAAx+E,GACA1C,QAAAE,OAAA,IAAA8U,UAAA,2CAEA2tE,EAAAtsF,SAGA4C,IAAA,cACAvV,MAAA,WACA,QAAA6+F,EAAAlsF,MACA,MAAAmsF,GAAA,eAEA,IAAA9/E,EAAArM,KAAA0rF,0BACAl6F,IAAA6a,IAGA7c,OAAAgC,IAAA6a,EAAAg8E,SACAmD,EAAAxrF,UAGA4C,IAAA,QACAvV,MAAA,SAAA6T,GACA,WAAAgrF,EAAAlsF,MACA2J,QAAAE,OAAAsiF,GAAA,eAEA36F,IAAAwO,KAAA0rF,qBACA/hF,QAAAE,OAAAuiF,GAAA,aAEAX,EAAAzrF,KAAAkB,MAGA0B,IAAA,SACAhW,IAAA,WACA,WAAAs/F,EAAAlsF,MACA2J,QAAAE,OAAAsiF,GAAA,WAEAnsF,KAAAirF,kBAGAroF,IAAA,cACAhW,IAAA,WACA,QAAAs/F,EAAAlsF,MACA,MAAAmsF,GAAA,eAEA,QAAA36F,IAAAwO,KAAA0rF,qBACA,MAAAU,GAAA,eAEA,OAAAG,EAAAvsF,SAGA4C,IAAA,QACAhW,IAAA,WACA,WAAAs/F,EAAAlsF,MACA2J,QAAAE,OAAAsiF,GAAA,UAEAnsF,KAAA+rF,kBAGA3C,EAjHA,GAmHA,SAAA8C,EAAAjqF,GACA,QAAAokF,EAAApkF,MAGAzV,OAAAS,UAAAC,eAAAjB,KAAAgW,EAAA,wBAKA,SAAAoqF,EAAAtC,EAAA/+E,GACA,IAAAqB,EAAA09E,EAAA2B,qBAEA,OADAl8F,OAAAgC,IAAA6a,GACA68E,EAAA78E,EAAArB,GAEA,SAAAshF,EAAAvC,GACA,IAAA19E,EAAA09E,EAAA2B,qBACAl8F,OAAAgC,IAAA6a,GACA,IAAAyjB,EAAAzjB,EAAA87E,OACA,cAAAr4D,GAAA,YAAAA,EACA,OAAAnmB,QAAAE,OAAA,IAAA8U,UAAA,kBAAAmR,EAAA,8DAEAtgC,EAAA,aAAAsgC,GAAA,aAAAA,GACAtgC,GAAA,IAAAq7F,EAAAx+E,IACA,IAAA3C,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACA,IAAA2iF,GACAlD,SAAA1/E,EACA2/E,QAAA1/E,GAEAwC,EAAAo8E,cAAA+D,IAMA,OAJA,IAAAngF,EAAAu8E,eAAA,aAAA94D,GACAu7D,GAAAtB,GAEA0C,EAAApgF,EAAAi8E,2BACA5+E,EAEA,SAAA6hF,EAAAxB,GACA,IAAA19E,EAAA09E,EAAA2B,qBACAl8F,OAAAgC,IAAA6a,GACA,IAAAyjB,EAAAzjB,EAAA87E,OACA,WAAA0C,EAAAx+E,IAAA,WAAAyjB,EACAnmB,QAAAC,UAEA,YAAAkmB,EACAnmB,QAAAE,OAAAwC,EAAA+7E,eAEA54F,EAAA,aAAAsgC,GAAA,aAAAA,GACAw8D,EAAAvC,IAEA,SAAA2C,EAAA3C,EAAAv9E,GACA,YAAAu9E,EAAA4C,oBACA3B,GAAAjB,EAAAv9E,GAEAogF,GAAA7C,EAAAv9E,GAEAu9E,EAAAkB,eAAA3/E,MAAA,cAEA,SAAA0+E,EAAAD,EAAAv9E,GACA,YAAAu9E,EAAA8C,mBACAC,GAAA/C,EAAAv9E,GAEAugF,GAAAhD,EAAAv9E,GAEAu9E,EAAAgC,cAAAzgF,MAAA,cAEA,SAAAihF,EAAAxC,GACA,IAAA19E,EAAA09E,EAAA2B,qBACA57D,EAAAzjB,EAAA87E,OACA,kBAAAr4D,GAAA,aAAAA,EACA,KAEA,WAAAA,EACA,EAEAk9D,EAAA3gF,EAAAi8E,2BAEA,SAAAkD,EAAAzB,GACA,IAAA19E,EAAA09E,EAAA2B,qBACAl8F,OAAAgC,IAAA6a,GACA7c,EAAA6c,EAAAg8E,UAAA0B,GACA,IAAAkD,EAAA,IAAAtuE,UAAA,oFACAqrE,EAAAD,EAAAkD,GACAP,EAAA3C,EAAAkD,GACA5gF,EAAAg8E,aAAA72F,EACAu4F,EAAA2B,0BAAAl6F,EAEA,SAAAi6F,EAAA1B,EAAA7oF,GACA,IAAAmL,EAAA09E,EAAA2B,qBACAl8F,OAAAgC,IAAA6a,GACA,IAAAqB,EAAArB,EAAAi8E,0BACA1tE,EAAAsyE,EAAAx/E,EAAAxM,GACA,GAAAmL,IAAA09E,EAAA2B,qBACA,OAAA/hF,QAAAE,OAAAuiF,GAAA,aAEA,IAAAt8D,EAAAzjB,EAAA87E,OACA,eAAAr4D,EACA,OAAAnmB,QAAAE,OAAAwC,EAAA+7E,cAEA,QAAAyC,EAAAx+E,IAAA,WAAAyjB,EACA,OAAAnmB,QAAAE,OAAA,IAAA8U,UAAA,6DAEA,gBAAAmR,EACA,OAAAnmB,QAAAE,OAAAwC,EAAA+7E,cAEA54F,EAAA,aAAAsgC,GACA,IAAApmB,EAAAigF,EAAAt9E,GAEA,OADA8gF,EAAAz/E,EAAAxM,EAAA0Z,GACAlR,EAEA,IAAAm/E,EAAA,WACA,SAAAA,EAAAx8E,EAAA47E,EAAAv5E,EAAA24E,GAEA,GADAl0B,EAAAnzD,KAAA6oF,IACA,IAAAE,EAAA18E,GACA,UAAAsS,UAAA,0FAEA,QAAAntB,IAAA6a,EAAAi8E,0BACA,UAAA3pE,UAAA,mGAEA3e,KAAAotF,0BAAA/gF,EACArM,KAAAqtF,gBAAApF,EACAjoF,KAAAstF,YAAA97F,EACAwO,KAAAutF,qBAAA/7F,EACAu2F,EAAA/nF,MACAA,KAAAkqF,UAAA,EACA,IAAAsD,EAAAjG,EAAA74E,EAAA24E,GACArnF,KAAAytF,cAAAD,EAAA9+E,KACA1O,KAAA0tF,aAAAF,EAAAnG,cACA,IAAA8D,EAAAwC,GAAA3tF,MACAkrF,EAAA7+E,EAAA8+E,GAyCA,OAvCA74B,EAAAu2B,IACAjmF,IAAA,QACAvV,MAAA,SAAA4R,GACA,QAAA2uF,EAAA5tF,MACA,UAAA2e,UAAA,yGAEA,IAAAmR,EAAA9vB,KAAAotF,0BAAAjF,OACA,aAAAr4D,GAGAw7D,GAAAtrF,KAAAf,MAGA2D,IAAA,eACAvV,MAAA,SAAA2d,GACA,OAAA87E,EAAA9mF,KAAAqtF,gBAAA,SAAAriF,OAGApI,IAAA,eACAvV,MAAA,WACA06F,EAAA/nF,SAGA4C,IAAA,eACAvV,MAAA,WACA,IAAAqe,EAAA1L,KACA6tF,EAAAhH,EAAA7mF,KAAAqtF,gBAAA,SAAArtF,OACAqM,EAAArM,KAAAotF,0BACAzjF,QAAAC,QAAAikF,GAAAjhF,KAAA,WACApd,EAAA,aAAA6c,EAAA87E,QAAA,aAAA97E,EAAA87E,QACAz8E,EAAAw+E,UAAA,EACA4D,EAAApiF,IACS,SAAApI,GACT9T,EAAA,aAAA6c,EAAA87E,QAAA,aAAA97E,EAAA87E,QACAz8E,EAAAw+E,UAAA,EACAL,EAAAx9E,EAAA/I,KACSgI,MAAAk8E,OAGTqB,EA5DA,GA8DA,SAAA4D,EAAA/+E,GACAm6E,EAAAn6E,EAAA,WACAogF,EAAApgF,GAEA,SAAAw/E,EAAAx/E,EAAAxM,GACA,IAAA6sF,EAAArgF,EAAA+/E,cACA,QAAAj8F,IAAAu8F,EACA,SAEA,IACA,OAAAA,EAAA7sF,GACK,MAAA8sF,GAEL,OADAC,GAAAvgF,EAAAsgF,GACA,GAGA,SAAAhB,EAAAt/E,GACA,OAAAA,EAAAggF,aAAAhgF,EAAA6/E,gBAEA,SAAAJ,EAAAz/E,EAAAxM,EAAA0Z,GACA,IAAAszE,GAAuBhtF,SACvB,IACA2mF,EAAAn6E,EAAAwgF,EAAAtzE,GACK,MAAAuzE,GAEL,YADAF,GAAAvgF,EAAAygF,GAGA,IAAA9hF,EAAAqB,EAAA0/E,0BACA,QAAAvC,EAAAx+E,IAAA,aAAAA,EAAA87E,OAAA,CACA,IAAAgD,EAAAwC,GAAAjgF,GACAw9E,EAAA7+E,EAAA8+E,GAEA2C,EAAApgF,GAEA,SAAAkgF,EAAA3rF,GACA,QAAAokF,EAAApkF,MAGAzV,OAAAS,UAAAC,eAAAjB,KAAAgW,EAAA,mBAKA,SAAA6rF,EAAApgF,GACA,IAAArB,EAAAqB,EAAA0/E,0BACA,QAAA1/E,EAAAw8E,eAGA14F,IAAA6a,EAAAm8E,sBAAA,CAGA,IAAA14D,EAAAzjB,EAAA87E,OACA,cAAAr4D,GAAA,YAAAA,EAGA,gBAAAA,GAIA,OAAApiB,EAAA4/E,OAAA7sF,OAAA,CAGA,IAAAytF,EAAApG,EAAAp6E,GACA,UAAAwgF,EACAE,GAAA1gF,GAEA2gF,GAAA3gF,EAAAwgF,EAAAhtF,aAVA4oF,EAAAz9E,IAaA,SAAA4hF,GAAAvgF,EAAAlB,GACA,aAAAkB,EAAA0/E,0BAAAjF,QACAmD,GAAA59E,EAAAlB,GAGA,SAAA4hF,GAAA1gF,GACA,IAAArB,EAAAqB,EAAA0/E,0BACAtC,EAAAz+E,GACAu7E,EAAAl6E,GACAle,EAAA,IAAAke,EAAA4/E,OAAA7sF,OAAA,+DACA,IAAA6tF,EAAAxH,EAAAp5E,EAAA2/E,gBAAA,YACAiB,EAAA1hF,KAAA,WACA89E,EAAAr+E,IACK,SAAArB,GACL4/E,EAAAv+E,EAAArB,KACKM,MAAAk8E,GAEL,SAAA6G,GAAA3gF,EAAAxM,GACA,IAAAmL,EAAAqB,EAAA0/E,0BACArC,EAAA1+E,GACA,IAAAkiF,EAAAzH,EAAAp5E,EAAA2/E,gBAAA,SAAAnsF,EAAAwM,IACA6gF,EAAA3hF,KAAA,WACA49E,EAAAn+E,GACA,IAAAyjB,EAAAzjB,EAAA87E,OAGA,GAFA34F,EAAA,aAAAsgC,GAAA,aAAAA,GACA83D,EAAAl6E,IACA,IAAAm9E,EAAAx+E,IAAA,aAAAyjB,EAAA,CACA,IAAAq7D,EAAAwC,GAAAjgF,GACAw9E,EAAA7+E,EAAA8+E,GAEA2C,EAAApgF,IACK,SAAA1C,GACLy/E,EAAAp+E,EAAArB,KACKM,MAAAk8E,GAEL,SAAAmG,GAAAjgF,GACA,IAAAI,EAAAk/E,EAAAt/E,GACA,OAAAI,GAAA,EAEA,SAAAw9E,GAAA59E,EAAAlB,GACA,IAAAH,EAAAqB,EAAA0/E,0BACA59F,EAAA,aAAA6c,EAAA87E,QACAuB,EAAAr9E,EAAAG,GAEA,SAAAw8E,GAAA38F,GACA,WAAAsyB,UAAA,4BAAAtyB,EAAA,yCAEA,SAAA8/F,GAAA9/F,GACA,WAAAsyB,UAAA,yCAAAtyB,EAAA,sDAEA,SAAA+/F,GAAA//F,GACA,WAAAsyB,UAAA,UAAAtyB,EAAA,qCAEA,SAAAw/F,GAAA9B,GACAA,EAAAkB,eAAA,IAAAthF,QAAA,SAAAC,EAAAC,GACAkgF,EAAAyE,uBAAA5kF,EACAmgF,EAAA0E,sBAAA5kF,EACAkgF,EAAA4C,oBAAA,YAGA,SAAAV,GAAAlC,EAAA/+E,GACA++E,EAAAkB,eAAAthF,QAAAE,OAAAmB,GACA++E,EAAAyE,4BAAAh9F,EACAu4F,EAAA0E,2BAAAj9F,EACAu4F,EAAA4C,oBAAA,WAEA,SAAAX,GAAAjC,GACAA,EAAAkB,eAAAthF,QAAAC,aAAApY,GACAu4F,EAAAyE,4BAAAh9F,EACAu4F,EAAA0E,2BAAAj9F,EACAu4F,EAAA4C,oBAAA,WAEA,SAAA3B,GAAAjB,EAAA/+E,GACAxb,OAAAgC,IAAAu4F,EAAAyE,uBAAA,+CACAh/F,OAAAgC,IAAAu4F,EAAA0E,sBAAA,8CACAj/F,EAAA,YAAAu6F,EAAA4C,oBAAA,yCACA5C,EAAA0E,sBAAAzjF,GACA++E,EAAAyE,4BAAAh9F,EACAu4F,EAAA0E,2BAAAj9F,EACAu4F,EAAA4C,oBAAA,WAEA,SAAAC,GAAA7C,EAAA/+E,GACAxb,OAAAgC,IAAAu4F,EAAAyE,uBAAA,+CACAh/F,OAAAgC,IAAAu4F,EAAA0E,sBAAA,8CACAj/F,EAAA,YAAAu6F,EAAA4C,oBAAA,6CACA5C,EAAAkB,eAAAthF,QAAAE,OAAAmB,GACA++E,EAAA4C,oBAAA,WAEA,SAAAhC,GAAAZ,GACAv6F,OAAAgC,IAAAu4F,EAAAyE,uBAAA,+CACAh/F,OAAAgC,IAAAu4F,EAAA0E,sBAAA,8CACAj/F,EAAA,YAAAu6F,EAAA4C,oBAAA,yCACA5C,EAAAyE,4BAAAh9F,GACAu4F,EAAAyE,4BAAAh9F,EACAu4F,EAAA0E,2BAAAj9F,EACAu4F,EAAA4C,oBAAA,WAEA,SAAAhB,GAAA5B,GACAA,EAAAgC,cAAA,IAAApiF,QAAA,SAAAC,EAAAC,GACAkgF,EAAA2E,sBAAA9kF,EACAmgF,EAAA4E,qBAAA9kF,IAEAkgF,EAAA8C,mBAAA,UAEA,SAAAf,GAAA/B,EAAA/+E,GACA++E,EAAAgC,cAAApiF,QAAAE,OAAAmB,GACA++E,EAAA2E,2BAAAl9F,EACAu4F,EAAA4E,0BAAAn9F,EACAu4F,EAAA8C,mBAAA,WAEA,SAAAjB,GAAA7B,GACAA,EAAAgC,cAAApiF,QAAAC,aAAApY,GACAu4F,EAAA2E,2BAAAl9F,EACAu4F,EAAA4E,0BAAAn9F,EACAu4F,EAAA8C,mBAAA,YAEA,SAAAC,GAAA/C,EAAA/+E,GACAxb,OAAAgC,IAAAu4F,EAAA2E,sBAAA,8CACAl/F,OAAAgC,IAAAu4F,EAAA4E,qBAAA,6CACA5E,EAAA4E,qBAAA3jF,GACA++E,EAAA2E,2BAAAl9F,EACAu4F,EAAA4E,0BAAAn9F,EACAu4F,EAAA8C,mBAAA,WAEA,SAAAzB,GAAArB,GACAv6F,OAAAgC,IAAAu4F,EAAA2E,sBAAA,8CACAl/F,OAAAgC,IAAAu4F,EAAA4E,qBAAA,6CACA5E,EAAAgC,cAAA,IAAApiF,QAAA,SAAAC,EAAAC,GACAkgF,EAAA2E,sBAAA9kF,EACAmgF,EAAA4E,qBAAA9kF,IAEAkgF,EAAA8C,mBAAA,UAEA,SAAAE,GAAAhD,EAAA/+E,GACAxb,OAAAgC,IAAAu4F,EAAA2E,sBAAA,8CACAl/F,OAAAgC,IAAAu4F,EAAA4E,qBAAA,6CACA5E,EAAAgC,cAAApiF,QAAAE,OAAAmB,GACA++E,EAAA8C,mBAAA,WAEA,SAAAxB,GAAAtB,GACAv6F,OAAAgC,IAAAu4F,EAAA2E,sBAAA,8CACAl/F,OAAAgC,IAAAu4F,EAAA4E,qBAAA,6CACA5E,EAAA2E,2BAAAl9F,GACAu4F,EAAA2E,2BAAAl9F,EACAu4F,EAAA4E,0BAAAn9F,EACAu4F,EAAA8C,mBAAA,cAEC,SAAArhG,EAAAC,EAAAI,GAGD,IAAAm6F,EAAAn6F,EAAA,GACA86F,EAAAX,EAAAW,0BACAe,EAAA77F,EAAA,GACA2D,EAAAk4F,EAAAl4F,OACA/D,EAAAm8F,aAAA,SAAAgH,GACAp/F,EAAA,WAAAo/F,GAAA,oBAAAA,EAAA,6GACAp/F,EAAAo/F,EAAAtB,OAAA7sF,OAAA,mEACA,IAAAwhE,EAAA2sB,EAAAtB,OAAAt3E,QAKA,OAJA44E,EAAArB,iBAAAtrB,EAAAvzD,KACAkgF,EAAArB,gBAAA,IACAqB,EAAArB,gBAAA,GAEAtrB,EAAA50E,OAEA5B,EAAAo8F,qBAAA,SAAA+G,EAAAvhG,EAAAqhB,GAGA,GAFAlf,EAAA,WAAAo/F,GAAA,oBAAAA,EAAA,qHACAlgF,EAAA5Q,OAAA4Q,IACAi4E,EAAAj4E,GACA,UAAA44E,WAAA,wDAEAsH,EAAAtB,OAAAlsF,MACA/T,QACAqhB,SAEAkgF,EAAArB,iBAAA7+E,GAEAjjB,EAAAq8F,eAAA,SAAA8G,GACAp/F,EAAA,WAAAo/F,GAAA,oBAAAA,EAAA,+GACAp/F,EAAAo/F,EAAAtB,OAAA7sF,OAAA,8DACA,IAAAwhE,EAAA2sB,EAAAtB,OAAA,GACA,OAAArrB,EAAA50E,OAEA5B,EAAAs8F,WAAA,SAAA6G,GACAp/F,EAAA,WAAAo/F,GAAA,oBAAAA,EAAA,2GACAA,EAAAtB,UACAsB,EAAArB,gBAAA,IAEC,SAAA/hG,EAAAC,EAAAI,GAGD,IAAAymE,EAAA,WACA,SAAAC,EAAAt0C,EAAAu0C,GACA,QAAAzmE,EAAA,EAAqBA,EAAAymE,EAAA/xD,OAAkB1U,IAAA,CACvC,IAAA0mE,EAAAD,EAAAzmE,GACA0mE,EAAA9lE,WAAA8lE,EAAA9lE,aAAA,EACA8lE,EAAA/lE,cAAA,EACA,UAAA+lE,MAAAhzD,UAAA,GACAjT,OAAAC,eAAAwxB,EAAAw0C,EAAA7vD,IAAA6vD,IAGA,gBAAAh9B,EAAAi9B,EAAAC,GAGA,OAFAD,GAAAH,EAAA98B,EAAAxoC,UAAAylE,GACAC,GAAAJ,EAAA98B,EAAAk9B,GACAl9B,GAbA,GAgBA,SAAA09B,EAAAC,EAAA39B,GACA,KAAA29B,aAAA39B,GACA,UAAA9W,UAAA,qCAGA,IAAAqnE,EAAAn6F,EAAA,GACA46F,EAAAT,EAAAS,gBACAC,EAAAV,EAAAU,uBACAC,EAAAX,EAAAW,0BACAE,EAAAb,EAAAa,aACAC,EAAAd,EAAAc,oBACAK,EAAAnB,EAAAmB,oBACAI,EAAAvB,EAAAuB,oCACAH,EAAApB,EAAAoB,kCACAM,EAAA77F,EAAA,GACA06F,EAAAmB,EAAAnB,oBACAD,EAAAoB,EAAApB,mBACAD,EAAAqB,EAAArB,aACAsB,EAAA97F,EAAA,GACA2D,EAAAm4F,EAAAn4F,OACAg4F,EAAAG,EAAAH,+BACAqH,EAAAhjG,EAAA,GACA+7F,EAAAiH,EAAAjH,aACAC,EAAAgH,EAAAhH,qBACAE,EAAA8G,EAAA9G,WACA+G,EAAAjjG,EAAA,GACAs9F,EAAA2F,EAAA3F,mCACAJ,EAAA+F,EAAA/F,iBACAE,EAAA6F,EAAA7F,uBACAC,EAAA4F,EAAA5F,oBACAqC,EAAAuD,EAAAvD,qDACAC,EAAAsD,EAAAtD,mCACAC,EAAAqD,EAAArD,iCACAZ,EAAAiE,EAAAjE,oCACA98F,EAAA,WACA,SAAAA,IACA,IAAAghG,EAAA5kF,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,GAAAA,UAAA,MACAzH,EAAAyH,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,GAAAA,UAAA,MACAuE,EAAAhM,EAAAgM,KACA24E,EAAA3kF,EAAA2kF,cACAl0B,EAAAnzD,KAAAjS,GACAiS,KAAAmoF,OAAA,WACAnoF,KAAAg0E,aAAAxiF,EACAwO,KAAAooF,kBAAA52F,EACAwO,KAAAgvF,YAAA,EACAhvF,KAAAivF,+BAAAz9F,EACA,IAAAwY,EAAA+kF,EAAA/kF,KACAklF,EAAAvuF,OAAAqJ,GACA,aAAAklF,OACA19F,IAAA61F,IACAA,EAAA,GAEArnF,KAAAivF,0BAAA,IAAAE,GAAAnvF,KAAA+uF,EAAA1H,OACO,SAAA71F,IAAAwY,EAMP,UAAAs9E,WAAA,kCALA91F,IAAA61F,IACAA,EAAA,GAEArnF,KAAAivF,0BAAA,IAAAG,GAAApvF,KAAA+uF,EAAArgF,EAAA24E,IA+MA,OA1MA/0B,EAAAvkE,IACA6U,IAAA,SACAvV,MAAA,SAAA2d,GACA,WAAAqkF,EAAArvF,MACA2J,QAAAE,OAAAm/E,GAAA,YAEA,IAAAsG,EAAAtvF,MACA2J,QAAAE,OAAA,IAAA8U,UAAA,qDAEA4wE,EAAAvvF,KAAAgL,MAGApI,IAAA,YACAvV,MAAA,WACA,IAAAkhB,EAAApE,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,GAAAA,UAAA,MACAoa,EAAAhW,EAAAgW,KACA,QAAA8qE,EAAArvF,MACA,MAAAgpF,GAAA,aAEA,QAAAx3F,IAAA+yB,EACA,OAAAirE,EAAAxvF,MAGA,GADAukB,EAAA5jB,OAAA4jB,GACA,SAAAA,EACA,OAAAkrE,EAAAzvF,MAEA,UAAAsnF,WAAA,gCAGA1kF,IAAA,cACAvV,MAAA,SAAA+hB,EAAAupC,GACA,IAAAl5C,EAAA2P,EAAA3P,SACAiwF,EAAAtgF,EAAAsgF,SACAhmF,EAAA1J,KAAA2vF,OAAAlwF,EAAAk5C,GAEA,OADAi3C,GAAAlmF,GACAgmF,KAGA9sF,IAAA,SACAvV,MAAA,SAAAozB,GACA,IAAA/U,EAAA1L,KACAisE,EAAA9hE,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,GAAAA,UAAA,MACA0lF,EAAA5jB,EAAA4jB,aACAC,EAAA7jB,EAAA6jB,aACAC,EAAA9jB,EAAA8jB,cACA,QAAAV,EAAArvF,MACA,OAAA2J,QAAAE,OAAAm/E,GAAA,WAEA,QAAAD,EAAAtoE,GACA,OAAA9W,QAAAE,OAAA,IAAA8U,UAAA,8EAKA,GAHAkxE,EAAAG,QAAAH,GACAC,EAAAE,QAAAF,GACAC,EAAAC,QAAAD,IACA,IAAAT,EAAAtvF,MACA,OAAA2J,QAAAE,OAAA,IAAA8U,UAAA,8EAEA,QAAAsqE,EAAAxoE,GACA,OAAA9W,QAAAE,OAAA,IAAA8U,UAAA,8EAEA,IAAA21D,EAAAkb,EAAAxvF,MACA+pF,EAAAZ,EAAA1oE,GACAwvE,GAAA,EACAC,EAAAvmF,QAAAC,UACA,WAAAD,QAAA,SAAAC,EAAAC,GACA,SAAAsmF,IAEA,OADAD,EAAAvmF,QAAAC,WACA,IAAAqmF,EACAtmF,QAAAC,UAEAmgF,EAAAgC,cAAAn/E,KAAA,WACA,OAAAwjF,GAAA9b,GAAA1nE,KAAA,SAAAs/D,GACA,IAAA7+E,EAAA6+E,EAAA7+E,MACAsgC,EAAAu+C,EAAAv+C,MACA,IAAAA,IAGAuiE,EAAAzE,EAAA1B,EAAA18F,GAAAie,MAAA,mBAEasB,KAAAujF,GA6Bb,GA3BAE,EAAA3kF,EAAA4oE,EAAA2W,eAAA,SAAAb,IACA,IAAA0F,EACAQ,EAAA,WACA,OAAApH,EAAAzoE,EAAA2pE,KACe,EAAAA,GAEfmG,GAAA,EAAAnG,KAGAiG,EAAA5vE,EAAAspE,EAAAkB,eAAA,SAAAb,IACA,IAAA2F,EACAO,EAAA,WACA,OAAAf,EAAA7jF,EAAA0+E,KACe,EAAAA,GAEfmG,GAAA,EAAAnG,KAGAoG,EAAA9kF,EAAA4oE,EAAA2W,eAAA,YACA,IAAA4E,EACAS,EAAA,WACA,OAAA/E,EAAAxB,KAGAwG,OAGA,IAAA1F,EAAApqE,IAAA,WAAAA,EAAA0nE,OAAA,CACA,IAAAsI,EAAA,IAAA9xE,UAAA,gFACA,IAAAoxE,EACAO,EAAA,WACA,OAAAf,EAAA7jF,EAAA+kF,KACe,EAAAA,GAEfF,GAAA,EAAAE,GAOA,SAAAC,IACA,IAAAC,EAAAT,EACA,OAAAA,EAAAtjF,KAAA,WACA,OAAA+jF,IAAAT,EAAAQ,SAAAl/F,IAGA,SAAA6+F,EAAAhkF,EAAA3C,EAAA+C,GACA,YAAAJ,EAAA87E,OACA17E,EAAAJ,EAAA+7E,cAEA1+E,EAAA4B,MAAAmB,GAAAnB,MAAAk8E,GAGA,SAAAgJ,EAAAnkF,EAAA3C,EAAA+C,GACA,WAAAJ,EAAA87E,OACA17E,IAEA/C,EAAAkD,KAAAH,GAAAnB,MAAAk8E,GAGA,SAAA8I,EAAA7jF,EAAAmkF,EAAAC,GAUA,SAAAC,IACArkF,IAAAG,KAAA,WACA,OAAAvB,EAAAulF,EAAAC,IACe,SAAAE,GACf,OAAA1lF,GAAA,EAAA0lF,KACezlF,MAAAk8E,IAdf,IAAAyI,IAGAA,GAAA,EACA,aAAAxvE,EAAA0nE,SAAA,IAAA0C,EAAApqE,GACAiwE,IAAA9jF,KAAAkkF,GAEAA,KAUA,SAAAP,EAAAS,EAAAxkF,IACA,IAAAyjF,IAGAA,GAAA,EACA,aAAAxvE,EAAA0nE,SAAA,IAAA0C,EAAApqE,GACAiwE,IAAA9jF,KAAA,WACA,OAAAvB,EAAA2lF,EAAAxkF,KACelB,MAAAk8E,GAEfn8E,EAAA2lF,EAAAxkF,IAGA,SAAAnB,EAAA2lF,EAAAxkF,GACAg/E,EAAAzB,GACAkH,GAAA3c,GACA0c,EACAnnF,EAAA2C,GAEA5C,OAAApY,GA7DA2+F,IAAA7kF,MAAA,SAAAi+B,GACA2mD,EAAAvmF,QAAAC,UACA49E,EAAAj+C,UAiEA3mC,IAAA,MACAvV,MAAA,WACA,QAAAgiG,EAAArvF,MACA,MAAAgpF,GAAA,OAEA,IAAAkI,EAAAC,EAAAnxF,MAAA,GACA,OAAAumF,EAAA2K,MAGAtuF,IAAA,SACAhW,IAAA,WACA,QAAAyiG,EAAArvF,MACA,MAAAgpF,GAAA,UAEA,OAAAsG,EAAAtvF,UAGAjS,EAtOA,GAgPA,SAAA0hG,EAAApjF,GACA,WAAA+kF,GAAA/kF,GAEA,SAAAmjF,EAAAnjF,GACA,WAAAglF,GAAAhlF,GAEA,SAAAgjF,EAAAptF,GACA,QAAAokF,EAAApkF,MAGAzV,OAAAS,UAAAC,eAAAjB,KAAAgW,EAAA,6BAKA,SAAAqvF,EAAAjlF,GAEA,OADA7c,GAAA,IAAA6/F,EAAAhjF,GAAA,2EACAA,EAAA2iF,WAEA,SAAAM,EAAAjjF,GAEA,OADA7c,GAAA,IAAA6/F,EAAAhjF,GAAA,6EACA7a,IAAA6a,EAAA2nE,QAKA,SAAAmd,EAAA9kF,EAAAklF,GACA/hG,GAAA,IAAA6/F,EAAAhjF,IACA7c,EAAA,mBAAA+hG,GACA,IAAAjd,EAAAkb,EAAAnjF,GACAmlF,GACAC,iBAAA,EACAC,WAAA,EACAC,WAAA,EACAC,aAAApgG,EACAqgG,aAAArgG,GAEAggG,EAAA9nF,QAAA,IAAAC,QAAA,SAAAC,GACA4nF,EAAAlI,SAAA1/E,IAEA,IAAAmE,EAAA+jF,IACA/jF,EAAAimE,QAAAM,EACAvmE,EAAAgkF,UAAAP,EACAzjF,EAAAikF,iBAAAT,EACA,IAAAU,EAAAC,IACAD,EAAAlkE,QAAA1hB,EACA4lF,EAAAF,UAAAP,EACA,IAAAW,EAAAC,IACAD,EAAApkE,QAAA1hB,EACA8lF,EAAAJ,UAAAP,EACA,IAAAa,EAAA7lG,OAAAoT,OAAApT,OAAAS,WACAq5F,EAAA+L,EAAA,OAAAtkF,GACAu4E,EAAA+L,EAAA,SAAAJ,GACA,IAAAK,EAAA,IAAAvkG,EAAAskG,GACAE,EAAA/lG,OAAAoT,OAAApT,OAAAS,WACAq5F,EAAAiM,EAAA,OAAAxkF,GACAu4E,EAAAiM,EAAA,SAAAJ,GACA,IAAAK,EAAA,IAAAzkG,EAAAwkG,GAWA,OAVAxkF,EAAA0kF,SAAAH,EAAArD,0BACAlhF,EAAA2kF,SAAAF,EAAAvD,0BACA3a,EAAA2W,eAAA3/E,MAAA,SAAAhI,IACA,IAAAkuF,EAAAC,kBAGAkB,GAAA5kF,EAAA0kF,SAAAnvF,GACAqvF,GAAA5kF,EAAA2kF,SAAApvF,GACAkuF,EAAAC,iBAAA,MAEAa,EAAAE,GAEA,SAAAV,IACA,SAAAryE,IACA,IAAA60D,EAAA70D,EAAAu0D,QACA4e,EAAAnzE,EAAAgzE,SACAI,EAAApzE,EAAAizE,SACAlB,EAAA/xE,EAAAsyE,UACA,OAAA3B,GAAA9b,GAAA1nE,KAAA,SAAAlH,GACAlW,EAAA62F,EAAA3gF,IACA,IAAArY,EAAAqY,EAAArY,MACAsgC,EAAAjoB,EAAAioB,KAWA,GAVAn+B,EAAA,mBAAAm+B,IACA,IAAAA,IAAA,IAAA6jE,EAAAC,mBACA,IAAAD,EAAAE,WACAoB,GAAAF,IAEA,IAAApB,EAAAG,WACAmB,GAAAD,GAEArB,EAAAC,iBAAA,IAEA,IAAAD,EAAAC,gBAAA,CAGA,IAAAsB,EAAA1lG,EACA2lG,EAAA3lG,GACA,IAAAmkG,EAAAE,WACAuB,GAAAL,EAAAG,IAEA,IAAAvB,EAAAG,WACAsB,GAAAJ,EAAAG,MAIA,OAAAvzE,EAEA,SAAAyyE,IACA,SAAAzyE,EAAAzU,GACA,IAAAqB,EAAAoT,EAAAsO,QACAyjE,EAAA/xE,EAAAsyE,UAGA,GAFAP,EAAAE,WAAA,EACAF,EAAAI,QAAA5mF,GACA,IAAAwmF,EAAAG,UAAA,CACA,IAAAuB,EAAA3M,GAAAiL,EAAAI,QAAAJ,EAAAK,UACAsB,EAAA5D,EAAAljF,EAAA6mF,GACA1B,EAAAlI,SAAA6J,GAEA,OAAA3B,EAAA9nF,QAEA,OAAA+V,EAEA,SAAA2yE,IACA,SAAA3yE,EAAAzU,GACA,IAAAqB,EAAAoT,EAAAsO,QACAyjE,EAAA/xE,EAAAsyE,UAGA,GAFAP,EAAAG,WAAA,EACAH,EAAAK,QAAA7mF,GACA,IAAAwmF,EAAAE,UAAA,CACA,IAAAwB,EAAA3M,GAAAiL,EAAAI,QAAAJ,EAAAK,UACAsB,EAAA5D,EAAAljF,EAAA6mF,GACA1B,EAAAlI,SAAA6J,GAEA,OAAA3B,EAAA9nF,QAEA,OAAA+V,EAEA,SAAA2zE,EAAA/mF,GACA7c,GAAA,IAAA6jG,GAAAhnF,EAAA2nE,UACAxkF,EAAA,aAAA6c,EAAA87E,QAAA,WAAA97E,EAAA87E,QACA,IAAAz+E,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACA,IAAAypF,GACAhK,SAAA1/E,EACA2/E,QAAA1/E,GAEAwC,EAAA2nE,QAAAuf,kBAAAnyF,KAAAkyF,KAEA,OAAA5pF,EAEA,SAAA8pF,EAAAnnF,GACA7c,GAAA,IAAAikG,GAAApnF,EAAA2nE,UACAxkF,EAAA,aAAA6c,EAAA87E,QACA,IAAAz+E,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACA,IAAA6pF,GACApK,SAAA1/E,EACA2/E,QAAA1/E,GAEAwC,EAAA2nE,QAAA2f,cAAAvyF,KAAAsyF,KAEA,OAAAhqF,EAEA,SAAA6lF,EAAAljF,EAAArB,GAEA,GADAqB,EAAA2iF,YAAA,EACA,WAAA3iF,EAAA87E,OACA,OAAAx+E,QAAAC,aAAApY,GAEA,eAAA6a,EAAA87E,OACA,OAAAx+E,QAAAE,OAAAwC,EAAA+7E,cAEAwL,EAAAvnF,GACA,IAAAwnF,EAAAxnF,EAAA4iF,0BAAA6E,cAAA9oF,GACA,OAAA6oF,EAAAjnF,KAAA,cAIA,SAAAgnF,EAAAvnF,GACA7c,EAAA,aAAA6c,EAAA87E,QACA97E,EAAA87E,OAAA,SACA,IAAA7T,EAAAjoE,EAAA2nE,QACA,QAAAxiF,IAAA8iF,EAAA,CAGA,QAAAmf,GAAAnf,GAAA,CACA,QAAAvoF,EAAA,EAAqBA,EAAAuoF,EAAAqf,cAAAlzF,OAAiC1U,IAAA,CACtD,IAAAu9F,EAAAhV,EAAAqf,cAAA5nG,GAAAu9F,SACAA,EAAA5C,OAAAl1F,GAAA,IAEA8iF,EAAAqf,iBAEAI,GAAAzf,IAGA,SAAA0f,EAAA3nF,EAAApN,GACAzP,GAAA,IAAA6/F,EAAAhjF,GAAA,iCACA7c,EAAA,aAAA6c,EAAA87E,OAAA,0BACA97E,EAAA87E,OAAA,UACA97E,EAAA+7E,aAAAnpF,EACA,IAAAq1E,EAAAjoE,EAAA2nE,QACA,QAAAxiF,IAAA8iF,EAAA,CAGA,QAAAmf,GAAAnf,GAAA,CACA,QAAAvoF,EAAA,EAAqBA,EAAAuoF,EAAAqf,cAAAlzF,OAAiC1U,IAAA,CACtD,IAAA2nG,EAAApf,EAAAqf,cAAA5nG,GACA2nG,EAAAnK,QAAAtqF,GAEAq1E,EAAAqf,qBACK,CACLnkG,EAAA6jG,GAAA/e,GAAA,2CACA,QAAAjqC,EAAA,EAAsBA,EAAAiqC,EAAAif,kBAAA9yF,OAAsC4pC,IAAA,CAC5D,IAAAipD,EAAAhf,EAAAif,kBAAAlpD,GACAipD,EAAA/J,QAAAtqF,GAEAq1E,EAAAif,qBAEAU,GAAA3f,EAAAr1E,GACAq1E,EAAA2W,eAAA3/E,MAAA,eAEA,SAAA4oF,EAAA7nF,EAAAnL,EAAAysB,GACA,IAAA2mD,EAAAjoE,EAAA2nE,QACAxkF,EAAA8kF,EAAAif,kBAAA9yF,OAAA,GACA,IAAA6yF,EAAAhf,EAAAif,kBAAAv9E,QACAs9E,EAAAhK,SAAA5C,EAAAxlF,EAAAysB,IAEA,SAAAwmE,EAAA9nF,EAAAnL,EAAAysB,GACA,IAAA2mD,EAAAjoE,EAAA2nE,QACAxkF,EAAA8kF,EAAAqf,cAAAlzF,OAAA,GACA,IAAAizF,EAAApf,EAAAqf,cAAA39E,QACA09E,EAAApK,SAAA5C,EAAAxlF,EAAAysB,IAEA,SAAAymE,EAAA/nF,GACA,OAAAA,EAAA2nE,QAAAuf,kBAAA9yF,OAEA,SAAA4zF,EAAAhoF,GACA,OAAAA,EAAA2nE,QAAA2f,cAAAlzF,OAEA,SAAA6zF,EAAAjoF,GACA,IAAAioE,EAAAjoE,EAAA2nE,QACA,YAAAxiF,IAAA8iF,IAGA,IAAA+e,GAAA/e,GAKA,SAAAigB,GAAAloF,GACA,IAAAioE,EAAAjoE,EAAA2nE,QACA,YAAAxiF,IAAA8iF,IAGA,IAAAmf,GAAAnf,GAjQA9oF,EAAAC,SACAsC,iBACAujG,4BACAwB,wCACAG,0CACAN,wCACA6B,kDAgQA,IAAAnD,GAAA,WACA,SAAAA,EAAAhlF,GAEA,GADA8mD,EAAAnzD,KAAAqxF,IACA,IAAAhC,EAAAhjF,GACA,UAAAsS,UAAA,sFAEA,QAAA2wE,EAAAjjF,GACA,UAAAsS,UAAA,+EAEA81E,GAAAz0F,KAAAqM,GACArM,KAAA2zF,iBA+CA,OA7CArhC,EAAA++B,IACAzuF,IAAA,SACAvV,MAAA,SAAA2d,GACA,WAAAyoF,GAAAzzF,MACA2J,QAAAE,OAAA6qF,GAAA,gBAEAljG,IAAAwO,KAAA20F,qBACAhrF,QAAAE,OAAA+qF,GAAA,WAEAC,GAAA70F,KAAAgL,MAGApI,IAAA,OACAvV,MAAA,WACA,WAAAomG,GAAAzzF,MACA2J,QAAAE,OAAA6qF,GAAA,cAEAljG,IAAAwO,KAAA20F,qBACAhrF,QAAAE,OAAA+qF,GAAA,cAEAxE,GAAApwF,SAGA4C,IAAA,cACAvV,MAAA,WACA,QAAAomG,GAAAzzF,MACA,MAAA00F,GAAA,eAEA,QAAAljG,IAAAwO,KAAA20F,qBAAA,CAGA,GAAA30F,KAAA2zF,cAAAlzF,OAAA,EACA,UAAAke,UAAA,uFAEAsyE,GAAAjxF,UAGA4C,IAAA,SACAhW,IAAA,WACA,WAAA6mG,GAAAzzF,MACA2J,QAAAE,OAAA6qF,GAAA,WAEA10F,KAAAirF,mBAGAoG,EAzDA,GA2DAD,GAAA,WACA,SAAAA,EAAA/kF,GAEA,GADA8mD,EAAAnzD,KAAAoxF,IACA/B,EAAAhjF,GACA,UAAAsS,UAAA,uGAEA,QAAAm2E,GAAAzoF,EAAA4iF,2BACA,UAAAtwE,UAAA,+FAEA,GAAA2wE,EAAAjjF,GACA,UAAAsS,UAAA,+EAEA81E,GAAAz0F,KAAAqM,GACArM,KAAAuzF,qBAqDA,OAnDAjhC,EAAA8+B,IACAxuF,IAAA,SACAvV,MAAA,SAAA2d,GACA,OAAAqoF,GAAArzF,WAGAxO,IAAAwO,KAAA20F,qBACAhrF,QAAAE,OAAA+qF,GAAA,WAEAC,GAAA70F,KAAAgL,GALArB,QAAAE,OAAAkrF,GAAA,cAQAnyF,IAAA,OACAvV,MAAA,SAAA+qF,GACA,OAAAib,GAAArzF,WAGAxO,IAAAwO,KAAA20F,qBACAhrF,QAAAE,OAAA+qF,GAAA,cAEAI,YAAAC,OAAA7c,GAGA,IAAAA,EAAA32E,WACAkI,QAAAE,OAAA,IAAA8U,UAAA,uCAEAu2E,GAAAl1F,KAAAo4E,GALAzuE,QAAAE,OAAA,IAAA8U,UAAA,sCANAhV,QAAAE,OAAAkrF,GAAA,YAcAnyF,IAAA,cACAvV,MAAA,WACA,IAAAgmG,GAAArzF,MACA,MAAA+0F,GAAA,eAEA,QAAAvjG,IAAAwO,KAAA20F,qBAAA,CAGA,GAAA30F,KAAAuzF,kBAAA9yF,OAAA,EACA,UAAAke,UAAA,uFAEAsyE,GAAAjxF,UAGA4C,IAAA,SACAhW,IAAA,WACA,OAAAymG,GAAArzF,MAGAA,KAAAirF,eAFAthF,QAAAE,OAAAkrF,GAAA,eAKA3D,EAlEA,GAoEA,SAAAiC,GAAApxF,GACA,QAAAokF,EAAApkF,MAGAzV,OAAAS,UAAAC,eAAAjB,KAAAgW,EAAA,qBAKA,SAAAwxF,GAAAxxF,GACA,QAAAokF,EAAApkF,MAGAzV,OAAAS,UAAAC,eAAAjB,KAAAgW,EAAA,iBAKA,SAAAwyF,GAAAngB,EAAAjoE,GACAioE,EAAAqgB,qBAAAtoF,EACAA,EAAA2nE,QAAAM,EACA,aAAAjoE,EAAA87E,OACAgN,GAAA7gB,GACK,WAAAjoE,EAAA87E,OACLiN,GAAA9gB,IAEA9kF,EAAA,YAAA6c,EAAA87E,OAAA,yBACAkN,GAAA/gB,EAAAjoE,EAAA+7E,cACA9T,EAAA2W,eAAA3/E,MAAA,eAGA,SAAAupF,GAAAvgB,EAAAtpE,GACA,IAAAqB,EAAAioE,EAAAqgB,qBAEA,OADAnlG,OAAAgC,IAAA6a,GACAkjF,EAAAljF,EAAArB,GAEA,SAAAimF,GAAA3c,GACA9kF,OAAAgC,IAAA8iF,EAAAqgB,sBACAnlG,EAAA8kF,EAAAqgB,qBAAA3gB,UAAAM,GACA,aAAAA,EAAAqgB,qBAAAxM,OACA8L,GAAA3f,EAAA,IAAA31D,UAAA,qFAEA22E,GAAAhhB,EAAA,IAAA31D,UAAA,qFAEA21D,EAAA2W,eAAA3/E,MAAA,cACAgpE,EAAAqgB,qBAAA3gB,aAAAxiF,EACA8iF,EAAAqgB,0BAAAnjG,EAEA,SAAA0jG,GAAA5gB,EAAA8D,GACA,IAAA/rE,EAAAioE,EAAAqgB,qBAGA,OAFAnlG,OAAAgC,IAAA6a,GACAA,EAAA2iF,YAAA,EACA,YAAA3iF,EAAA87E,OACAx+E,QAAAE,OAAAwC,EAAA+7E,cAEAmN,GAAAlpF,EAAA4iF,0BAAA7W,GAEA,SAAAgY,GAAA9b,GACA,IAAAjoE,EAAAioE,EAAAqgB,qBAGA,OAFAnlG,OAAAgC,IAAA6a,GACAA,EAAA2iF,YAAA,EACA,WAAA3iF,EAAA87E,OACAx+E,QAAAC,QAAA88E,OAAAl1F,GAAA,IAEA,YAAA6a,EAAA87E,OACAx+E,QAAAE,OAAAwC,EAAA+7E,eAEA54F,EAAA,aAAA6c,EAAA87E,QACA97E,EAAA4iF,0BAAAuG,eAEA,IAAApG,GAAA,WACA,SAAAA,EAAA/iF,EAAA0iF,EAAArgF,EAAA24E,GAEA,GADAl0B,EAAAnzD,KAAAovF,IACA,IAAAC,EAAAhjF,GACA,UAAAsS,UAAA,0FAEA,QAAAntB,IAAA6a,EAAA4iF,0BACA,UAAAtwE,UAAA,mGAEA3e,KAAAy1F,0BAAAppF,EACArM,KAAA01F,kBAAA3G,EACA/uF,KAAAstF,YAAA97F,EACAwO,KAAAutF,qBAAA/7F,EACAu2F,EAAA/nF,MACAA,KAAAkqF,UAAA,EACAlqF,KAAA21F,iBAAA,EACA31F,KAAA41F,YAAA,EACA51F,KAAA61F,UAAA,EACA,IAAArI,EAAAjG,EAAA74E,EAAA24E,GACArnF,KAAAytF,cAAAD,EAAA9+E,KACA1O,KAAA0tF,aAAAF,EAAAnG,cACA,IAAA35E,EAAA1N,KACA6tF,EAAAhH,EAAAkI,EAAA,SAAA/uF,OACA2J,QAAAC,QAAAikF,GAAAjhF,KAAA,WACAc,EAAAw8E,UAAA,EACA16F,GAAA,IAAAke,EAAAmoF,UACArmG,GAAA,IAAAke,EAAAkoF,YACAE,GAAApoF,IACO,SAAApK,GACPyyF,GAAAroF,EAAApK,KACOgI,MAAAk8E,GA4EP,OA1EAl1B,EAAA88B,IACAxsF,IAAA,QACAvV,MAAA,WACA,QAAA2oG,GAAAh2F,MACA,MAAAi2F,GAAA,SAEA,QAAAj2F,KAAA21F,gBACA,UAAAh3E,UAAA,8DAEA,IAAAmR,EAAA9vB,KAAAy1F,0BAAAtN,OACA,gBAAAr4D,EACA,UAAAnR,UAAA,kBAAAmR,EAAA,6DAEAgjE,GAAA9yF,SAGA4C,IAAA,UACAvV,MAAA,SAAA6T,GACA,QAAA80F,GAAAh2F,MACA,MAAAi2F,GAAA,WAEA,QAAAj2F,KAAA21F,gBACA,UAAAh3E,UAAA,gCAEA,IAAAmR,EAAA9vB,KAAAy1F,0BAAAtN,OACA,gBAAAr4D,EACA,UAAAnR,UAAA,kBAAAmR,EAAA,kEAEA,OAAAmjE,GAAAjzF,KAAAkB,MAGA0B,IAAA,QACAvV,MAAA,SAAA4R,GACA,QAAA+2F,GAAAh2F,MACA,MAAAi2F,GAAA,SAEA,IAAA5pF,EAAArM,KAAAy1F,0BACA,gBAAAppF,EAAA87E,OACA,UAAAxpE,UAAA,iBAAAtS,EAAA87E,OAAA,6BAEAwK,GAAA3yF,KAAAf,MAGA2D,IAAA,gBACAvV,MAAA,SAAA2d,GAEA,OADA+8E,EAAA/nF,MACA8mF,EAAA9mF,KAAA01F,kBAAA,UAAA1qF,OAGApI,IAAA,cACAvV,MAAA,WACA,IAAAgf,EAAArM,KAAAy1F,0BACA,GAAAz1F,KAAAstF,OAAA7sF,OAAA,GACA,IAAAS,EAAA0mF,EAAA5nF,MAMA,OALA,IAAAA,KAAA21F,iBAAA,IAAA31F,KAAAstF,OAAA7sF,OACAmzF,EAAAvnF,GAEAypF,GAAA91F,MAEA2J,QAAAC,QAAA88E,EAAAxlF,GAAA,IAEA,IAAAg1F,EAAA1C,EAAAnnF,GAEA,OADAypF,GAAA91F,MACAk2F,KAGAtzF,IAAA,cACAhW,IAAA,WACA,QAAAopG,GAAAh2F,MACA,MAAAi2F,GAAA,eAEA,OAAAzB,GAAAx0F,UAGAovF,EA1GA,GA4GA,SAAA4G,GAAA/zF,GACA,QAAAokF,EAAApkF,MAGAzV,OAAAS,UAAAC,eAAAjB,KAAAgW,EAAA,qBAKA,SAAA6zF,GAAApoF,GACA,IAAAyoF,EAAAC,GAAA1oF,GACA,QAAAyoF,EAGA,QAAAzoF,EAAAmoF,SAAA,CAIArmG,GAAA,IAAAke,EAAAkoF,YACAloF,EAAAmoF,UAAA,EACA,IAAAQ,EAAAvP,EAAAp5E,EAAAgoF,kBAAA,QAAAhoF,IACA2oF,EAAAzpF,KAAA,WAEA,GADAc,EAAAmoF,UAAA,GACA,IAAAnoF,EAAAkoF,WAEA,OADAloF,EAAAkoF,YAAA,EACAE,GAAApoF,IAGK,SAAAzO,GACL82F,GAAAroF,EAAAzO,KACKqM,MAAAk8E,QAfL95E,EAAAkoF,YAAA,EAkBA,SAAAQ,GAAA1oF,GACA,IAAArB,EAAAqB,EAAA+nF,0BACA,cAAAppF,EAAA87E,QAAA,YAAA97E,EAAA87E,OACA,SAEA,QAAAz6E,EAAAioF,gBACA,SAEA,QAAAjoF,EAAAw8E,SACA,SAEA,QAAAoF,EAAAjjF,IAAAgoF,EAAAhoF,GAAA,EACA,SAEA,IAAAyB,EAAA0mF,GAAA9mF,GACA,OAAAI,EAAA,EAKA,SAAAglF,GAAAplF,GACA,IAAArB,EAAAqB,EAAA+nF,0BACAjmG,GAAA,IAAAke,EAAAioF,iBACAnmG,EAAA,aAAA6c,EAAA87E,QACAz6E,EAAAioF,iBAAA,EACA,IAAAjoF,EAAA4/E,OAAA7sF,QACAmzF,EAAAvnF,GAGA,SAAA4mF,GAAAvlF,EAAAxM,GACA,IAAAmL,EAAAqB,EAAA+nF,0BAGA,GAFAjmG,GAAA,IAAAke,EAAAioF,iBACAnmG,EAAA,aAAA6c,EAAA87E,SACA,IAAAmH,EAAAjjF,IAAAgoF,EAAAhoF,GAAA,EACA8nF,EAAA9nF,EAAAnL,GAAA,OACK,CACL,IAAA0Z,EAAA,EACA,QAAAppB,IAAAkc,EAAA+/E,cAAA,CACA,IAAAM,EAAArgF,EAAA+/E,cACA,IACA7yE,EAAAmzE,EAAA7sF,GACS,MAAA8sF,GAET,MADA+H,GAAAroF,EAAAsgF,GACAA,GAGA,IACAnG,EAAAn6E,EAAAxM,EAAA0Z,GACO,MAAAuzE,GAEP,MADA4H,GAAAroF,EAAAygF,GACAA,GAGA2H,GAAApoF,GAGA,SAAAilF,GAAAjlF,EAAAzO,GACA,IAAAoN,EAAAqB,EAAA+nF,0BACAjmG,EAAA,aAAA6c,EAAA87E,QACAJ,EAAAr6E,GACAsmF,EAAA3nF,EAAApN,GAEA,SAAA82F,GAAAroF,EAAAzO,GACA,aAAAyO,EAAA+nF,0BAAAtN,QACAwK,GAAAjlF,EAAAzO,GAGA,SAAAu1F,GAAA9mF,GACA,IAAArB,EAAAqB,EAAA+nF,0BACA3lE,EAAAzjB,EAAA87E,OACA,kBAAAr4D,EACA,KAEA,WAAAA,EACA,EAEApiB,EAAAggF,aAAAhgF,EAAA6/E,gBAEA,IAAA+I,GAAA,WACA,SAAAA,EAAA5oF,EAAA0qE,GACAjlB,EAAAnzD,KAAAs2F,GACAt2F,KAAAu2F,wCAAA7oF,EACA1N,KAAAw2F,MAAApe,EAiCA,OA/BA9lB,EAAAgkC,IACA1zF,IAAA,UACAvV,MAAA,SAAAopG,GACA,QAAAC,GAAA12F,MACA,MAAA22F,GAAA,WAEA,QAAAnlG,IAAAwO,KAAAu2F,wCACA,UAAA53E,UAAA,0CAEAi4E,GAAA52F,KAAAu2F,wCAAAE,MAGA7zF,IAAA,qBACAvV,MAAA,SAAA+qF,GACA,QAAAse,GAAA12F,MACA,MAAA22F,GAAA,WAEA,QAAAnlG,IAAAwO,KAAAu2F,wCACA,UAAA53E,UAAA,0CAEA,IAAAq2E,YAAAC,OAAA7c,GACA,UAAAz5D,UAAA,gDAEAk4E,GAAA72F,KAAAu2F,wCAAAne,MAGAx1E,IAAA,OACAhW,IAAA,WACA,OAAAoT,KAAAw2F,UAGAF,EArCA,GAuCAnH,GAAA,WACA,SAAAA,EAAA9iF,EAAAyqF,EAAAzP,GAEA,GADAl0B,EAAAnzD,KAAAmvF,IACA,IAAAE,EAAAhjF,GACA,UAAAsS,UAAA,2GAEA,QAAAntB,IAAA6a,EAAA4iF,0BACA,UAAAtwE,UAAA,oHAEA3e,KAAAy1F,0BAAAppF,EACArM,KAAA+2F,sBAAAD,EACA92F,KAAA41F,YAAA,EACA51F,KAAA61F,UAAA,EACAmB,GAAAh3F,MACAA,KAAAstF,OAAAttF,KAAAutF,qBAAA/7F,EACAu2F,EAAA/nF,MACAA,KAAA21F,iBAAA,EACA31F,KAAAkqF,UAAA,EACAlqF,KAAA0tF,aAAAtG,EAAAC,GACA,IAAA4P,EAAAH,EAAAG,sBACA,QAAAzlG,IAAAylG,KACA,IAAAn5F,OAAAC,UAAAk5F,OAAA,GACA,UAAA3P,WAAA,oDAGAtnF,KAAAk3F,uBAAAD,EACAj3F,KAAAm3F,qBACA,IAAAzpF,EAAA1N,KACA6tF,EAAAhH,EAAAiQ,EAAA,SAAA92F,OACA2J,QAAAC,QAAAikF,GAAAjhF,KAAA,WACAc,EAAAw8E,UAAA,EACA16F,GAAA,IAAAke,EAAAmoF,UACArmG,GAAA,IAAAke,EAAAkoF,YACAwB,GAAA1pF,IACO,SAAApK,GACP,aAAA+I,EAAA87E,QACAkP,GAAA3pF,EAAApK,KAEOgI,MAAAk8E,GAwHP,OAtHAl1B,EAAA68B,IACAvsF,IAAA,QACAvV,MAAA,WACA,QAAAynG,GAAA90F,MACA,MAAAs3F,GAAA,SAEA,QAAAt3F,KAAA21F,gBACA,UAAAh3E,UAAA,8DAEA,IAAAmR,EAAA9vB,KAAAy1F,0BAAAtN,OACA,gBAAAr4D,EACA,UAAAnR,UAAA,kBAAAmR,EAAA,6DAEAynE,GAAAv3F,SAGA4C,IAAA,UACAvV,MAAA,SAAA6T,GACA,QAAA4zF,GAAA90F,MACA,MAAAs3F,GAAA,WAEA,QAAAt3F,KAAA21F,gBACA,UAAAh3E,UAAA,gCAEA,IAAAmR,EAAA9vB,KAAAy1F,0BAAAtN,OACA,gBAAAr4D,EACA,UAAAnR,UAAA,kBAAAmR,EAAA,kEAEA,IAAAklE,YAAAC,OAAA/zF,GACA,UAAAyd,UAAA,qFAEA64E,GAAAx3F,KAAAkB,MAGA0B,IAAA,QACAvV,MAAA,SAAA4R,GACA,QAAA61F,GAAA90F,MACA,MAAAs3F,GAAA,SAEA,IAAAjrF,EAAArM,KAAAy1F,0BACA,gBAAAppF,EAAA87E,OACA,UAAAxpE,UAAA,iBAAAtS,EAAA87E,OAAA,6BAEAkP,GAAAr3F,KAAAf,MAGA2D,IAAA,gBACAvV,MAAA,SAAA2d,GACA,GAAAhL,KAAAm3F,kBAAA12F,OAAA,GACA,IAAAg3F,EAAAz3F,KAAAm3F,kBAAA,GACAM,EAAAC,YAAA,EAGA,OADA3P,EAAA/nF,MACA8mF,EAAA9mF,KAAA+2F,sBAAA,UAAA/rF,OAGApI,IAAA,cACAvV,MAAA,WACA,IAAAgf,EAAArM,KAAAy1F,0BAEA,GADAjmG,GAAA,IAAA+kG,GAAAloF,IACArM,KAAAutF,gBAAA,GACA/9F,EAAA,IAAA6kG,EAAAhoF,IACA,IAAAymC,EAAA9yC,KAAAstF,OAAAt3E,QACAhW,KAAAutF,iBAAAz6C,EAAArxC,WACAk2F,GAAA33F,MACA,IAAAo4E,OAAA,EACA,IACAA,EAAA,IAAA92E,WAAAwxC,EAAAtwC,OAAAswC,EAAA8kD,WAAA9kD,EAAArxC,YACW,MAAAo2F,GACX,OAAAluF,QAAAE,OAAAguF,GAEA,OAAAluF,QAAAC,QAAA88E,EAAAtO,GAAA,IAEA,IAAA6e,EAAAj3F,KAAAk3F,uBACA,QAAA1lG,IAAAylG,EAAA,CACA,IAAAz0F,OAAA,EACA,IACAA,EAAA,IAAAwyF,YAAAiC,GACW,MAAAa,GACX,OAAAnuF,QAAAE,OAAAiuF,GAEA,IAAAC,GACAv1F,SACAo1F,WAAA,EACAn2F,WAAAw1F,EACAS,YAAA,EACAM,YAAA,EACAC,KAAA32F,WACA42F,WAAA,WAEAl4F,KAAAm3F,kBAAA/1F,KAAA22F,GAEA,IAAAruF,EAAA8pF,EAAAnnF,GAEA,OADA+qF,GAAAp3F,MACA0J,KAGA9G,IAAA,cACAhW,IAAA,WACA,QAAAkoG,GAAA90F,MACA,MAAAs3F,GAAA,eAEA,QAAA9lG,IAAAwO,KAAAm4F,cAAAn4F,KAAAm3F,kBAAA12F,OAAA,GACA,IAAAg3F,EAAAz3F,KAAAm3F,kBAAA,GACA/e,EAAA,IAAA92E,WAAAm2F,EAAAj1F,OAAAi1F,EAAAG,WAAAH,EAAAC,YAAAD,EAAAh2F,WAAAg2F,EAAAC,aACA13F,KAAAm4F,aAAA,IAAA7B,GAAAt2F,KAAAo4E,GAEA,OAAAp4E,KAAAm4F,gBAGAv1F,IAAA,cACAhW,IAAA,WACA,QAAAkoG,GAAA90F,MACA,MAAAs3F,GAAA,eAEA,OAAAc,GAAAp4F,UAGAmvF,EA9JA,GAgKA,SAAA2F,GAAA7yF,GACA,QAAAokF,EAAApkF,MAGAzV,OAAAS,UAAAC,eAAAjB,KAAAgW,EAAA,yBAKA,SAAAy0F,GAAAz0F,GACA,QAAAokF,EAAApkF,MAGAzV,OAAAS,UAAAC,eAAAjB,KAAAgW,EAAA,2CAKA,SAAAm1F,GAAA1pF,GACA,IAAAyoF,EAAAkC,GAAA3qF,GACA,QAAAyoF,EAGA,QAAAzoF,EAAAmoF,SAAA,CAIArmG,GAAA,IAAAke,EAAAkoF,YACAloF,EAAAmoF,UAAA,EACA,IAAAQ,EAAAvP,EAAAp5E,EAAAqpF,sBAAA,QAAArpF,IACA2oF,EAAAzpF,KAAA,WACAc,EAAAmoF,UAAA,GACA,IAAAnoF,EAAAkoF,aACAloF,EAAAkoF,YAAA,EACAwB,GAAA1pF,KAEK,SAAAzO,GACL,aAAAyO,EAAA+nF,0BAAAtN,QACAkP,GAAA3pF,EAAAzO,KAEKqM,MAAAk8E,QAhBL95E,EAAAkoF,YAAA,EAmBA,SAAAoB,GAAAtpF,GACA4qF,GAAA5qF,GACAA,EAAAypF,qBAEA,SAAAoB,GAAAlsF,EAAA0rF,GACAvoG,EAAA,YAAA6c,EAAA87E,OAAA,6BACA,IAAAx6D,GAAA,EACA,WAAAthB,EAAA87E,SACA34F,EAAA,IAAAuoG,EAAAL,aACA/pE,GAAA,GAEA,IAAA6qE,EAAAC,GAAAV,GACA,YAAAA,EAAAG,WACA/D,EAAA9nF,EAAAmsF,EAAA7qE,IAEAn+B,EAAA,SAAAuoG,EAAAG,YACAhE,EAAA7nF,EAAAmsF,EAAA7qE,IAGA,SAAA8qE,GAAAV,GACA,IAAAL,EAAAK,EAAAL,YACAM,EAAAD,EAAAC,YAGA,OAFAxoG,EAAAkoG,GAAAK,EAAAt2F,YACAjS,EAAAkoG,EAAAM,IAAA,GACA,IAAAD,EAAAE,KAAAF,EAAAv1F,OAAAu1F,EAAAH,WAAAF,EAAAM,GAEA,SAAAU,GAAAhrF,EAAAlL,EAAAo1F,EAAAn2F,GACAiM,EAAA4/E,OAAAlsF,MACAoB,SACAo1F,aACAn2F,eAEAiM,EAAA6/E,iBAAA9rF,EAEA,SAAAk3F,GAAAjrF,EAAAqqF,GACA,IAAAC,EAAAD,EAAAC,YACAY,EAAAb,EAAAL,YAAAK,EAAAL,YAAAM,EACAa,EAAA73F,KAAAC,IAAAyM,EAAA6/E,gBAAAwK,EAAAt2F,WAAAs2F,EAAAL,aACAoB,EAAAf,EAAAL,YAAAmB,EACAE,EAAAD,IAAAd,EACAgB,EAAAH,EACA/pF,GAAA,EACAiqF,EAAAH,IACAI,EAAAD,EAAAhB,EAAAL,YACA5oF,GAAA,GAEA,IAAA4pB,EAAAhrB,EAAA4/E,OACA,MAAA0L,EAAA,GACA,IAAAC,EAAAvgE,EAAA,GACAwgE,EAAAl4F,KAAAC,IAAA+3F,EAAAC,EAAAx3F,YACA03F,EAAApB,EAAAH,WAAAG,EAAAL,YACAjR,EAAAsR,EAAAv1F,OAAA22F,EAAAF,EAAAz2F,OAAAy2F,EAAArB,WAAAsB,GACAD,EAAAx3F,aAAAy3F,EACAxgE,EAAA1iB,SAEAijF,EAAArB,YAAAsB,EACAD,EAAAx3F,YAAAy3F,GAEAxrF,EAAA6/E,iBAAA2L,EACAE,GAAA1rF,EAAAwrF,EAAAnB,GACAiB,GAAAE,EAOA,OALA,IAAApqF,IACAtf,EAAA,IAAAke,EAAA6/E,gBAAA,uBACA/9F,EAAAuoG,EAAAL,YAAA,GACAloG,EAAAuoG,EAAAL,YAAAK,EAAAC,cAEAlpF,EAEA,SAAAsqF,GAAA1rF,EAAAgB,EAAAqpF,GACAvoG,EAAA,IAAAke,EAAAypF,kBAAA12F,QAAAiN,EAAAypF,kBAAA,KAAAY,GACAO,GAAA5qF,GACAqqF,EAAAL,aAAAhpF,EAEA,SAAAipF,GAAAjqF,GACAle,EAAA,aAAAke,EAAA+nF,0BAAAtN,QACA,IAAAz6E,EAAA6/E,kBAAA,IAAA7/E,EAAAioF,gBACA/B,EAAAlmF,EAAA+nF,2BAEA2B,GAAA1pF,GAGA,SAAA4qF,GAAA5qF,QACAlc,IAAAkc,EAAAyqF,eAGAzqF,EAAAyqF,aAAA5B,6CAAA/kG,EACAkc,EAAAyqF,aAAA3B,WAAAhlG,EACAkc,EAAAyqF,kBAAA3mG,GAEA,SAAA6nG,GAAA3rF,GACAle,GAAA,IAAAke,EAAAioF,iBACA,MAAAjoF,EAAAypF,kBAAA12F,OAAA,GACA,OAAAiN,EAAA6/E,gBACA,OAEA,IAAAwK,EAAArqF,EAAAypF,kBAAA,IACA,IAAAwB,GAAAjrF,EAAAqqF,KACAuB,GAAA5rF,GACA6qF,GAAA7qF,EAAA+nF,0BAAAsC,KAIA,SAAAxC,GAAA7nF,EAAA0qE,GACA,IAAA/rE,EAAAqB,EAAA+nF,0BACAuC,EAAA,EACA5f,EAAAvmF,cAAA0nG,WACAvB,EAAA5f,EAAAvmF,YAAA2nG,mBAEA,IAAAvB,EAAA7f,EAAAvmF,YACAkmG,GACAv1F,OAAA41E,EAAA51E,OACAo1F,WAAAxf,EAAAwf,WACAn2F,WAAA22E,EAAA32E,WACAi2F,YAAA,EACAM,cACAC,OACAC,WAAA,QAEA,GAAAxqF,EAAAypF,kBAAA12F,OAAA,EAGA,OAFAs3F,EAAAv1F,OAAA2kF,EAAA4Q,EAAAv1F,QACAkL,EAAAypF,kBAAA/1F,KAAA22F,GACA3E,EAAA/mF,GAEA,cAAAA,EAAA87E,OAAA,CACA,IAAAsR,EAAA,IAAArhB,EAAAvmF,YAAAkmG,EAAAv1F,OAAAu1F,EAAAH,WAAA,GACA,OAAAjuF,QAAAC,QAAA88E,EAAA+S,GAAA,IAEA,GAAA/rF,EAAA6/E,gBAAA,GACA,QAAAoL,GAAAjrF,EAAAqqF,GAAA,CACA,IAAAS,EAAAC,GAAAV,GAEA,OADAJ,GAAAjqF,GACA/D,QAAAC,QAAA88E,EAAA8R,GAAA,IAEA,QAAA9qF,EAAAioF,gBAAA,CACA,IAAA12F,EAAA,IAAA0f,UAAA,2DAEA,OADA04E,GAAA3pF,EAAAzO,GACA0K,QAAAE,OAAA5K,IAGA84F,EAAAv1F,OAAA2kF,EAAA4Q,EAAAv1F,QACAkL,EAAAypF,kBAAA/1F,KAAA22F,GACA,IAAAruF,EAAA0pF,EAAA/mF,GAEA,OADA+qF,GAAA1pF,GACAhE,EAEA,SAAAgwF,GAAAhsF,EAAA+pF,GACAA,EAAAj1F,OAAA2kF,EAAAsQ,EAAAj1F,QACAhT,EAAA,IAAAioG,EAAAC,YAAA,yBACA,IAAArrF,EAAAqB,EAAA+nF,0BACA,QAAAnB,EAAAjoF,GACA,MAAA+nF,EAAA/nF,GAAA,GACA,IAAA0rF,EAAAuB,GAAA5rF,GACA6qF,GAAAlsF,EAAA0rF,IAIA,SAAA4B,GAAAjsF,EAAA+oF,EAAAsB,GACA,GAAAA,EAAAL,YAAAjB,EAAAsB,EAAAt2F,WACA,UAAA6lF,WAAA,6BAGA,GADA8R,GAAA1rF,EAAA+oF,EAAAsB,KACAA,EAAAL,YAAAK,EAAAC,aAAA,CAGAsB,GAAA5rF,GACA,IAAAksF,EAAA7B,EAAAL,YAAAK,EAAAC,YACA,GAAA4B,EAAA,GACA,IAAAx5F,EAAA23F,EAAAH,WAAAG,EAAAL,YACAn9B,EAAAw9B,EAAAv1F,OAAA0B,MAAA9D,EAAAw5F,EAAAx5F,GACAs4F,GAAAhrF,EAAA6sD,EAAA,EAAAA,EAAA94D,YAEAs2F,EAAAv1F,OAAA2kF,EAAA4Q,EAAAv1F,QACAu1F,EAAAL,aAAAkC,EACArB,GAAA7qF,EAAA+nF,0BAAAsC,GACAsB,GAAA3rF,IAEA,SAAAmsF,GAAAnsF,EAAA+oF,GACA,IAAAgB,EAAA/pF,EAAAypF,kBAAA,GACA9qF,EAAAqB,EAAA+nF,0BACA,cAAAppF,EAAA87E,OAAA,CACA,OAAAsO,EACA,UAAA93E,UAAA,oEAEA+6E,GAAAhsF,EAAA+pF,QAEAjoG,EAAA,aAAA6c,EAAA87E,QACAwR,GAAAjsF,EAAA+oF,EAAAgB,GAGA,SAAA6B,GAAA5rF,GACA,IAAA+kD,EAAA/kD,EAAAypF,kBAAAnhF,QAEA,OADAsiF,GAAA5qF,GACA+kD,EAEA,SAAA4lC,GAAA3qF,GACA,IAAArB,EAAAqB,EAAA+nF,0BACA,mBAAAppF,EAAA87E,UAGA,IAAAz6E,EAAAioF,mBAGA,IAAAjoF,EAAAw8E,YAGA,IAAAqK,GAAAloF,IAAAgoF,EAAAhoF,GAAA,KAGA,IAAAioF,EAAAjoF,IAAA+nF,EAAA/nF,GAAA,GAGA+rF,GAAA1qF,GAAA,MAKA,SAAA6pF,GAAA7pF,GACA,IAAArB,EAAAqB,EAAA+nF,0BAGA,GAFAjmG,GAAA,IAAAke,EAAAioF,iBACAnmG,EAAA,aAAA6c,EAAA87E,QACAz6E,EAAA6/E,gBAAA,EACA7/E,EAAAioF,iBAAA,MADA,CAIA,GAAAjoF,EAAAypF,kBAAA12F,OAAA,GACA,IAAAq5F,EAAApsF,EAAAypF,kBAAA,GACA,GAAA2C,EAAApC,YAAA,GACA,IAAAz4F,EAAA,IAAA0f,UAAA,2DAEA,MADA04E,GAAA3pF,EAAAzO,GACAA,GAGA20F,EAAAvnF,IAEA,SAAAmrF,GAAA9pF,EAAAxM,GACA,IAAAmL,EAAAqB,EAAA+nF,0BACAjmG,GAAA,IAAAke,EAAAioF,iBACAnmG,EAAA,aAAA6c,EAAA87E,QACA,IAAA3lF,EAAAtB,EAAAsB,OACAo1F,EAAA12F,EAAA02F,WACAn2F,EAAAP,EAAAO,WACAs4F,EAAA5S,EAAA3kF,GACA,QAAA+xF,GAAAloF,GACA,OAAAgoF,EAAAhoF,GACAqsF,GAAAhrF,EAAAqsF,EAAAnC,EAAAn2F,OACO,CACPjS,EAAA,IAAAke,EAAA4/E,OAAA7sF,QACA,IAAAu5F,EAAA,IAAA14F,WAAAy4F,EAAAnC,EAAAn2F,GACA0yF,EAAA9nF,EAAA2tF,GAAA,QAEK,IAAA1F,EAAAjoF,IACLqsF,GAAAhrF,EAAAqsF,EAAAnC,EAAAn2F,GACA43F,GAAA3rF,KAEAle,GAAA,IAAA8/F,EAAAjjF,GAAA,6BACAqsF,GAAAhrF,EAAAqsF,EAAAnC,EAAAn2F,IAGA,SAAA41F,GAAA3pF,EAAAzO,GACA,IAAAoN,EAAAqB,EAAA+nF,0BACAjmG,EAAA,aAAA6c,EAAA87E,QACA6O,GAAAtpF,GACAq6E,EAAAr6E,GACAsmF,EAAA3nF,EAAApN,GAEA,SAAAm5F,GAAA1qF,GACA,IAAArB,EAAAqB,EAAA+nF,0BACA3lE,EAAAzjB,EAAA87E,OACA,kBAAAr4D,EACA,KAEA,WAAAA,EACA,EAEApiB,EAAAggF,aAAAhgF,EAAA6/E,gBAEA,SAAAqJ,GAAAlpF,EAAA+oF,GAEA,GADAA,EAAA34F,OAAA24F,IACA,IAAA9P,EAAA8P,GACA,UAAAnP,WAAA,iCAEA93F,EAAAke,EAAAypF,kBAAA12F,OAAA,GACAo5F,GAAAnsF,EAAA+oF,GAEA,SAAAI,GAAAnpF,EAAA0qE,GACA5oF,EAAAke,EAAAypF,kBAAA12F,OAAA,GACA,IAAAg3F,EAAA/pF,EAAAypF,kBAAA,GACA,GAAAM,EAAAG,WAAAH,EAAAC,cAAAtf,EAAAwf,WACA,UAAAtQ,WAAA,2DAEA,GAAAmQ,EAAAh2F,aAAA22E,EAAA32E,WACA,UAAA6lF,WAAA,8DAEAmQ,EAAAj1F,OAAA41E,EAAA51E,OACAq3F,GAAAnsF,EAAA0qE,EAAA32E,YAEA,SAAAunF,GAAA38F,GACA,WAAAsyB,UAAA,4BAAAtyB,EAAA,yCAEA,SAAAuoG,GAAAvoG,GACA,WAAAsyB,UAAA,UAAAtyB,EAAA,qCAEA,SAAAqoG,GAAAroG,GACA,WAAAsyB,UAAA,yCAAAtyB,EAAA,sDAEA,SAAA8oG,GAAA7gB,GACAA,EAAA2W,eAAA,IAAAthF,QAAA,SAAAC,EAAAC,GACAyqE,EAAAka,uBAAA5kF,EACA0qE,EAAAma,sBAAA5kF,IAGA,SAAAwrF,GAAA/gB,EAAAtpE,GACAspE,EAAA2W,eAAAthF,QAAAE,OAAAmB,GACAspE,EAAAka,4BAAAh9F,EACA8iF,EAAAma,2BAAAj9F,EAEA,SAAA4jG,GAAA9gB,GACAA,EAAA2W,eAAAthF,QAAAC,aAAApY,GACA8iF,EAAAka,4BAAAh9F,EACA8iF,EAAAma,2BAAAj9F,EAEA,SAAAyiG,GAAA3f,EAAAtpE,GACAxb,OAAAgC,IAAA8iF,EAAAka,wBACAh/F,OAAAgC,IAAA8iF,EAAAma,uBACAna,EAAAma,sBAAAzjF,GACAspE,EAAAka,4BAAAh9F,EACA8iF,EAAAma,2BAAAj9F,EAEA,SAAA8jG,GAAAhhB,EAAAtpE,GACAxb,OAAAgC,IAAA8iF,EAAAka,wBACAh/F,OAAAgC,IAAA8iF,EAAAma,uBACAna,EAAA2W,eAAAthF,QAAAE,OAAAmB,GAEA,SAAA+oF,GAAAzf,GACA9kF,OAAAgC,IAAA8iF,EAAAka,wBACAh/F,OAAAgC,IAAA8iF,EAAAma,uBACAna,EAAAka,4BAAAh9F,GACA8iF,EAAAka,4BAAAh9F,EACA8iF,EAAAma,2BAAAj9F,EAEA,SAAAujG,GAAA1oG,GACA,WAAAsyB,UAAA,sCAAAtyB,EAAA,mDAEA,SAAA4pG,GAAA5pG,GACA,WAAAsyB,UAAA,6CAAAtyB,EAAA,0DAEA,SAAAsqG,GAAAtqG,GACA,WAAAsyB,UAAA,uCAAAtyB,EAAA,oDAEA,SAAAirG,GAAAjrG,GACA,WAAAsyB,UAAA,0CAAAtyB,EAAA,uDAEA,SAAAujG,GAAAlmF,GACA,IACAC,QAAA1c,UAAA2f,KAAA3gB,KAAAyd,OAAAlY,EAAA,cACK,MAAAyN,OAEJ,SAAAzT,EAAAC,EAAAI,GAGD,IAAAouG,EAAApuG,EAAA,GACAkoF,EAAAloF,EAAA,GACAquG,EAAAruG,EAAA,GACAJ,EAAA0uG,gBAAAF,EAAAE,gBACA1uG,EAAAsC,eAAAgmF,EAAAhmF,eACAtC,EAAA6lG,0BAAAvd,EAAAud,0BACA7lG,EAAAqnG,qCAAA/e,EAAA+e,qCACArnG,EAAAwnG,uCAAAlf,EAAAkf,uCACAxnG,EAAAknG,qCAAA5e,EAAA4e,qCACAlnG,EAAA+oG,8CAAAzgB,EAAAygB,8CACA/oG,EAAA09F,mCAAA+Q,EAAA/Q,mCACA19F,EAAAs9F,iBAAAmR,EAAAnR,iBACAt9F,EAAAw9F,uBAAAiR,EAAAjR,uBACAx9F,EAAAu8F,eAAAkS,EAAAlS,eACAv8F,EAAAy9F,oBAAAgR,EAAAhR,oBACAz9F,EAAA6/F,qCAAA4O,EAAA5O,qCACA7/F,EAAA8/F,qDAAA2O,EAAA3O,qDACA9/F,EAAA+/F,mCAAA0O,EAAA1O,mCACA//F,EAAAggG,iCAAAyO,EAAAzO,kCACC,SAAAjgG,EAAAC,EAAAI,GAGD,IAAAymE,EAAA,WACA,SAAAC,EAAAt0C,EAAAu0C,GACA,QAAAzmE,EAAA,EAAqBA,EAAAymE,EAAA/xD,OAAkB1U,IAAA,CACvC,IAAA0mE,EAAAD,EAAAzmE,GACA0mE,EAAA9lE,WAAA8lE,EAAA9lE,aAAA,EACA8lE,EAAA/lE,cAAA,EACA,UAAA+lE,MAAAhzD,UAAA,GACAjT,OAAAC,eAAAwxB,EAAAw0C,EAAA7vD,IAAA6vD,IAGA,gBAAAh9B,EAAAi9B,EAAAC,GAGA,OAFAD,GAAAH,EAAA98B,EAAAxoC,UAAAylE,GACAC,GAAAJ,EAAA98B,EAAAk9B,GACAl9B,GAbA,GAgBA,SAAA09B,EAAAC,EAAA39B,GACA,KAAA29B,aAAA39B,GACA,UAAA9W,UAAA,qCAGA,IAAAqnE,EAAAn6F,EAAA,GACA2D,EAAAw2F,EAAAx2F,OACAk4F,EAAA77F,EAAA,GACAg7F,EAAAa,EAAAb,aACAG,EAAAU,EAAAV,+BACAF,EAAAY,EAAAZ,oBACAT,EAAAqB,EAAArB,aACAsB,EAAA97F,EAAA,GACAkC,EAAA45F,EAAA55F,eACA+kG,EAAAnL,EAAAmL,qCACAG,EAAAtL,EAAAsL,uCACAN,EAAAhL,EAAAgL,qCACA6B,EAAA7M,EAAA6M,8CACA3F,EAAAhjG,EAAA,GACAm8F,EAAA6G,EAAA7G,eACAsD,EAAAuD,EAAAvD,qCACA,SAAA8O,EAAAH,GACA,QAAAA,EAAAI,SACA,UAAA17E,UAAA,sCAEA,QAAAs7E,EAAAK,gBACA,UAAA37E,UAAA,mCAEA47E,EAAAN,GAEA,SAAAO,EAAAP,EAAA/4F,GACA,QAAA+4F,EAAAI,SACA,UAAA17E,UAAA,sCAEA,QAAAs7E,EAAAK,gBACA,UAAA37E,UAAA,mCAEA,IAAAjR,EAAAusF,EAAAQ,oBACA,IACAxH,EAAAvlF,EAAAxM,GACK,MAAAjC,GAGL,MAFAg7F,EAAAK,iBAAA,EACAI,EAAAT,EAAAh7F,GACAg7F,EAAA7R,aAEA,IAAAt6E,EAAA0mF,EAAA9mF,GACAitF,EAAA7sF,GAAA,GACA,IAAA6sF,IAAA,IAAAV,EAAArR,eACAgS,EAAAX,GAAA,GAGA,SAAAY,EAAAZ,EAAAh7F,GACA,QAAAg7F,EAAAI,SACA,UAAA17E,UAAA,sCAEAm8E,EAAAb,EAAAh7F,GAEA,SAAAs7F,EAAAN,GACAzqG,GAAA,IAAAyqG,EAAAI,UACA7qG,GAAA,IAAAyqG,EAAAK,iBACA,IACAxH,EAAAmH,EAAAQ,qBACK,MAAAx7F,GACLzP,GAAA,GAEAyqG,EAAAK,iBAAA,EAEA,SAAAI,EAAAT,EAAAh7F,IACA,IAAAg7F,EAAAI,UACAS,EAAAb,EAAAh7F,GAGA,SAAA67F,EAAAb,EAAAh7F,GACAzP,GAAA,IAAAyqG,EAAAI,UACAJ,EAAAI,UAAA,EACAJ,EAAA7R,aAAAnpF,GACA,IAAAg7F,EAAAc,eACAzP,EAAA2O,EAAAe,oBAAA/7F,IAEA,IAAAg7F,EAAAK,iBACA3H,EAAAsH,EAAAQ,oBAAAx7F,GAGA,SAAAg8F,EAAAhB,GAEA,OADAzqG,OAAAgC,IAAAyoG,EAAAiB,2BAAA,4DACA,IAAAjB,EAAArR,cACAj/E,QAAAC,WAEApa,GAAA,IAAAyqG,EAAArR,cAAA,8CACAqR,EAAAiB,4BAEA,SAAAN,EAAAX,EAAA9O,GACA37F,EAAAyqG,EAAArR,gBAAAuC,EAAA,4FACA35F,IAAAyoG,EAAAiB,4BACAjB,EAAAkB,mCAAAhQ,GAEA8O,EAAAiB,2BAAA,IAAAvxF,QAAA,SAAAC,GACAqwF,EAAAkB,mCAAAvxF,IAEAqwF,EAAAiB,2BAAAtuF,KAAA,SAAAwyC,GACA5vD,EAAA4vD,IAAA+rC,EAAA,sFAEA8O,EAAArR,cAAAuC,EAEA,SAAAiQ,EAAAl6F,EAAAm6F,GACA,IAAApB,EAAAoB,EAAAC,2BAEA,OADAd,EAAAP,EAAA/4F,GACAyI,QAAAC,UAEA,SAAA2xF,EAAAtB,EAAA/4F,GACA1R,GAAA,IAAAyqG,EAAAI,UACA7qG,GAAA,IAAAyqG,EAAAuB,eACAhsG,GAAA,IAAAyqG,EAAArR,eACAqR,EAAAuB,eAAA,EACA,IAAAC,EAAAxB,EAAAyB,aACAhuF,EAAAusF,EAAA0B,2BACAC,EAAA5U,EAAAyU,EAAA,aAAAv6F,EAAAwM,GAAA0tF,GAAAl6F,EAAAwM,IACA,OAAAkuF,EAAAhvF,KAAA,WAEA,OADAqtF,EAAAuB,eAAA,EACAP,EAAAhB,IACK,SAAAh7F,GAEL,OADAy7F,EAAAT,EAAAh7F,GACA0K,QAAAE,OAAA5K,KAGA,SAAA48F,EAAA55F,GACA,QAAAokF,EAAApkF,MAGAzV,OAAAS,UAAAC,eAAAjB,KAAAgW,EAAA,8BAKA,SAAA65F,EAAA75F,GACA,QAAAokF,EAAApkF,MAGAzV,OAAAS,UAAAC,eAAAjB,KAAAgW,EAAA,8BAKA,IAAA85F,EAAA,WACA,SAAAA,EAAA9B,EAAA+B,GACA7oC,EAAAnzD,KAAA+7F,GACA/7F,KAAAi8F,iBAAAhC,EACAj6F,KAAAk8F,cAAAF,EA6CA,OA3CA1pC,EAAAypC,IACAn5F,IAAA,QACAvV,MAAA,SAAAlB,GACA,IAAA8tG,EAAAj6F,KAAAi8F,iBAEA,OADAhC,EAAAe,oBAAA7uG,EACA6T,KAAAk8F,cAAAtvF,KAAA,WACA,OAAAquF,EAAAhB,QAIAr3F,IAAA,QACAvV,MAAA,SAAA6T,GACA,IAAA+4F,EAAAj6F,KAAAi8F,iBACA,OAAAV,EAAAtB,EAAA/4F,MAGA0B,IAAA,QACAvV,MAAA,WACA,IAAA4sG,EAAAj6F,KAAAi8F,iBACAhC,EAAAc,eAAA,EACAD,EAAAb,EAAA,IAAAt7E,UAAA,6BAGA/b,IAAA,QACAvV,MAAA,WACA,IAAA4sG,EAAAj6F,KAAAi8F,iBACAzsG,GAAA,IAAAyqG,EAAAuB,eACAvB,EAAAc,eAAA,EACA,IAAAoB,EAAArV,EAAAmT,EAAAyB,aAAA,SAAAzB,EAAA0B,6BACA,OAAAQ,EAAAvvF,KAAA,WACA,WAAAqtF,EAAAI,SACA1wF,QAAAE,OAAAowF,EAAA7R,gBAEA,IAAA6R,EAAAK,iBACAC,EAAAN,GAEAtwF,QAAAC,aACS0B,MAAA,SAAAhI,GAET,OADAo3F,EAAAT,EAAA32F,GACAqG,QAAAE,OAAAowF,EAAA7R,oBAIA2T,EAjDA,GAmDAK,EAAA,WACA,SAAAA,EAAAnC,EAAA+B,GACA7oC,EAAAnzD,KAAAo8F,GACAp8F,KAAAi8F,iBAAAhC,EACAj6F,KAAAk8F,cAAAF,EAiCA,OA/BA1pC,EAAA8pC,IACAx5F,IAAA,QACAvV,MAAA,SAAAlB,GACA,IAAA8tG,EAAAj6F,KAAAi8F,iBAEA,OADAhC,EAAAQ,oBAAAtuG,EACA6T,KAAAk8F,cAAAtvF,KAAA,WAEA,OADApd,OAAAgC,IAAAyoG,EAAAiB,2BAAA,4DACA,IAAAjB,EAAArR,cACAj/E,QAAAC,WAEApa,GAAA,IAAAyqG,EAAArR,cAAA,8CACAqR,EAAAiB,iCAIAt4F,IAAA,OACAvV,MAAA,WACA,IAAA4sG,EAAAj6F,KAAAi8F,iBAIA,OAHAzsG,GAAA,IAAAyqG,EAAArR,cAAA,8DACAp5F,OAAAgC,IAAAyoG,EAAAiB,2BAAA,2DACAN,EAAAX,GAAA,GACAA,EAAAiB,8BAGAt4F,IAAA,SACAvV,MAAA,WACA,IAAA4sG,EAAAj6F,KAAAi8F,iBACAhC,EAAAK,iBAAA,EACAQ,EAAAb,EAAA,IAAAt7E,UAAA,+BAGAy9E,EArCA,GAuCAC,EAAA,WACA,SAAAA,EAAApC,GAEA,GADA9mC,EAAAnzD,KAAAq8F,IACA,IAAAP,EAAA7B,GACA,UAAAt7E,UAAA,4FAEA,QAAAntB,IAAAyoG,EAAA0B,2BACA,UAAAh9E,UAAA,qGAEA3e,KAAAs7F,2BAAArB,EAqCA,OAnCA3nC,EAAA+pC,IACAz5F,IAAA,UACAvV,MAAA,SAAA6T,GACA,QAAA26F,EAAA77F,MACA,MAAAi2F,EAAA,WAEAuE,EAAAx6F,KAAAs7F,2BAAAp6F,MAGA0B,IAAA,QACAvV,MAAA,WACA,QAAAwuG,EAAA77F,MACA,MAAAi2F,EAAA,SAEAmE,EAAAp6F,KAAAs7F,+BAGA14F,IAAA,QACAvV,MAAA,SAAA2d,GACA,QAAA6wF,EAAA77F,MACA,MAAAi2F,EAAA,SAEA4E,EAAA76F,KAAAs7F,2BAAAtwF,MAGApI,IAAA,cACAhW,IAAA,WACA,QAAAivG,EAAA77F,MACA,MAAAi2F,EAAA,eAEA,IAAAgE,EAAAj6F,KAAAs7F,2BACAgB,EAAArC,EAAAQ,oBACA,OAAAjG,EAAA8H,OAGAD,EA9CA,GAgDAlC,EAAA,WACA,SAAAA,IACA,IAAAsB,EAAAtxF,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,GAAAA,UAAA,MACAgpD,EAAAnzD,KAAAm6F,GACAn6F,KAAA07F,aAAAD,EACA,IAAAc,EAAAd,EAAAc,iBACAC,EAAAf,EAAAe,iBACAx8F,KAAAw7F,eAAA,EACAx7F,KAAAq6F,UAAA,EACAr6F,KAAAooF,kBAAA52F,EACAwO,KAAAg7F,yBAAAxpG,EACAwO,KAAAy6F,yBAAAjpG,EACAwO,KAAA27F,gCAAAnqG,EACAwO,KAAA+6F,eAAA,EACA/6F,KAAAs6F,iBAAA,EACAt6F,KAAA4oF,mBAAAp3F,EACAwO,KAAAk7F,gCAAA1pG,EACAwO,KAAAm7F,wCAAA3pG,EACAwO,KAAA27F,2BAAA,IAAAU,EAAAr8F,MACA,IAAAy8F,OAAA,EACAT,EAAA,IAAAryF,QAAA,SAAAC,GACA6yF,EAAA7yF,IAEA0R,EAAA,IAAA8gF,EAAAp8F,KAAAg8F,GACAh8F,KAAA08F,UAAA,IAAA3uG,EAAAutB,EAAAihF,GACA,IAAAxjB,EAAA,IAAAgjB,EAAA/7F,KAAAg8F,GACAh8F,KAAA28F,UAAA,IAAA3U,EAAAjP,EAAAyjB,GACAhtG,OAAAgC,IAAAwO,KAAAg7F,qBACAxrG,OAAAgC,IAAAwO,KAAAy6F,qBACA,IAAA3sF,EAAA0mF,EAAAx0F,KAAAy6F,qBACAG,EAAA56F,KAAA8N,GAAA,GACA,IAAAmsF,EAAAj6F,KACA6tF,EAAAhH,EAAA4U,EAAA,SAAAxB,EAAA0B,6BACAc,EAAA5O,GACAmO,EAAA1wF,MAAA,SAAArM,IACA,IAAAg7F,EAAAI,WACAJ,EAAAI,UAAA,EACAJ,EAAA7R,aAAAnpF,KAqBA,OAjBAqzD,EAAA6nC,IACAv3F,IAAA,WACAhW,IAAA,WACA,QAAAkvG,EAAA97F,MACA,MAAAgpF,EAAA,YAEA,OAAAhpF,KAAA08F,aAGA95F,IAAA,WACAhW,IAAA,WACA,QAAAkvG,EAAA97F,MACA,MAAAgpF,EAAA,YAEA,OAAAhpF,KAAA28F,cAGAxC,EA1DA,GA6DA,SAAAlE,EAAA5pG,GACA,WAAAsyB,UAAA,8CAAAtyB,EAAA,2DAEA,SAAA28F,EAAA38F,GACA,WAAAsyB,UAAA,6BAAAtyB,EAAA,0CALAb,EAAAC,SAAoB0uG,oBAOnB,SAAA3uG,EAAAC,EAAAI,GACDL,EAAAC,QAAAI,EAAA,QAKA,SAAAL,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAgrF,kBAAAhrF,EAAA4qF,qBAAA7kF,EAEA,IAAA4iB,EAAAvoB,EAAA,GAEA0+C,EAAA1+C,EAAA,IAEA+wG,EAAA/wG,EAAA,KAEAkiC,EAAAliC,EAAA,GAEAgxG,EAAA,WACA,SAAAA,KACA,EAAAzoF,EAAA9mB,aAAA,wCA0DA,OAxDAuvG,EAAA5vG,WACAsoF,YACA,OAAAv1E,KAAA88F,QAEA1qD,eACA,OAAApyC,KAAA46E,WAEAzuC,iBACA,IAAAA,EAAA,KACA,GAAAnsC,KAAA+8F,YAAA,CACA,IAAAz9F,GAAA,EAAA8U,EAAA7lB,wBAAAyR,KAAA+8F,aACAz9F,EACA6sC,EAAA7sC,EAAAgyC,MAEA,EAAAl9B,EAAA7mB,MAAA,iCAAAyS,KAAA+8F,YAAA,MAGA,SAAA3oF,EAAAvmB,QAAAmS,KAAA,aAAAmsC,IAEA7E,eAAA,WACA,UAAAlzB,EAAA/jB,yBAEA0lF,UAAA,SAAAv2E,EAAAmJ,GACA,OAAA3I,KAAA83E,OAAA93E,KAAAs4E,YAAA94E,EAAAmJ,IAEAq0F,WAAA,SAAAx9F,EAAAmJ,GACA,OAAA3I,KAAA83E,OAAA93E,KAAAs4E,YAAAloE,KAAA5Q,EAAAmJ,IAEA4vE,cAAA,SAAA/4E,EAAAmJ,GACA,OAAA3I,KAAA83E,OAAA93E,KAAAs4E,YAAAD,QAAA74E,EAAAmJ,IAEA4mC,QAAA,SAAA7S,GACA,OAAA18B,KAAAs4E,YAAA/oC,QAAA7S,IAEAyS,QAAA,WACA,OAAAnvC,KAAAs4E,YAAAnpC,WAEA2oC,OAAA,SAAAlmF,EAAA4N,EAAAmJ,GACA,WAAAyL,EAAA/jB,yBAEAo4C,aAAA,SAAAtoC,EAAAC,GACA,WAAAgU,EAAA/jB,yBAEAgnF,oBAAA,WACA,WAAAjjE,EAAA/jB,yBAEAqmF,oBAAA,SAAAx1E,GACA,WAAAkT,EAAA/jB,yBAEA8mF,eAAA,SAAA/kC,GACApyC,KAAA46E,UAAAxoC,GAEAihC,UAAA,WACA,WAAAj/D,EAAA/jB,0BAGAwsG,EA5DA,GA8DAxmB,EAAA,WACA,SAAAA,EAAAd,EAAAxzE,EAAAqwC,EAAA+jC,EAAAhqC,GACAnsC,KAAA88F,OAAAvnB,EACAv1E,KAAA46E,UAAAxoC,EACApyC,KAAA+8F,YAAA5wD,EACAnsC,KAAAm2E,mBACA,IAAA9pE,EAAA,IAAA0hB,EAAApa,OAAA5R,GACA/B,KAAAs4E,YAAA,IAAAskB,EAAAK,YAAAj9F,KAAAqM,GACArM,KAAAqnC,yBAAA,EAAAjzB,EAAA/kB,2BACA2Q,KAAAqnC,wBAAAz9B,QAAAyC,GA4BA,OA1BA+H,EAAAvkB,KAAA8W,QAAA0vE,EAAAwmB,GACA/kB,OAAA,SAAAlmF,EAAA4N,EAAAmJ,GACA,WAAAgB,QAAA,SAAAC,EAAAC,GACA,IACA,IACAnE,EADArY,EAAAuE,EAAA4N,GAGAkG,EADA,oBAAArY,EACAA,EAAAwT,MAAAjP,EAAA+W,GAEAtb,EAEAuc,EAAAlE,GACS,MAAAzG,GACT4K,EAAA5K,OAIAwpC,aAAA,SAAAtoC,EAAAC,GACA,OAAAuJ,QAAAC,WAEAytE,oBAAA,aACA/vC,eAAA,WACA,OAAAtnC,KAAAqnC,wBAAA39B,SAEA2pE,UAAA,eAEAgD,EArCA,GAuCAI,EAAA,WACA,SAAAA,EAAAlB,EAAA3uC,EAAAj+B,EAAAwtE,EAAAhqC,GACAnsC,KAAA88F,OAAAvnB,EACAv1E,KAAA46E,UAAAjyE,EAAAypC,SACApyC,KAAA+8F,YAAA5wD,EACAnsC,KAAA+mC,WAAAp+B,EAAAo+B,WACA/mC,KAAAm2E,mBACA,IAAAp9D,GACAguB,WAAAp+B,EAAAo+B,WACA3nC,IAAAuJ,EAAAvJ,IACAqB,OAAAkI,EAAAlI,OACAqmC,iBAAAn+B,EAAAm+B,iBACAD,eAAAl+B,EAAAk+B,gBAEA7mC,KAAA61C,cAAA,IAAAtL,EAAApF,qBAAAyB,EAAA7tB,GACA/Y,KAAAs4E,YAAA,IAAAskB,EAAAK,YAAAj9F,UAAA61C,cAAArN,aA2CA,OAzCAp0B,EAAAvkB,KAAA8W,QAAA8vE,EAAAomB,GACA/kB,OAAA,SAAAlmF,EAAA4N,EAAAmJ,GACA,IAAA+hC,EAAA1qC,KACA,WAAA2J,QAAA,SAAAC,EAAAC,GACA,SAAAqzF,IACA,IACA,IAAAx3F,EACArY,EAAAuE,EAAA4N,GAEAkG,EADA,oBAAArY,EACAA,EAAAwT,MAAAjP,EAAA+W,GAEAtb,EAEAuc,EAAAlE,GACW,MAAAzG,GACX,KAAAA,aAAAmV,EAAA5jB,sBAEA,YADAqZ,EAAA5K,GAGAyrC,EAAAmL,cAAApN,aAAAxpC,EAAAkB,MAAAlB,EAAAmB,KAAAwM,KAAAswF,EAAArzF,IAGAqzF,OAGAz0D,aAAA,SAAAtoC,EAAAC,GACA,OAAAJ,KAAA61C,cAAApN,aAAAtoC,EAAAC,IAEAi3E,oBAAA,WACAr3E,KAAA61C,cAAA7N,oBAEA0uC,oBAAA,SAAAx1E,GACAlB,KAAA61C,cAAA/P,eAAwC5kC,WAExComC,eAAA,WACA,OAAAtnC,KAAA61C,cAAAvO,kBAEA+rC,UAAA,WACArzE,KAAA61C,cAAArM,WAGAitC,EA1DA,GA4DAhrF,EAAA4qF,kBACA5qF,EAAAgrF,qBAIA,SAAAjrF,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAwxG,YAAAxxG,EAAA0xG,UAAA3rG,EAEA,IAAAs4C,EAAA,WAAkC,SAAAC,EAAAvoC,EAAAzV,GAAiC,IAAAi+C,KAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAA34C,EAAoB,IAAM,QAAA44C,EAAAC,EAAA7oC,EAAA9P,OAAAC,cAA0Cs4C,GAAAG,EAAAC,EAAA3c,QAAAC,MAA+Bsc,GAAA,EAAkC,GAArBD,EAAA5oC,KAAAgpC,EAAA/8C,OAAqBtB,GAAAi+C,EAAAvpC,SAAA1U,EAAA,MAAuC,MAAAw9C,GAAcW,GAAA,EAAWC,EAAAZ,EAAY,QAAU,KAAMU,GAAAI,EAAA,WAAAA,EAAA,YAA2C,QAAU,GAAAH,EAAA,MAAAC,GAAsB,OAAAH,EAAe,gBAAAxoC,EAAAzV,GAA2B,GAAAsa,MAAA4K,QAAAzP,GAA0B,OAAAA,EAAc,GAAA9P,OAAAC,YAAAnF,OAAAgV,GAA2C,OAAAuoC,EAAAvoC,EAAAzV,GAAuC,UAAA4yB,UAAA,yDAAjkB,GAEAy+E,EAAAvxG,EAAA,IAEAwoB,EAAAxoB,EAAA,GAEAuoB,EAAAvoB,EAAA,GAEAkiC,EAAAliC,EAAA,GAEAwxG,EAAAxxG,EAAA,KAEA2+C,EAAA3+C,EAAA,IAEAy+C,EAAAz+C,EAAA,IAEAyxG,EAAAzxG,EAAA,IAEA0xG,EAAA1xG,EAAA,KAEA2xG,EAAA3xG,EAAA,IAEAsxG,EAAA,WACA,IAAAM,EAAA,EACAC,GAAA,aACA,SAAAC,EAAAC,EAAAphE,GACA,kBAAAA,GAAAohE,EAAAC,UAAA,UAAArhE,GAAAohE,EAAAE,UAEA,SAAAX,EAAAz6F,GACA,IAAAgoC,EAAAhoC,EAAAgoC,WACAt6B,EAAA1N,EAAA0N,KACAssB,EAAAh6B,EAAAg6B,UACAqhE,EAAAr7F,EAAAq7F,SACA5rF,EAAAzP,EAAAyP,IACA24B,EAAApoC,EAAAooC,UACAC,EAAAroC,EAAAqoC,iBACAloB,EAAAngB,EAAAmgB,mBAEA7iB,KAAA0qC,aACA1qC,KAAA08B,YACA18B,KAAA+9F,WACA/9F,KAAAoQ,OACApQ,KAAAmS,MACAnS,KAAA8qC,YACA9qC,KAAA+qC,mBACA/qC,KAAA6iB,qBACA7iB,KAAAm2E,iBAAAzrC,EAAAyrC,iBACAn2E,KAAAg+F,iBAAA,KACA,IAAAC,EAAA,IAAAj+F,KAAA08B,UAAA,IACAwhE,GAAsBtsG,IAAA,GACtBoO,KAAAm+F,WACAC,YAAA,WACA,OAAAH,KAAAC,EAAAtsG,MAuOA,OAnOAurG,EAAAlwG,WACAoxG,wBAAA,SAAAz7F,GACA,IAAAE,EAAAqH,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,IAAAA,UAAA,GAEA9c,GAAA,EAAA+mB,EAAAllB,yBACAyT,KAAA3C,KAAA+9F,SACAn7F,MACAE,WACAE,eAAA,IAEA,OAAAqD,MAAA4K,QAAA5jB,GAGA,IAAAA,EAAAoT,SAAA,EAAA4T,EAAAxC,QAAAxkB,EAAA,IAGAgnB,EAAAnE,KAAAwB,MAAA1R,KAAAoQ,KAAA/iB,GAFAA,EAAA,GAHAA,GAQA4nD,cACA,OAAAj1C,KAAA+9F,SAAAnxG,IAAA,aAEA0xG,gBACA,SAAAlqF,EAAAvmB,QAAAmS,KAAA,YAAAA,KAAAq+F,wBAAA,cAAAhqF,EAAAnE,KAAAuB,QAEA8sF,eACA,IAAAA,EAAAv+F,KAAAq+F,wBAAA,eACA,OAAAh4F,MAAA4K,QAAAstF,IAAA,IAAAA,EAAA99F,QAGA,EAAA2T,EAAAvmB,QAAAmS,KAAA,WAAAu+F,IAFA,EAAAnqF,EAAAvmB,QAAAmS,KAAA,WAAA09F,IAIAc,cACA,IAAAA,EAAAx+F,KAAAq+F,wBAAA,cACA,OAAAh4F,MAAA4K,QAAAutF,IAAA,IAAAA,EAAA/9F,QAGA,EAAA2T,EAAAvmB,QAAAmS,KAAA,UAAAw+F,IAFA,EAAApqF,EAAAvmB,QAAAmS,KAAA,UAAAA,KAAAu+F,WAIApmB,eACA,IAAAvmF,EAAAoO,KAAA+9F,SAAAnxG,IAAA,YAIA,SAHA,EAAAwnB,EAAAzlB,OAAAiD,OAAA,KACAA,EAAA6rG,IAEA,EAAArpF,EAAAvmB,QAAAmS,KAAA,WAAApO,IAEAwmF,WACA,IAAAmmB,EAAAv+F,KAAAu+F,SACAC,EAAAx+F,KAAAw+F,QACA,GAAAD,IAAAC,EACA,SAAApqF,EAAAvmB,QAAAmS,KAAA,OAAAu+F,GAEA,IAAAE,EAAArqF,EAAAvkB,KAAAsV,UAAAq5F,EAAAD,GACA,SAAAnqF,EAAAvmB,QAAAmS,KAAA,OAAAy+F,GAAAF,IAEAtqC,aACA,IAAAA,EAAAj0D,KAAAq+F,wBAAA,aAQA,OAPApqC,EAAA,OACAA,EAAA,EACOA,GAAA,IACPA,GAAA,IACOA,EAAA,IACPA,KAAA,eAEA,EAAA7/C,EAAAvmB,QAAAmS,KAAA,SAAAi0D,IAEAyqC,iBAAA,WACA,IACAryF,EADA4oC,EAAAj1C,KAAAi1C,QAEA,GAAA5uC,MAAA4K,QAAAgkC,GAAA,CACA,IACAlpD,EADAqkB,EAAApQ,KAAAoQ,KAEAvjB,EAAAooD,EAAAx0C,OACAsV,KACA,IAAAhqB,EAAA,EAAmBA,EAAAc,IAAOd,EAC1BgqB,EAAA3U,KAAAgP,EAAAU,WAAAmkC,EAAAlpD,KAEAsgB,EAAA,IAAA0hB,EAAAra,sBAAAqC,QAEA1J,GADO,EAAAgI,EAAArB,UAAAiiC,GACPA,EAEA,IAAAlnB,EAAAja,WAEA,OAAAzH,GAEAsyF,cAAA,SAAArtF,GACA,IAAA5F,EAAA1L,KAKA,OAHAA,KAAAg+F,mBACAh+F,KAAAg+F,iBAAAh+F,KAAA0qC,WAAAotC,OAAA93E,KAAA,cAEAA,KAAAg+F,iBAAApxF,KAAA,WACA,IAAAgyF,EAAA,IAAAxB,EAAAxzD,aAAAl+B,EAAA4yF,UAAAhtF,EAAA5F,EAAA0E,MACA,OAAAwuF,EAAA1nD,UAGAwhC,gBAAA,SAAAnqE,GACA,IAAAd,EAAAzN,KAEAkN,EAAAqB,EAAArB,QACAwoE,EAAAnnE,EAAAmnE,KACAl5C,EAAAjuB,EAAAiuB,OACAm8C,EAAApqE,EAAAoqE,uBAEAkmB,EAAA7+F,KAAA0qC,WAAAotC,OAAA93E,KAAA,oBACAg+F,EAAAh+F,KAAA2+F,eAAA,gEACAG,EAAA,IAAAvB,EAAAwB,kBACAr0D,WAAA1qC,KAAA0qC,WACAt6B,KAAApQ,KAAAoQ,KACAlD,UACAwvB,UAAA18B,KAAA08B,UACAyhE,UAAAn+F,KAAAm+F,UACArzD,UAAA9qC,KAAA8qC,UACAC,iBAAA/qC,KAAA+qC,iBACA4N,QAAA34C,KAAAm2E,iBACAtzD,mBAAA7iB,KAAA6iB,qBAEAm8E,EAAAr1F,QAAA2F,KAAAuvF,EAAAb,IACAiB,EAAAD,EAAApyF,KAAA,SAAAwC,GACA,IAAA68D,EAAAniC,EAAA16B,EAAA,GACA8vF,EAAAjzB,EAAA,GAEA7uC,EAAA,IAAAkgE,EAAA5lE,aAAA8E,EAAAtvB,EAAAO,EAAAivB,WAMA,OALAxvB,EAAAE,KAAA,mBACA+xF,aAAAL,EAAAM,cAAA3xF,EAAA6wF,WACA5hE,UAAAjvB,EAAAivB,UACAF,WAEAsiE,EAAApmB,iBACArsE,OAAA6yF,EACAxpB,OACA4oB,UAAA7wF,EAAA6wF,UACAhhE,aAAAF,IACSxwB,KAAA,WACT,OAAAwwB,MAGAiiE,EAAAr/F,KAAA0qC,WAAAotC,OAAA93E,KAAA,eACA,OAAA2J,QAAA2F,KAAA2vF,EAAAI,IAAAzyF,KAAA,SAAAs/D,GACA,IAAAC,EAAAriC,EAAAoiC,EAAA,GACAozB,EAAAnzB,EAAA,GACAozB,EAAApzB,EAAA,GAEA,OAAAozB,EAAA9+F,OAEA,OADA6+F,EAAApjE,OAAA,GACAojE,EAEA,IAAAvzG,EACA8V,EACA29F,KACA,IAAAzzG,EAAA,EAAA8V,EAAA09F,EAAA9+F,OAA4C1U,EAAA8V,EAAQ9V,IACpD4xG,EAAA4B,EAAAxzG,GAAAywC,IACAgjE,EAAAp+F,KAAAm+F,EAAAxzG,GAAA2sF,gBAAAomB,EAAAppB,EAAAiD,IAGA,OAAAhvE,QAAA2F,IAAAkwF,GAAA5yF,KAAA,SAAA6yF,GAEA,IADAH,EAAAtiE,MAAA5oB,EAAA/iB,IAAAyL,qBACA/Q,EAAA,EAAA8V,EAAA49F,EAAAh/F,OAA0C1U,EAAA8V,EAAQ9V,IAClDuzG,EAAAniE,UAAAsiE,EAAA1zG,IAIA,OAFAuzG,EAAAtiE,MAAA5oB,EAAA/iB,IAAA0L,mBACAuiG,EAAApjE,OAAA,GACAojE,OAIAtmB,mBAAA,SAAAvM,GACA,IAAAp+D,EAAArO,KAEAkN,EAAAu/D,EAAAv/D,QACAwoE,EAAAjJ,EAAAiJ,KACAuD,EAAAxM,EAAAwM,oBACAF,EAAAtM,EAAAsM,KACAG,EAAAzM,EAAAyM,iBAEA2lB,EAAA7+F,KAAA0qC,WAAAotC,OAAA93E,KAAA,oBACAg+F,EAAAh+F,KAAA2+F,eAAA,+BACAK,EAAAr1F,QAAA2F,KAAAuvF,EAAAb,IACA,OAAAgB,EAAApyF,KAAA,SAAA+gE,GACA,IAAAI,EAAAjkC,EAAA6jC,EAAA,GACAuxB,EAAAnxB,EAAA,GAEA+wB,EAAA,IAAAvB,EAAAwB,kBACAr0D,WAAAr8B,EAAAq8B,WACAt6B,KAAA/B,EAAA+B,KACAlD,UACAwvB,UAAAruB,EAAAquB,UACAyhE,UAAA9vF,EAAA8vF,UACArzD,UAAAz8B,EAAAy8B,UACAC,iBAAA18B,EAAA08B,iBACA4N,QAAAtqC,EAAA8nE,iBACAtzD,mBAAAxU,EAAAwU,qBAEA,OAAAi8E,EAAAY,gBACArzF,OAAA6yF,EACAxpB,OACA4oB,UAAAjwF,EAAAiwF,UACArlB,sBACAC,mBACAH,YAKA4mB,mBAAA,SAAAnjE,GAGA,IAFA,IAAA+iE,EAAAv/F,KAAAu/F,YACAK,KACA7zG,EAAA,EAAAc,EAAA0yG,EAAA9+F,OAA6C1U,EAAAc,IAAOd,EACpDywC,IAAAmhE,EAAA4B,EAAAxzG,GAAAywC,IACAojE,EAAAx+F,KAAAm+F,EAAAxzG,GAAAgW,MAGA,OAAA69F,GAEAL,kBAGA,IAFA,IAAAA,KACAM,EAAA7/F,KAAAq+F,wBAAA,cACAtyG,EAAA,EAAAc,EAAAgzG,EAAAp/F,OAAgD1U,EAAAc,IAAOd,EAAA,CACvD,IAAA+zG,EAAAD,EAAA9zG,GACA6xG,EAAAP,EAAA0C,kBAAAngG,OAAAI,KAAAoQ,KAAA0vF,EAAA9/F,KAAA0qC,WAAA1qC,KAAAm+F,WACAP,GACA2B,EAAAn+F,KAAAw8F,GAGA,SAAAxpF,EAAAvmB,QAAAmS,KAAA,cAAAu/F,KAGApC,EArQA,GAuQAF,EAAA,WACA,IAAA+C,EAAA,KACAC,EAAA,mCACA,SAAAhD,EAAAvyD,EAAAnS,GACA,IAAAlsB,EACA,MAAAgI,EAAArB,UAAAulB,GACAlsB,EAAAksB,MACK,QAAAnkB,EAAAtlB,eAAAypC,GAGL,UAAAn6B,MAAA,sCAFAiO,EAAA,IAAA0hB,EAAApa,OAAA4kB,GAIA,GAAAlsB,EAAA5L,QAAA,EACA,UAAArC,MAAA,sCAEA4B,KAAA0qC,aACA1qC,KAAAqM,SACArM,KAAAoQ,KAAA,IAAAgtF,EAAAzzD,KAAAt9B,EAAAq+B,GACA,IAAAyrC,EAAAzrC,EAAAyrC,iBACAn2E,KAAA6iB,mBAAA,IAAA26E,EAAAnzB,oBACAj6D,KAAApQ,KAAAoQ,KACA/hB,gBAAA8nF,EAAA9nF,kBAGA,SAAA6xG,EAAA7zF,EAAA8zF,EAAA1nF,EAAA2nF,GACA,IAAAt+F,EAAAuK,EAAAvK,IACA1B,EAAAiM,EAAAjM,IACAU,KACAgB,EAAA2W,EAAArY,IACAqY,EAAArY,EAAA0B,GAEA,QAAAjV,EAAA,EAAmBA,EAAA4rB,IAAW5rB,EAC9BiU,EAAAM,KAAAT,OAAAC,aAAAyL,EAAAmI,YAEA,IAAAlU,EAAAQ,EAAAO,KAAA,IACAgL,EAAAvK,MACA,IAAA2rB,EAAA2yE,EAAA9/F,EAAA+/F,YAAAF,GAAA7/F,EAAAowC,QAAAyvD,GACA,WAAA1yE,IAGAphB,EAAAvK,KAAA2rB,GACA,GAEA,IAAA6yE,GACAjzE,cACA,SAAAjZ,EAAAvmB,QAAAmS,KAAA,WACAugG,MAAAnsF,EAAA1lB,SACA8xG,OAAApsF,EAAA1lB,SACA+xG,QAAArsF,EAAA1lB,SACAgyG,SAAAtsF,EAAA1lB,SACAiyG,QAAAvsF,EAAA1lB,SACAkyG,SAAAxsF,EAAA1lB,SACAmyG,aAAAzsF,EAAA1lB,SACAoyG,QAAA1sF,EAAA1lB,SACAqyG,QAAA1sF,EAAA1B,WAmMA,OA/LAsqF,EAAAhwG,WACAy1B,MAAA,SAAAgM,GACA1uB,KAAAy0E,MAAA/lD,GACA,IAAAlQ,EAAAxe,KAAAq4E,QAAAztC,QAAAh+C,IAAA,YACA,EAAAynB,EAAA1B,QAAA6L,KACAxe,KAAAghG,iBAAAxiF,EAAAnyB,MAEA,IAEA,GADA2T,KAAAihG,SAAAjhG,KAAAq4E,QAAAztC,QAAAh+C,IAAA,YACAoT,KAAAihG,SAAA,CACAjhG,KAAAkhG,IAAAlhG,KAAAihG,SAAAr0G,IAAA,OACA,IAAAu0G,EAAAnhG,KAAAihG,SAAAr0G,IAAA,UACAu0G,GAAA96F,MAAA4K,QAAAkwF,IAAA,IAAAA,EAAA1gG,QAAAT,KAAAkhG,MACAlhG,KAAAihG,SAAA,OAGO,MAAA1hG,GACP,GAAAA,aAAA6U,EAAA5jB,qBACA,MAAA+O,GAEA,EAAA6U,EAAArlB,MAAA,uCACAiR,KAAAihG,SAAA,OAGAG,oBACA,IAAAA,EAAA,KACA,GAAAphG,KAAAqM,OAAA5L,OACA,IACA2gG,EAAA92D,EAAAzc,cAAAjuB,OAAAI,KAAAqM,QACS,MAAAk9B,GACT,GAAAA,aAAAn1B,EAAA5jB,qBACA,MAAA+4C,GAEA,EAAAn1B,EAAArlB,MAAAw6C,GAGA,SAAAn1B,EAAAvmB,QAAAmS,KAAA,gBAAAohG,IAEAzvD,gBACA,IAAAtlC,EAAArM,KAAAqM,OACAslC,EAAA,EACAyvD,EAAAphG,KAAAohG,cACA,GAAAA,EACA/0F,EAAA4I,QACAirF,EAAA7zF,EAAA,iBACAslC,EAAAtlC,EAAAvK,IAAA,OAEO,CACP,IAAAyrB,EAAA,KACAoE,GAAA,EACA7vB,EAAAuK,EAAAjM,IACA,OAAAuxB,GAAA7vB,EAAA,EACAA,GAAAyrB,EAAA,YAAA9sB,OACAqB,EAAA,IACAA,EAAA,GAEAuK,EAAAvK,MACA6vB,EAAAuuE,EAAA7zF,EAAA,YAAAkhB,GAAA,GAEA,GAAAoE,EAAA,CAEA,IAAAnoB,EADA6C,EAAA2I,KAAA,GAEA,GACAxL,EAAA6C,EAAAmI,iBACW,EAAAJ,EAAA3lB,SAAA+a,IACX,IAAAlJ,EAAA,GACA,MAAAkJ,GAAA,IAAAA,GAAA,GACAlJ,GAAAK,OAAAC,aAAA4I,GACAA,EAAA6C,EAAAmI,UAEAm9B,EAAA8D,SAAAn1C,EAAA,IACA60B,MAAAwc,KACAA,EAAA,IAIA,SAAAv9B,EAAAvmB,QAAAmS,KAAA,YAAA2xC,IAEA/c,4BACA,IAAAA,EAAA,EACAwsE,EAAAphG,KAAAohG,cAIA,OAHAA,IACAxsE,EAAAwsE,EAAAxsE,wBAEA,EAAAxgB,EAAAvmB,QAAAmS,KAAA,wBAAA40B,IAEAysE,YAAA,WACA,IAAAh1F,EAAArM,KAAAqM,OAEA,GADAA,EAAA4I,QACAirF,EAAA7zF,EAAA,eACAA,EAAA6I,YACA,IAEA1L,EAFA83F,EAAA,GACA9iF,EAAA,GAEA,OAAAhV,EAAA6C,EAAAmI,WAAA,IACA,GAAAgK,EAAA/d,QAAA6gG,EACA,MAEA9iF,GAAA7d,OAAAC,aAAA4I,GAEAxJ,KAAAghG,mBACAhhG,KAAAghG,iBAAAxiF,EAAAk3B,UAAA,WAKA6rD,eAAA,WACA,IAAA5vD,EAAA3xC,KAAA2xC,UACA3xC,KAAAoQ,KAAAshC,aAAAC,IAEA8iC,MAAA,SAAA/lD,GACA,IAAAxf,EAAAlP,KAEAA,KAAAoQ,KAAAsS,MAAAgM,GACA,IAAAic,GACA8E,WAAA,SAAA/S,EAAA/5B,EAAAwP,EAAA24B,EAAAC,GACA,WAAAoyD,GACAzyD,WAAAx7B,EAAAw7B,WACAt6B,KAAAlB,EAAAkB,KACAssB,YACAqhE,SAAAp7F,EACAwP,MACA24B,YACAC,mBACAloB,mBAAA3T,EAAA2T,uBAIA7iB,KAAAq4E,QAAA,IAAA+kB,EAAAvzD,QAAA7pC,KAAA0qC,WAAA1qC,KAAAoQ,KAAAu6B,IAEAhW,eACA,IAAAysE,EAAAphG,KAAAohG,cACApvF,EAAAovF,IAAAzsE,SAAA30B,KAAAq4E,QAAA1jD,SACA,SAAAvgB,EAAAvmB,QAAAmS,KAAA,WAAAgS,IAEAwvF,mBACA,IAKAC,EALAC,GACAC,iBAAA3hG,KAAAghG,iBACAY,oBAAA5hG,KAAAihG,SACAY,eAAA7hG,KAAAkhG,KAGA,IACAO,EAAAzhG,KAAAoQ,KAAA4hC,QAAAplD,IAAA,QACO,MAAA28C,GACP,GAAAA,aAAAn1B,EAAA5jB,qBACA,MAAA+4C,GAEA,EAAAn1B,EAAArlB,MAAA,mDAEA,GAAA0yG,EAAA,CACA,IAAAK,EAAAxB,EAAAjzE,QACA,QAAAzqB,KAAAk/F,EACA,GAAAL,EAAAlwF,IAAA3O,GAAA,CACA,IAAAvV,EAAAo0G,EAAA70G,IAAAgW,GACAk/F,EAAAl/F,GAAAvV,GACAq0G,EAAA9+F,GAAA,kBAAAvV,KAAA,EAAA+mB,EAAA1mB,mBAAAL,IAEA,EAAA+mB,EAAArlB,MAAA,mCAAA6T,EAAA,MAKA,SAAAwR,EAAAvmB,QAAAmS,KAAA,eAAA0hG,IAEA1rB,kBACA,IACAriB,EADAvjD,EAAApQ,KAAAoQ,KAEA2xF,EAAA,GACAC,EAAA5xF,EAAA4hC,QAAAplD,IAAA,MACAyZ,MAAA4K,QAAA+wF,MAAA,OAAA5tF,EAAA1lB,UAAAszG,EAAA,KAAAA,EAAA,KAAA/B,EACAtsC,GAAA,EAAAv/C,EAAAzmB,eAAAq0G,EAAA,KAEAhiG,KAAAqM,OAAAg6B,aACArmC,KAAAqM,OAAAg6B,YAAA,EAAArlC,KAAAC,IAAA++F,EAAAhgG,KAAAqM,OAAAjM,MAEAuzD,GAAA,EAAAnpB,EAAAwnB,cAAAhyD,KAAAqM,OAAA7L,MAAAW,SAAA,EAAA6+F,GAAA,EAAAA,IAEA,QAAAj0G,EAAA,EAAAc,EAAA8mE,EAAAlzD,OAAsC1U,EAAAc,EAAOd,IAAA,CAC7C,IAAAk2G,EAAAtuC,EAAA5nE,GAAAmf,SAAA,IACA62F,GAAA,IAAAE,EAAAxhG,OAAA,IAAAwhG,IAEA,SAAA7tF,EAAAvmB,QAAAmS,KAAA,cAAA+hG,IAEAxyD,QAAA,SAAA7S,GACA,OAAA18B,KAAAq4E,QAAA9oC,QAAA7S,IAEAyS,QAAA,WACA,OAAAnvC,KAAAq4E,QAAAlpC,YAGA8tD,EAzPA,GA2PAxxG,EAAA0xG,OACA1xG,EAAAwxG,eAIA,SAAAzxG,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAA6mC,oBAAA9gC,EAEA,IAAA6iB,EAAAxoB,EAAA,GAEAq2G,EAAAr2G,EAAA,IAEAkiC,EAAAliC,EAAA,GAEAymC,EAAA,WACA,SAAAA,EAAAhyB,EAAAmW,EAAAsC,GACA/Y,KAAAM,MACAN,KAAA2C,KAAArC,EAAAqC,MACA,EAAA0R,EAAAxC,QAAAkH,KACAA,EAAA1E,EAAAnE,KAAAuB,OAEA,IAAA6J,GACAoS,KAAA,WACA,OAAAptB,EAAAkU,YAGAxU,KAAAmiG,gBAAA,IAAAD,EAAAzqD,gBAAAn8B,GACAq2C,EAAA54C,EAAAnsB,IAAA,KACAw1G,UAAArpF,EAAAnsB,IAAA,aACAy1G,iBAAAtpF,EAAAnsB,IAAA,oBACA01G,QAAAvpF,EAAAnsB,IAAA,WACA21G,KAAAxpF,EAAAnsB,IAAA,QACA41G,WAAAzpF,EAAAnsB,IAAA,cACA61G,SAAA1pF,EAAAnsB,IAAA,cAEAmhC,EAAA/Z,aAAA/nB,KAAA+T,KAAAyW,GAcA,OAZA6b,EAAArlC,UAAAT,OAAAoT,OAAAmuB,EAAA/Z,aAAA/mB,WACAqlC,EAAArlC,UAAAwoB,UAAA,WACA,OAAAzV,KAAAuV,IAAA,CACA,IAAAppB,EAAA6T,KAAAmiG,gBAAAtoD,eACA,QAAA1tD,EAEA,YADA6T,KAAAuV,KAAA,GAGAvV,KAAA0V,aAAA1V,KAAAsV,aAAA,GACAtV,KAAAwC,OAAAxC,KAAAsV,gBAAAnpB,IAGAmmC,EAnCA,GAqCA7mC,EAAA6mC,kBAIA,SAAA9mC,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAA8mC,iBAAA/gC,EAEA,IAAA6iB,EAAAxoB,EAAA,GAEAkiC,EAAAliC,EAAA,GAEA62G,EAAA72G,EAAA,KAEAuoB,EAAAvoB,EAAA,GAEA0mC,EAAA,WACA,SAAAA,EAAAlmB,EAAAoK,EAAA9T,EAAAoW,GACA/Y,KAAAqM,SACArM,KAAAyW,cACAzW,KAAA2C,OACA3C,KAAA+Y,SACAgV,EAAA/Z,aAAA/nB,KAAA+T,KAAAyW,GA0CA,OAxCA8b,EAAAtlC,UAAAT,OAAAoT,OAAAmuB,EAAA/Z,aAAA/mB,WACAT,OAAAC,eAAA8lC,EAAAtlC,UAAA,SACAL,IAAA,WACA,SAAAwnB,EAAAvmB,QAAAmS,KAAA,QAAAA,KAAAqM,OAAA4G,SAAAjT,KAAAyW,eAGA/pB,cAAA,IAEA6lC,EAAAtlC,UAAAyoB,aAAA,SAAAC,KACA4c,EAAAtlC,UAAAwoB,UAAA,WACA,IAAAzV,KAAAuV,IAAA,CAGA,IAAAotF,EAAA,IAAAD,EAAAE,WACAh9D,KACA,MAAAvxB,EAAAxC,QAAA7R,KAAA+Y,QAAA,CACA,IAAA8pF,EAAA7iG,KAAA+Y,OAAAnsB,IAAA,gBACA,MAAAynB,EAAArB,UAAA6vF,GAAA,CACA,IAAAC,EAAAD,EAAA5vF,WACA2yB,EAAAxkC,MACAW,KAAA+gG,EACA3gG,MAAA,EACA/B,IAAA0iG,EAAAriG,UAIAmlC,EAAAxkC,MACAW,KAAA/B,KAAAQ,MACA2B,MAAA,EACA/B,IAAAJ,KAAAQ,MAAAC,SAIA,IAFA,IAAAsB,EAAA4gG,EAAAI,YAAAn9D,GACAqO,EAAAlyC,EAAAtB,OACA1U,EAAA,EAAmBA,EAAAkoD,EAAgBloD,IACnCgW,EAAAhW,IAAA,IAEAiU,KAAAwC,OAAAT,EACA/B,KAAAsV,aAAA2+B,EACAj0C,KAAAuV,KAAA,IAEAgd,EAhDA,GAkDA9mC,EAAA8mC,eAIA,SAAA/mC,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAm3G,gBAAApxG,EAEA,IAAA4iB,EAAAvoB,EAAA,GAEAgwD,EAAAhwD,EAAA,IAEAq2G,EAAAr2G,EAAA,IAEAm3G,EAAA,WACA,SAAAA,EAAAhlG,GACAgC,KAAAC,QAAA,gBAAAjC,EAKA,OAHAglG,EAAA/1G,UAAA,IAAAmR,MACA4kG,EAAA/1G,UAAAZ,KAAA,aACA22G,EAAAnxG,YAAAmxG,EACAA,EAPA,GASAJ,EAAA,WACA,SAAAK,KASA,SAAAC,EAAAnhG,EAAAI,EAAA/B,GACAJ,KAAA+B,OACA/B,KAAAmC,QACAnC,KAAAI,MAYA,SAAA+iG,EAAAC,EAAAC,EAAAl7C,GACA,IAAA5M,EAAA6nD,EAAAE,YAAAD,GACAE,EAAA,EACA,SAAAnnF,EAAA3b,GAEA,IADA,IAAA+D,EAAA,EACAzY,EAAA,EAAqBA,EAAA0U,EAAY1U,IAAA,CACjC,IAAA6jE,EAAAzH,EAAA7M,QAAAC,EAAAgoD,GACAA,IAAA,IAAAA,GAAA,EAAA3zC,EAAA,KAAA2zC,GAAA,EAAA3zC,GAAA,IACAprD,KAAA,EAAAorD,EAEA,OAAAprD,IAAA,EAEA,IAAAwuB,EAAA5W,EAAA,GACA/uB,EAAA+uB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAAAA,EAAA,QAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,KAAAA,EAAA,GACA,WAAA4W,EAAA3lC,IAAA,GAAAA,EAAA,KAEA,SAAAm2G,EAAAJ,EAAAj7C,EAAAvsC,GAGA,IAFA,IAAA2/B,EAAA6nD,EAAAE,YAAA,QACAC,EAAA,EACAx3G,EAAA,EAAmBA,EAAA6vB,EAAgB7vB,IAAA,CACnC,IAAA6jE,EAAAzH,EAAA7M,QAAAC,EAAAgoD,GACAA,KAAA,EAAA3zC,EAEA,OAAAh0C,EAAA,GACA2nF,GAAA,GAAA3nF,GAAA,EAEA,WAAA2nF,EAjDAN,EAAAh2G,WACAq2G,YAAA,SAAAl3E,GACA,OAAAA,KAAApsB,KACAA,KAAAosB,GAEApsB,KAAAosB,GAAA,IAAAkiC,UAAA,SAQA40C,EAAAj2G,WACAk7D,cACA,IAAAA,EAAA,IAAAtM,EAAAnB,kBAAA16C,KAAA+B,KAAA/B,KAAAmC,MAAAnC,KAAAI,KACA,SAAAgU,EAAAvmB,QAAAmS,KAAA,UAAAmoD,IAEAi7C,mBACA,IAAA5xD,EAAA,IAAAyxD,EACA,SAAA7uF,EAAAvmB,QAAAmS,KAAA,eAAAwxC,KA+BA,IAAAiyD,GAAA,ksBACAC,KACAzhG,GAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEA5G,GAAA,EACA4G,EAAA,MAEA5G,GAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEA5G,GAAA,EACA4G,EAAA,MAEA5G,GAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEA5G,GAAA,EACA4G,EAAA,MAEA5G,GAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEA5G,GAAA,EACA4G,EAAA,KAEA86F,IACAC,SACA3hG,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEAg7F,YACA5hG,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEA5G,EAAA,EACA4G,EAAA,IAEA5G,EAAA,EACA4G,EAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEA5G,EAAA,EACA4G,EAAA,IAEA5G,EAAA,EACA4G,EAAA,MAGA+6F,SACA3hG,GAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,EAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEAg7F,YACA5hG,EAAA,EACA4G,GAAA,IAEA5G,GAAA,EACA4G,EAAA,IAEA5G,EAAA,EACA4G,EAAA,IAEA5G,EAAA,EACA4G,EAAA,IAEA5G,EAAA,EACA4G,EAAA,IAEA5G,EAAA,EACA4G,EAAA,MAGAi7F,GAAA,oBACAC,GAAA,MACA,SAAAC,EAAA57F,EAAAC,EAAA47F,GACA,IAEAl1C,EACAhjE,EACAiuB,EACAkqF,EACA7qD,EACA8qD,EACAC,EARAj8C,EAAA87C,EAAA97C,QACA5M,EAAA0oD,EAAAb,aAAAE,YAAA,MAQAvuE,KACAsvE,EAAA,MACA,IAAAt4G,EAAA,EAAeA,EAAAsc,EAAYtc,IAK3B,IAJAstD,EAAAtkB,EAAAhpC,GAAA,IAAAuV,WAAA8G,GACA+7F,EAAAp4G,EAAA,EAAAstD,EAAAtkB,EAAAhpC,EAAA,GACAq4G,EAAAr4G,EAAA,EAAAstD,EAAAtkB,EAAAhpC,EAAA,GACAgjE,EAAAq1C,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAD,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MACAnqF,EAAA,EAAiBA,EAAA5R,EAAW4R,IAC5Bq/B,EAAAr/B,GAAAkqF,EAAA/7C,EAAA7M,QAAAC,EAAAwT,GACAA,KAAAs1C,IAAA,GAAArqF,EAAA,EAAA5R,EAAAg8F,EAAApqF,EAAA,WAAAA,EAAA,EAAA5R,EAAA+7F,EAAAnqF,EAAA,SAAAkqF,EAGA,OAAAnvE,EAEA,SAAAuvE,EAAAC,EAAAn8F,EAAAC,EAAAm8F,EAAAC,EAAAzvF,EAAA0vF,EAAAT,GACA,GAAAM,EAAA,CACA,IAAAzpF,EAAA,IAAA6pF,EAAAV,EAAAliG,KAAAkiG,EAAA9hG,MAAA8hG,EAAA7jG,KACA,OAAAwkG,EAAA9pF,EAAA1S,EAAAC,GAAA,GAEA,OAAAm8F,IAAAxvF,IAAAyvF,GAAA,IAAAC,EAAAjkG,QAAA,IAAAikG,EAAA,GAAAziG,IAAA,IAAAyiG,EAAA,GAAA77F,IAAA,IAAA67F,EAAA,GAAAziG,IAAA,IAAAyiG,EAAA,GAAA77F,GAAA,IAAA67F,EAAA,GAAAziG,IAAA,IAAAyiG,EAAA,GAAA77F,IAAA,IAAA67F,EAAA,GAAAziG,IAAA,IAAAyiG,EAAA,GAAA77F,EACA,OAAAm7F,EAAA57F,EAAAC,EAAA47F,GAEA,IAAAY,IAAA7vF,EACA8vF,EAAApB,EAAAc,GAAAj4E,OAAAm4E,GACAI,EAAAt/F,KAAA,SAAAb,EAAAnB,GACA,OAAAmB,EAAAkE,EAAArF,EAAAqF,GAAAlE,EAAA1C,EAAAuB,EAAAvB,IAEA,IAQA9V,EAAAysB,EARAmsF,EAAAD,EAAArkG,OACAukG,EAAA,IAAA12C,UAAAy2C,GACAE,EAAA,IAAA32C,UAAAy2C,GACAG,KACAC,EAAA,EACAC,EAAA,EACA9rE,EAAA,EACA+rE,EAAA,EAEA,IAAAzsF,EAAA,EAAeA,EAAAmsF,EAAoBnsF,IACnCosF,EAAApsF,GAAAksF,EAAAlsF,GAAA3W,EACAgjG,EAAArsF,GAAAksF,EAAAlsF,GAAA/P,EACAu8F,EAAApkG,KAAAC,IAAAmkG,EAAAN,EAAAlsF,GAAA3W,GACAq3B,EAAAt4B,KAAAqD,IAAAi1B,EAAAwrE,EAAAlsF,GAAA3W,GACAojG,EAAArkG,KAAAC,IAAAokG,EAAAP,EAAAlsF,GAAA/P,GACA+P,EAAAmsF,EAAA,GAAAD,EAAAlsF,GAAA/P,IAAAi8F,EAAAlsF,EAAA,GAAA/P,GAAAi8F,EAAAlsF,GAAA3W,IAAA6iG,EAAAlsF,EAAA,GAAA3W,EAAA,EACAkjG,GAAA,GAAAJ,EAAA,EAAAnsF,EAEAssF,EAAA9jG,KAAAwX,GAGA,IAAA0sF,EAAAJ,EAAAzkG,OACA8kG,EAAA,IAAAj3C,UAAAg3C,GACAE,EAAA,IAAAl3C,UAAAg3C,GACAG,EAAA,IAAAzpF,YAAAspF,GACA,IAAAn5G,EAAA,EAAeA,EAAAm5G,EAA2Bn5G,IAC1CysB,EAAAssF,EAAA/4G,GACAo5G,EAAAp5G,GAAA24G,EAAAlsF,GAAA3W,EACAujG,EAAAr5G,GAAA24G,EAAAlsF,GAAA/P,EACA48F,EAAAt5G,GAAA,GAAA44G,EAAA,EAAAnsF,EAiBA,IAfA,IASAoB,EACA60C,EACA62C,EAEA91C,EACA55C,EAdA2vF,GAAAP,EACAQ,GAAAP,EACAQ,EAAAz9F,EAAAkxB,EACAwsE,EAAAhC,EAAAU,GACAnrD,EAAA,IAAA/3C,WAAA8G,GACA2sB,KACAozB,EAAA87C,EAAA97C,QACA5M,EAAA0oD,EAAAb,aAAAE,YAAA,MACAyC,EAAA,EAIAh3C,EAAA,EAGAhjE,EAAA,EAAmBA,EAAAsc,EAAYtc,IAAA,CAC/B,GAAA04G,EAAA,CACA,IAAAuB,EAAA79C,EAAA7M,QAAAC,EAAAuqD,GAEA,GADAC,GAAAC,EACAD,EAAA,CACAhxE,EAAA3zB,KAAAi4C,GACA,UAKA,IAFAA,EAAA,IAAA/3C,WAAA+3C,GACAtkB,EAAA3zB,KAAAi4C,GACAr/B,EAAA,EAAiBA,EAAA5R,EAAW4R,IAC5B,GAAA6qF,GAAA7vF,EAAAjpB,GAAAiuB,GACAq/B,EAAAr/B,GAAA,MADA,CAIA,GAAAA,GAAA2rF,GAAA3rF,EAAA6rF,GAAA95G,GAAA65G,EAEA,IADA72C,KAAA,EAAAo2C,EACAvsF,EAAA,EAAqBA,EAAA0sF,EAA2B1sF,IAChDi2C,EAAA9iE,EAAAy5G,EAAA5sF,GACA8sF,EAAA1rF,EAAAurF,EAAA3sF,GACAg3C,EAAA76B,EAAA85B,GAAA62C,GACA91C,IACAA,EAAA61C,EAAA7sF,GACAm2C,GAAAa,QAMA,IAFAb,EAAA,EACA/4C,EAAA+uF,EAAA,EACAnsF,EAAA,EAAqBA,EAAAmsF,EAAoBnsF,IAAA5C,IACzC0vF,EAAA1rF,EAAAgrF,EAAApsF,GACA8sF,GAAA,GAAAA,EAAAt9F,IACAymD,EAAA9iE,EAAAk5G,EAAArsF,GACAi2C,GAAA,IACAe,EAAA76B,EAAA85B,GAAA62C,GACA91C,IACAb,GAAAa,GAAA55C,KAMA,IAAAkuF,EAAA/7C,EAAA7M,QAAAC,EAAAwT,GACA1V,EAAAr/B,GAAAkqF,GAGA,OAAAnvE,EAEA,SAAAkxE,EAAA79F,EAAAC,EAAAm8F,EAAA0B,EAAAv+F,EAAAC,EAAA68F,EAAAC,EAAAT,GACA,IAAAkC,EAAAxC,EAAAa,GAAAZ,OACA,IAAAY,IACA2B,IAAA55E,QAAAm4E,EAAA,MAEA,IAGA9rF,EAHAwtF,EAAAD,EAAA1lG,OACA4lG,EAAA,IAAAjwF,WAAAgwF,GACAE,EAAA,IAAAlwF,WAAAgwF,GAEA,IAAAxtF,EAAA,EAAeA,EAAAwtF,EAA0BxtF,IACzCytF,EAAAztF,GAAAutF,EAAAvtF,GAAA3W,EACAqkG,EAAA1tF,GAAAutF,EAAAvtF,GAAA/P,EAEA,IAAA09F,EAAA5C,EAAAa,GAAAX,UACA,IAAAW,IACA+B,IAAAh6E,QAAAm4E,EAAA,MAEA,IAAA8B,EAAAD,EAAA9lG,OACAgmG,EAAA,IAAArwF,WAAAowF,GACAE,EAAA,IAAAtwF,WAAAowF,GACA,IAAA5tF,EAAA,EAAeA,EAAA4tF,EAA6B5tF,IAC5C6tF,EAAA7tF,GAAA2tF,EAAA3tF,GAAA3W,EACAykG,EAAA9tF,GAAA2tF,EAAA3tF,GAAA/P,EASA,IAPA,IAAA89F,EAAAT,EAAA,GAAAzlG,OACAmmG,EAAAV,EAAAzlG,OACAqlG,EAAA/B,EAAAS,GACAzvE,KACAozB,EAAA87C,EAAA97C,QACA5M,EAAA0oD,EAAAb,aAAAE,YAAA,MACAyC,EAAA,EACAh6G,EAAA,EAAmBA,EAAAsc,EAAYtc,IAAA,CAC/B,GAAA04G,EAAA,CACA,IAAAuB,EAAA79C,EAAA7M,QAAAC,EAAAuqD,GAEA,GADAC,GAAAC,EACAD,EACA,UAAA/C,EAAA,+BAGA,IAAA3pD,EAAA,IAAA/3C,WAAA8G,GACA2sB,EAAA3zB,KAAAi4C,GACA,QAAAr/B,EAAA,EAAqBA,EAAA5R,EAAW4R,IAAA,CAChC,IAAA60C,EAAA62C,EACA32C,EAAA,EACA,IAAAn2C,EAAA,EAAmBA,EAAAwtF,EAA0BxtF,IAC7Ci2C,EAAA9iE,EAAAu6G,EAAA1tF,GACA8sF,EAAA1rF,EAAAqsF,EAAAztF,GACAi2C,EAAA,GAAA62C,EAAA,GAAAA,GAAAt9F,EACA2mD,IAAA,EAEAA,KAAA,EAAAh6B,EAAA85B,GAAA62C,GAGA,IAAA9sF,EAAA,EAAmBA,EAAA4tF,EAA6B5tF,IAChDi2C,EAAA9iE,EAAA26G,EAAA9tF,GAAAhR,EACA89F,EAAA1rF,EAAAysF,EAAA7tF,GAAAjR,EACAknD,EAAA,GAAAA,GAAA+3C,GAAAlB,EAAA,GAAAA,GAAAiB,EACA53C,IAAA,EAEAA,KAAA,EAAAm3C,EAAAr3C,GAAA62C,GAGA,IAAAxB,EAAA/7C,EAAA7M,QAAAC,EAAAwT,GACA1V,EAAAr/B,GAAAkqF,GAGA,OAAAnvE,EAEA,SAAA8xE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3C,EAAAE,EAAA0C,EAAAC,EAAApD,EAAAqD,GACA,GAAAR,GAAAC,EACA,UAAA/D,EAAA,mDAEA,IAAAuE,KACAC,EAAA,EACAC,GAAA,EAAArzF,EAAAhmB,MAAA44G,EAAAvmG,OAAAwmG,GACA9+C,EAAA87C,EAAA97C,QACAi7C,EAAAa,EAAAb,aACAsE,OAAA,EACAC,OAAA,EACAb,IACAY,EAAAE,EAAA,GACAD,KACAF,EAAAzmG,KAAAqD,IAAAojG,EAAA,IAEA,MAAAF,EAAA9mG,OAAAwmG,EAAA,CACA,IAAAY,EAAAf,EAAAK,EAAAW,iBAAAljF,OAAA0iF,GAAAnE,EAAAC,EAAA,OAAAj7C,GACAq/C,GAAAK,EACA,IAAAE,EAAA,EACAC,EAAA,EACAC,EAAAnB,EAAAa,EAAAlnG,OAAA,EACA,SACA,IAMAs0B,EANAmzE,EAAApB,EAAAK,EAAAgB,gBAAAvjF,OAAA0iF,GAAAnE,EAAAC,EAAA,OAAAj7C,GACA,UAAA+/C,EACA,MAKA,GAHAH,GAAAG,EACAF,GAAAD,EAEAhB,EAAA,CACA,IAAAqB,EAAAjF,EAAAC,EAAA,OAAAj7C,GACA,GAAAigD,EAAA,EACArzE,EAAAszE,EAAAvB,EAAAC,EAAAgB,EAAAP,EAAA,EAAAY,EAAA,EAAApB,EAAAz6E,OAAAg7E,GAAAE,EAAA,QAAAN,EAAAC,EAAAC,EAAApD,EAAA,EAAAqD,OACW,CACX,IAAAgB,EAAA9E,EAAAJ,EAAAj7C,EAAAs/C,GACAc,EAAApF,EAAAC,EAAA,QAAAj7C,GACAqgD,EAAArF,EAAAC,EAAA,QAAAj7C,GACAmI,EAAAg4C,EAAAtB,EAAAvmG,OAAAumG,EAAAsB,GAAAf,EAAAe,EAAAtB,EAAAvmG,QACAs0B,EAAAkxE,EAAA8B,EAAAP,EAAAJ,EAAA92C,EAAAi4C,EAAAC,GAAA,EAAAnB,EAAApD,GAEAsD,EAAAnmG,KAAA2zB,QACS+xE,EACTa,EAAAvmG,KAAA2mG,IAEAhzE,EAAAuvE,GAAA,EAAAyD,EAAAP,EAAAhD,GAAA,OAAAE,EAAAT,GACAsD,EAAAnmG,KAAA2zB,IAGA,GAAA+xE,IAAAC,EAAA,CACA,IAAA0B,EAAAtB,EAAAuB,gBAAA9jF,OAAA0iF,GACAA,EAAAxuD,YACA,IAAA6vD,OAAA,EACA,OAAAF,EACAE,EAAAC,EAAAtB,EAAAU,EAAAR,OACS,CACT,IAAAqB,EAAAvB,EAAAlnG,IACA0oG,EAAAxB,EAAAnhE,SAAAsiE,EACAnB,EAAAlnG,IAAA0oG,EACAH,EAAA/D,EAAA0C,EAAAU,EAAAR,GAAA,GACAF,EAAAlnG,IAAAyoG,EACAvB,EAAAnhE,SAAA2iE,EAEA,IAAAC,EAAApB,EAAAlnG,OACA,GAAAwnG,IAAAc,EAAA,EACAxB,EAAAnmG,KAAAunG,OACS,CACT,IAAAt+D,OAAA,EACAxhC,OAAA,EACAmgG,EAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACA,IAAA9+D,EAAA49D,EAAgC59D,EAAA0+D,EAA6B1+D,IAAA,CAI7D,IAHA6+D,EAAAvB,EAAAt9D,GACA4+D,EAAAD,EAAAE,EACAC,KACAtgG,EAAA,EAAuBA,EAAA2+F,EAAmB3+F,IAC1CsgG,EAAA/nG,KAAAunG,EAAA9/F,GAAA1H,SAAA6nG,EAAAC,IAEA1B,EAAAnmG,KAAA+nG,GACAH,EAAAC,KAKA,IAAAG,KACA/8D,KACAg9D,GAAA,EACAC,GAAAtC,EAAAvmG,OAAAwmG,EACA,MAAA56D,EAAA5rC,OAAA6oG,GAAA,CACA,IAAAC,GAAAzC,EAAAY,EAAA9iF,OAAA0iF,GAAAnE,EAAAC,EAAA,OAAAj7C,GACA,MAAAohD,KACAl9D,EAAAjrC,KAAAioG,GAEAA,KAEA,QAAAt9G,GAAA,EAAA8V,GAAAmlG,EAAAvmG,OAAwC1U,GAAA8V,GAAQ9V,KAChDsgD,EAAAtgD,KACAq9G,EAAAhoG,KAAA4lG,EAAAj7G,KAGA,QAAAiuB,GAAA,EAAmBA,GAAAitF,EAAwBl7G,KAAAiuB,KAC3CqyB,EAAAtgD,KACAq9G,EAAAhoG,KAAAmmG,EAAAvtF,KAGA,OAAAovF,EAEA,SAAAf,EAAAvB,EAAAC,EAAA3+F,EAAAC,EAAAmhG,EAAAC,EAAAC,EAAAC,EAAAlC,EAAAmC,EAAAC,EAAAC,EAAAC,EAAA5C,EAAAC,EAAAC,EAAApD,EAAA+F,EAAA1C,GACA,GAAAR,GAAAC,EACA,UAAA/D,EAAA,4CAEA,IACAj3G,EAAAstD,EADAtkB,KAEA,IAAAhpC,EAAA,EAAeA,EAAAsc,EAAYtc,IAAA,CAE3B,GADAstD,EAAA,IAAA/3C,WAAA8G,GACAohG,EACA,QAAAxvF,EAAA,EAAuBA,EAAA5R,EAAW4R,IAClCq/B,EAAAr/B,GAAAwvF,EAGAz0E,EAAA3zB,KAAAi4C,GAEA,IAAA8O,EAAA87C,EAAA97C,QACAi7C,EAAAa,EAAAb,aACA6G,EAAAnD,GAAAK,EAAA+C,YAAAtlF,OAAA0iF,IAAAnE,EAAAC,EAAA,OAAAj7C,GACAgiD,EAAA,EACAp+G,EAAA,EACA,MAAAA,EAAA09G,EAAA,CACA,IAAAW,EAAAtD,EAAAK,EAAA+C,YAAAtlF,OAAA0iF,GAAAnE,EAAAC,EAAA,OAAAj7C,GACA8hD,GAAAG,EACA,IAAAC,EAAAvD,EAAAK,EAAAmD,YAAA1lF,OAAA0iF,GAAAnE,EAAAC,EAAA,OAAAj7C,GACAgiD,GAAAE,EACA,IAAAE,EAAAJ,EACA,GACA,IAAAK,EAAA,EACAd,EAAA,IACAc,EAAA1D,EAAAQ,EAAAlrF,SAAA4tF,GAAA7G,EAAAC,EAAA,OAAAj7C,IAEA,IAAAxwC,EAAA+xF,EAAAO,EAAAO,EACAlC,EAAAxB,EAAAK,EAAAsD,cAAA7lF,OAAA0iF,GAAA9D,EAAAJ,EAAAj7C,EAAAs/C,GACAiD,EAAA3D,IAAAD,EAAAQ,EAAAhsD,UAAA6nD,EAAAC,EAAA,OAAAj7C,IACAghD,EAAAQ,EAAArB,GACAqC,EAAAxB,EAAA,GAAA1oG,OACAmqG,EAAAzB,EAAA1oG,OACA,GAAAiqG,EAAA,CACA,IAAAG,EAAA1H,EAAAC,EAAA,QAAAj7C,GACA2iD,EAAA3H,EAAAC,EAAA,QAAAj7C,GACAogD,EAAApF,EAAAC,EAAA,QAAAj7C,GACAqgD,EAAArF,EAAAC,EAAA,QAAAj7C,GACAwiD,GAAAE,EACAD,GAAAE,EACA3B,EAAAlD,EAAA0E,EAAAC,EAAAxD,EAAA+B,GAAA0B,GAAA,GAAAtC,GAAAuC,GAAA,GAAAtC,GAAA,EAAAnB,EAAApD,GAEA,IAEA7sC,EAAAnB,EAAA80C,EAFAC,EAAArzF,GAAA,EAAAmyF,EAAA,EAAAc,EAAA,GACAK,EAAAV,GAAA,EAAAT,EAAAa,EAAA,KAEA,GAAAf,EAAA,CACA,IAAAxyC,EAAA,EAAsBA,EAAAwzC,EAAmBxzC,IAEzC,GADA/d,EAAAtkB,EAAAk2E,EAAA7zC,GACA/d,EAAA,CAGA0xD,EAAA5B,EAAA/xC,GACA,IAAA8zC,EAAAlqG,KAAAC,IAAAmH,EAAA4iG,EAAAL,GACA,OAAAZ,GACA,OACA,IAAA9zC,EAAA,EAA4BA,EAAAi1C,EAAej1C,IAC3C5c,EAAA2xD,EAAA/0C,IAAA80C,EAAA90C,GAEA,MACA,OACA,IAAAA,EAAA,EAA4BA,EAAAi1C,EAAej1C,IAC3C5c,EAAA2xD,EAAA/0C,IAAA80C,EAAA90C,GAEA,MACA,QACA,UAAA+sC,EAAA,YAAA+G,EAAA,sBAGAQ,GAAAK,EAAA,MACS,CACT,IAAA30C,EAAA,EAAsBA,EAAA20C,EAAmB30C,IAEzC,GADA5c,EAAAtkB,EAAAi2E,EAAA/0C,GACA5c,EAIA,OADA0xD,EAAA5B,EAAAlzC,GACA8zC,GACA,OACA,IAAA3yC,EAAA,EAA4BA,EAAAuzC,EAAkBvzC,IAC9C/d,EAAA4xD,EAAA7zC,IAAA2zC,EAAA3zC,GAEA,MACA,OACA,IAAAA,EAAA,EAA4BA,EAAAuzC,EAAkBvzC,IAC9C/d,EAAA4xD,EAAA7zC,IAAA2zC,EAAA3zC,GAEA,MACA,QACA,UAAA4rC,EAAA,YAAA+G,EAAA,qBAGAQ,GAAAI,EAAA,EAEA5+G,IACA,IAAAo/G,EAAArE,EAAAK,EAAAiE,YAAAxmF,OAAA0iF,GAAAnE,EAAAC,EAAA,OAAAj7C,GACA,UAAAgjD,EACA,MAEAZ,GAAAY,EAAAtB,QACO,GAEP,OAAA90E,EAEA,SAAAs2E,EAAA9G,EAAA+G,EAAAC,EAAAC,EAAA1G,EAAAb,GACA,IAAAS,KACAH,IACAG,EAAAtjG,MACAa,GAAAqpG,EACAziG,EAAA,IAEA,IAAAi8F,IACAJ,EAAAtjG,MACAa,GAAA,EACA4G,GAAA,IAEA67F,EAAAtjG,MACAa,EAAA,EACA4G,GAAA,IAEA67F,EAAAtjG,MACAa,GAAA,EACA4G,GAAA,MAIA,IAAA4iG,GAAAD,EAAA,GAAAF,EACA3C,EAAArE,EAAAC,EAAAkH,EAAAF,EAAAzG,GAAA,OAAAJ,EAAAT,GACAyH,KACA3/G,EAAA,EACA4/G,OAAA,EACA3C,OAAA,EACAC,OAAA,EACApgG,OAAA,EACA,MAAA9c,GAAAy/G,EAAA,CAIA,IAHAG,KACA3C,EAAAsC,EAAAv/G,EACAk9G,EAAAD,EAAAsC,EACAziG,EAAA,EAAiBA,EAAA0iG,EAAmB1iG,IACpC8iG,EAAAvqG,KAAAunG,EAAA9/F,GAAA1H,SAAA6nG,EAAAC,IAEAyC,EAAAtqG,KAAAuqG,GACA5/G,IAEA,OAAA2/G,EAEA,SAAAE,EAAArH,EAAAmH,EAAA5G,EAAA+G,EAAAC,EAAAtC,EAAAuC,EAAAhC,EAAAiC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApI,GACA,IAAAjvF,EAAA,KACA,GAAA+2F,EACA,UAAA/I,EAAA,yBAEA,OAAA+G,EACA,UAAA/G,EAAA,YAAA+G,EAAA,wCAEA,IAAAuC,KACAvgH,OAAA,EACAiuB,OAAA,EACAq/B,OAAA,EACA,IAAAttD,EAAA,EAAeA,EAAA+/G,EAAkB//G,IAAA,CAEjC,GADAstD,EAAA,IAAA/3C,WAAAuqG,GACArC,EACA,IAAAxvF,EAAA,EAAmBA,EAAA6xF,EAAiB7xF,IACpCq/B,EAAAr/B,GAAAwvF,EAGA8C,EAAAlrG,KAAAi4C,GAEA,IAAAkzD,EAAAb,EAAAjrG,OACA+rG,EAAAd,EAAA,GACAJ,EAAAkB,EAAA,GAAA/rG,OACA8qG,EAAAiB,EAAA/rG,OACAgsG,GAAA,EAAAr4F,EAAAhmB,MAAAm+G,GACA7H,KACAH,IACAG,EAAAtjG,MACAa,EAAA6iG,GAAA,MACAj8F,GAAA,IAEA,IAAAi8F,IACAJ,EAAAtjG,MACAa,GAAA,EACA4G,GAAA,IAEA67F,EAAAtjG,MACAa,EAAA,EACA4G,GAAA,IAEA67F,EAAAtjG,MACAa,GAAA,EACA4G,GAAA,MAIA,IAAA6jG,KACAC,OAAA,EACA53E,OAAA,EAIA,IAHAwvE,IACAoI,EAAA,IAAAhI,EAAAV,EAAAliG,KAAAkiG,EAAA9hG,MAAA8hG,EAAA7jG,MAEArU,EAAA0gH,EAAA,EAA8B1gH,GAAA,EAAQA,IAEtCgpC,EADAwvE,EACAK,EAAA+H,EAAAX,EAAAC,GAAA,GAEA3H,GAAA,EAAA0H,EAAAC,EAAAnH,GAAA,EAAA9vF,EAAA0vF,EAAAT,GAEAyI,EAAA3gH,GAAAgpC,EAEA,IAAA63E,OAAA,EACAC,OAAA,EACAj9C,OAAA,EACAk9C,OAAA,EACAnB,OAAA,EACA1pG,OAAA,EACA4G,OAAA,EACAkkG,OAAA,EACAC,OAAA,EACA,IAAAJ,EAAA,EAAgBA,EAAAX,EAAiBW,IACjC,IAAAC,EAAA,EAAkBA,EAAAb,EAAgBa,IAAA,CAGlC,IAFAj9C,EAAA,EACAk9C,EAAA,EACA9yF,EAAAyyF,EAAA,EAAkCzyF,GAAA,EAAQA,IAC1C41C,EAAA88C,EAAA1yF,GAAA4yF,GAAAC,GAAAj9C,EACAk9C,GAAAl9C,GAAA51C,EAKA,GAHA2xF,EAAAD,EAAAoB,GACA7qG,EAAAiqG,EAAAU,EAAAP,EAAAQ,EAAAT,GAAA,EACAvjG,EAAAsjG,EAAAS,EAAAR,EAAAS,EAAAR,GAAA,EACApqG,GAAA,GAAAA,EAAAqpG,GAAAO,GAAAhjG,GAAA,GAAAA,EAAA0iG,GAAAO,EACA,IAAA//G,EAAA,EAAqBA,EAAAw/G,EAAmBx/G,IAGxC,IAFAihH,EAAAV,EAAAzjG,EAAA9c,GACAghH,EAAApB,EAAA5/G,GACAiuB,EAAA,EAAuBA,EAAAsxF,EAAkBtxF,IACzCgzF,EAAA/qG,EAAA+X,IAAA+yF,EAAA/yF,OAGS,CACT,IAAAizF,OAAA,EACAC,OAAA,EACA,IAAAnhH,EAAA,EAAqBA,EAAAw/G,EAAmBx/G,IAExC,GADAmhH,EAAArkG,EAAA9c,IACAmhH,EAAA,GAAAA,GAAApB,GAKA,IAFAkB,EAAAV,EAAAY,GACAH,EAAApB,EAAA5/G,GACAiuB,EAAA,EAAuBA,EAAAsxF,EAAkBtxF,IACzCizF,EAAAhrG,EAAA+X,EACAizF,GAAA,GAAAA,EAAApB,IACAmB,EAAAC,IAAAF,EAAA/yF,KAOA,OAAAsyF,EAEA,SAAAa,EAAAprG,EAAAI,GACA,IAAAirG,KACAA,EAAAvnG,QAAA,EAAAuO,EAAAnmB,YAAA8T,EAAAI,GACA,IAAAkqC,EAAAtqC,EAAAI,EAAA,GACAkrG,EAAA,GAAAhhE,EACA,IAAAo3D,EAAA4J,GACA,UAAArK,EAAA,yBAAAqK,GAEAD,EAAApjG,KAAAqjG,EACAD,EAAAE,SAAA7J,EAAA4J,GACAD,EAAAG,qBAAA,IAAAlhE,GACA,IAAAmhE,KAAA,GAAAnhE,GACAohE,EAAA1rG,EAAAI,EAAA,GACAurG,EAAAD,GAAA,IACAE,GAAA,GAAAF,GACAtnE,EAAAhkC,EAAA,EACA,OAAAsrG,EAAA,CACAC,EAAA,aAAAt5F,EAAAnmB,YAAA8T,EAAAokC,EAAA,GACAA,GAAA,EACA,IAAA3lC,EAAAktG,EAAA,KACAC,EAAA,GAAA5rG,EAAAokC,KACA,QAAA3lC,EAAA,EACAmtG,EAAAvsG,KAAAW,EAAAokC,WAEK,OAAAsnE,GAAA,IAAAA,EACL,UAAAzK,EAAA,6BAEAoK,EAAAO,aACA,IAEA5hH,EAAA8V,EAFA+rG,EAAAR,EAAAvnG,QAAA,MAAAunG,EAAAvnG,QAAA,UACAgoG,KAEA,IAAA9hH,EAAA,EAAeA,EAAA2hH,EAAqB3hH,IAAA,CACpC,IAAA8Z,EAAA,IAAA+nG,EAAA7rG,EAAAokC,GAAA,IAAAynE,GAAA,EAAAx5F,EAAAlmB,YAAA6T,EAAAokC,IAAA,EAAA/xB,EAAAnmB,YAAA8T,EAAAokC,GACA0nE,EAAAzsG,KAAAyE,GACAsgC,GAAAynE,EAWA,GATAR,EAAAS,aACAL,GAGAJ,EAAAU,iBAAA,EAAA15F,EAAAnmB,YAAA8T,EAAAokC,GACAA,GAAA,GAHAinE,EAAAU,gBAAA/rG,EAAAokC,KAKAinE,EAAA3sG,QAAA,EAAA2T,EAAAnmB,YAAA8T,EAAAokC,GACAA,GAAA,EACA,aAAAinE,EAAA3sG,OAAA,CACA,QAAA4sG,EA4BA,UAAArK,EAAA,kCA3BA,IAAA+K,EAAAC,EAAAjsG,EAAAokC,GACA8nE,EAAAlsG,EAAAokC,EAAA+nE,GACAC,KAAA,EAAAF,GACAG,EAAA,EACAC,EAAA,IAAA/sG,WAAA8sG,GASA,IARAD,IACAE,EAAA,OACAA,EAAA,QAEAA,EAAA,GAAAN,EAAA1lG,SAAA,OACAgmG,EAAA,GAAAN,EAAA1lG,QAAA,OACAgmG,EAAA,GAAAN,EAAA1lG,QAAA,MACAgmG,EAAA,OAAAN,EAAA1lG,OACAtc,EAAAo6C,EAAAtkC,EAAAE,EAAAtB,OAA4C1U,EAAA8V,EAAQ9V,IAAA,CACpD,IAAAiuB,EAAA,EACA,MAAAA,EAAAo0F,GAAAC,EAAAr0F,KAAAjY,EAAAhW,EAAAiuB,GACAA,IAEA,GAAAA,IAAAo0F,EAAA,CACAhB,EAAA3sG,OAAA1U,EAAAqiH,EACA,OAGA,gBAAAhB,EAAA3sG,OACA,UAAAuiG,EAAA,6BAOA,OADAoK,EAAAkB,UAAAnoE,EACAinE,EAEA,SAAAmB,EAAA/vC,EAAAz8D,EAAAI,EAAA/B,GACA,IAAAouG,KACAroE,EAAAhkC,EACA,MAAAgkC,EAAA/lC,EAAA,CACA,IAAAgtG,EAAAD,EAAAprG,EAAAokC,GACAA,EAAAinE,EAAAkB,UACA,IAAAG,GACAjwC,OAAA4uC,EACArrG,QAQA,GANAy8D,EAAAkwC,eACAD,EAAAtsG,MAAAgkC,EACAA,GAAAinE,EAAA3sG,OACAguG,EAAAruG,IAAA+lC,GAEAqoE,EAAAptG,KAAAqtG,GACA,KAAArB,EAAApjG,KACA,MAGA,GAAAw0D,EAAAkwC,aACA,QAAA3iH,EAAA,EAAA8V,EAAA2sG,EAAA/tG,OAA2C1U,EAAA8V,EAAQ9V,IACnDyiH,EAAAziH,GAAAoW,MAAAgkC,EACAA,GAAAqoE,EAAAziH,GAAAyyE,OAAA/9D,OACA+tG,EAAAziH,GAAAqU,IAAA+lC,EAGA,OAAAqoE,EAEA,SAAAR,EAAAjsG,EAAAI,GACA,OACAiG,OAAA,EAAAgM,EAAAnmB,YAAA8T,EAAAI,GACAkG,QAAA,EAAA+L,EAAAnmB,YAAA8T,EAAAI,EAAA,GACAF,GAAA,EAAAmS,EAAAnmB,YAAA8T,EAAAI,EAAA,GACA0G,GAAA,EAAAuL,EAAAnmB,YAAA8T,EAAAI,EAAA,IACA4nG,oBAAA,EAAAhoG,EAAAI,EAAA,KAGA,IAAA+rG,EAAA,GACA,SAAAS,EAAAF,EAAAl9B,GACA,IAIA5oE,EAAA+7F,EAAA34G,EAAA6iH,EAJApwC,EAAAiwC,EAAAjwC,OACAz8D,EAAA0sG,EAAA1sG,KACAokC,EAAAsoE,EAAAtsG,MACA/B,EAAAquG,EAAAruG,IAEA,OAAAo+D,EAAAx0D,MACA,OACA,IAAA6kG,KACAC,GAAA,EAAA16F,EAAAlmB,YAAA6T,EAAAokC,GAYA,GAXA0oE,EAAA/H,WAAA,EAAAgI,GACAD,EAAA9H,cAAA,EAAA+H,GACAD,EAAAE,kBAAAD,GAAA,IACAD,EAAAG,kBAAAF,GAAA,IACAD,EAAAI,mBAAAH,GAAA,IACAD,EAAAK,6BAAAJ,GAAA,IACAD,EAAAM,2BAAA,IAAAL,GACAD,EAAAO,+BAAA,IAAAN,GACAD,EAAA/J,SAAAgK,GAAA,KACAD,EAAAQ,mBAAAP,GAAA,KACA3oE,GAAA,GACA0oE,EAAA/H,QAAA,CAGA,IAFA8H,EAAA,IAAAC,EAAA/J,SAAA,IACAJ,KACA34G,EAAA,EAAqBA,EAAA6iH,EAAc7iH,IACnC24G,EAAAtjG,MACAa,GAAA,EAAAmS,EAAAjmB,UAAA4T,EAAAokC,GACAt9B,GAAA,EAAAuL,EAAAjmB,UAAA4T,EAAAokC,EAAA,KAEAA,GAAA,EAEA0oE,EAAAnK,KAEA,GAAAmK,EAAA9H,aAAA8H,EAAAQ,mBAAA,CAEA,IADA3K,KACA34G,EAAA,EAAqBA,EAAA,EAAOA,IAC5B24G,EAAAtjG,MACAa,GAAA,EAAAmS,EAAAjmB,UAAA4T,EAAAokC,GACAt9B,GAAA,EAAAuL,EAAAjmB,UAAA4T,EAAAokC,EAAA,KAEAA,GAAA,EAEA0oE,EAAAxH,aAAA3C,EAEAmK,EAAA3H,yBAAA,EAAA9yF,EAAAnmB,YAAA8T,EAAAokC,GACAA,GAAA,EACA0oE,EAAA5H,oBAAA,EAAA7yF,EAAAnmB,YAAA8T,EAAAokC,GACAA,GAAA,EACAx9B,GAAAkmG,EAAArwC,EAAA34D,OAAA24D,EAAAqvC,WAAA9rG,EAAAokC,EAAA/lC,GACA,MACA,OACA,OACA,IAAAkvG,KACAA,EAAAvgH,KAAAi/G,EAAAjsG,EAAAokC,GACAA,GAAA+nE,EACA,IAAAqB,GAAA,EAAAn7F,EAAAlmB,YAAA6T,EAAAokC,GAYA,GAXAA,GAAA,EACAmpE,EAAAxI,WAAA,EAAAyI,GACAD,EAAAvI,cAAA,EAAAwI,GACAD,EAAAtF,aAAAuF,GAAA,IACAD,EAAA5F,UAAA,GAAA4F,EAAAtF,aACAsF,EAAAxF,gBAAAyF,GAAA,IACAD,EAAA1F,cAAA,GAAA2F,GACAD,EAAAvF,oBAAAwF,GAAA,IACAD,EAAA9F,kBAAA+F,GAAA,IACAD,EAAAzF,SAAA0F,GAAA,OACAD,EAAAD,mBAAAE,GAAA,KACAD,EAAAxI,QAAA,CACA,IAAA0I,GAAA,EAAAp7F,EAAAlmB,YAAA6T,EAAAokC,GACAA,GAAA,EACAmpE,EAAAG,UAAA,EAAAD,EACAF,EAAAI,UAAAF,GAAA,IACAF,EAAAK,UAAAH,GAAA,IACAF,EAAAM,oBAAAJ,GAAA,IACAF,EAAAO,oBAAAL,GAAA,IACAF,EAAAQ,oBAAAN,GAAA,KACAF,EAAAS,oBAAAP,GAAA,KACAF,EAAAU,iCAAA,MAAAR,GAEA,GAAAF,EAAAvI,aAAAuI,EAAAD,mBAAA,CAEA,IADA3K,KACA34G,EAAA,EAAqBA,EAAA,EAAOA,IAC5B24G,EAAAtjG,MACAa,GAAA,EAAAmS,EAAAjmB,UAAA4T,EAAAokC,GACAt9B,GAAA,EAAAuL,EAAAjmB,UAAA4T,EAAAokC,EAAA,KAEAA,GAAA,EAEAmpE,EAAAjI,aAAA3C,EAEA4K,EAAA7F,yBAAA,EAAAr1F,EAAAnmB,YAAA8T,EAAAokC,GACAA,GAAA,EACAx9B,GAAA2mG,EAAA9wC,EAAAqvC,WAAA9rG,EAAAokC,EAAA/lC,GACA,MACA,QACA,IAAA6vG,KACAC,EAAAnuG,EAAAokC,KACA8pE,EAAA1L,OAAA,EAAA2L,GACAD,EAAAnL,SAAAoL,GAAA,IACAD,EAAA3E,aAAAvpG,EAAAokC,KACA8pE,EAAA1E,cAAAxpG,EAAAokC,KACA8pE,EAAAzE,iBAAA,EAAAp3F,EAAAnmB,YAAA8T,EAAAokC,GACAA,GAAA,EACAx9B,GAAAsnG,EAAAzxC,EAAA34D,OAAA9D,EAAAokC,EAAA/lC,GACA,MACA,QACA,QACA,IAAA+vG,KACAA,EAAAphH,KAAAi/G,EAAAjsG,EAAAokC,GACAA,GAAA+nE,EACA,IAAAkC,EAAAruG,EAAAokC,KACAgqE,EAAA5L,OAAA,EAAA6L,GACAD,EAAArL,SAAAsL,GAAA,IACAD,EAAApE,cAAA,EAAAqE,GACAD,EAAApG,oBAAAqG,GAAA,IACAD,EAAA3G,kBAAA4G,GAAA,IACAD,EAAAnE,WAAA,EAAA53F,EAAAnmB,YAAA8T,EAAAokC,GACAA,GAAA,EACAgqE,EAAAlE,YAAA,EAAA73F,EAAAnmB,YAAA8T,EAAAokC,GACAA,GAAA,EACAgqE,EAAAjE,YAAA,cAAA93F,EAAAnmB,YAAA8T,EAAAokC,GACAA,GAAA,EACAgqE,EAAAhE,YAAA,cAAA/3F,EAAAnmB,YAAA8T,EAAAokC,GACAA,GAAA,EACAgqE,EAAA/D,aAAA,EAAAh4F,EAAAlmB,YAAA6T,EAAAokC,GACAA,GAAA,EACAgqE,EAAA9D,aAAA,EAAAj4F,EAAAlmB,YAAA6T,EAAAokC,GACAA,GAAA,EACAx9B,GAAAwnG,EAAA3xC,EAAAqvC,WAAA9rG,EAAAokC,EAAA/lC,GACA,MACA,QACA,QACA,IAAAiwG,KACAA,EAAAthH,KAAAi/G,EAAAjsG,EAAAokC,GACAA,GAAA+nE,EACA,IAAAD,EAAAlsG,EAAAokC,KAIA,GAHAkqE,EAAA9L,OAAA,EAAA0J,GACAoC,EAAAvL,SAAAmJ,GAAA,IACAoC,EAAA5L,cAAA,EAAAwJ,IACAoC,EAAA9L,IAAA,CAGA,IAFAqK,EAAA,IAAAyB,EAAAvL,SAAA,IACAJ,KACA34G,EAAA,EAAqBA,EAAA6iH,EAAc7iH,IACnC24G,EAAAtjG,MACAa,GAAA,EAAAmS,EAAAjmB,UAAA4T,EAAAokC,GACAt9B,GAAA,EAAAuL,EAAAjmB,UAAA4T,EAAAokC,EAAA,KAEAA,GAAA,EAEAkqE,EAAA3L,KAEA/7F,GAAA0nG,EAAAtuG,EAAAokC,EAAA/lC,GACA,MACA,QACA,IAAAkwG,GACAloG,OAAA,EAAAgM,EAAAnmB,YAAA8T,EAAAokC,GACA99B,QAAA,EAAA+L,EAAAnmB,YAAA8T,EAAAokC,EAAA,GACAoqE,aAAA,EAAAn8F,EAAAnmB,YAAA8T,EAAAokC,EAAA,GACAqqE,aAAA,EAAAp8F,EAAAnmB,YAAA8T,EAAAokC,EAAA,KAEA,aAAAmqE,EAAAjoG,eACAioG,EAAAjoG,OAEA,IAAAooG,EAAA1uG,EAAAokC,EAAA,KACA,EAAA/xB,EAAAlmB,YAAA6T,EAAAokC,EAAA,IACAmqE,EAAAI,YAAA,EAAAD,GACAH,EAAAvJ,cAAA,EAAA0J,GACAH,EAAA9G,kBAAAiH,GAAA,IACAH,EAAAvG,oBAAA0G,GAAA,IACAH,EAAAK,kBAAA,GAAAF,GACAH,EAAAM,+BAAA,GAAAH,GACA9nG,GAAA2nG,GACA,MACA,QACA,MACA,QACA,MACA,QACA,MACA,QACA3nG,GAAA61D,EAAA34D,OAAA9D,EAAAokC,EAAA/lC,GACA,MACA,QACA,MACA,QACA,UAAA4iG,EAAA,gBAAAxkC,EAAA8uC,SAAA,IAAA9uC,EAAAx0D,KAAA,wBAEA,IAAA6mG,EAAA,KAAAryC,EAAA8uC,SACAuD,KAAAt/B,GACAA,EAAAs/B,GAAAhwG,MAAA0wE,EAAA5oE,GAGA,SAAAmoG,EAAAtC,EAAAj9B,GACA,QAAAxlF,EAAA,EAAA8V,EAAA2sG,EAAA/tG,OAAyC1U,EAAA8V,EAAQ9V,IACjD4iH,EAAAH,EAAAziH,GAAAwlF,GAGA,SAAAw/B,EAAAnrE,GAEA,IADA,IAAA2rC,EAAA,IAAAy/B,EACAjlH,EAAA,EAAA8V,EAAA+jC,EAAAnlC,OAAuC1U,EAAA8V,EAAQ9V,IAAA,CAC/C,IAAAmV,EAAA0kC,EAAA75C,GACAyiH,EAAAD,KAAoCrtG,EAAAa,KAAAb,EAAAiB,MAAAjB,EAAAd,KACpC0wG,EAAAtC,EAAAj9B,GAEA,OAAAA,EAAA/uE,OAEA,SAAAwuG,KA8IA,SAAAC,EAAAC,GACA,IAAAA,EAAAzwG,QACAT,KAAAmxG,OAAA,EACAnxG,KAAAoxG,SAAA,EACApxG,KAAAqxG,aAAAH,EAAA,GACAlxG,KAAAsxG,YAAA,EACAtxG,KAAAuxG,WAAAL,EAAA,GACAlxG,KAAAwxG,cAAA,IAEAxxG,KAAAmxG,OAAA,EACAnxG,KAAAoxG,SAAAF,EAAA,GACAlxG,KAAAqxG,aAAAH,EAAA,GACAlxG,KAAAsxG,YAAAJ,EAAA,GACAlxG,KAAAuxG,WAAAL,EAAA,GACAlxG,KAAAwxG,aAAA,UAAAN,EAAA,IAGA,SAAAO,EAAAC,GACA1xG,KAAA2xG,YACAD,GACA1xG,KAAA4xG,QAAA,EACA5xG,KAAAsxG,YAAAI,EAAAJ,YACAtxG,KAAAoxG,SAAAM,EAAAN,SACApxG,KAAAwxG,aAAAE,EAAAF,aACAxxG,KAAAmxG,MAAAO,EAAAP,OAEAnxG,KAAA4xG,QAAA,EA+BA,SAAAC,EAAAC,EAAAC,GACAA,GACA/xG,KAAAgyG,kBAAAF,GAEA9xG,KAAAiyG,SAAA,IAAAR,EAAA,MACA,IAAA1lH,OAAA,EACA8V,EAAAiwG,EAAArxG,OACAixG,OAAA,EACA,IAAA3lH,EAAA,EAAeA,EAAA8V,EAAQ9V,IACvB2lH,EAAAI,EAAA/lH,GACA2lH,EAAAL,aAAA,GACArxG,KAAAiyG,SAAAC,UAAAR,IAAAL,aAAA,GAyCA,SAAAc,EAAApwG,EAAAI,EAAA/B,GACA,IAAAisC,EAAAtqC,EAAAI,GACAiwG,EAAA,cAAAh+F,EAAAnmB,YAAA8T,EAAAI,EAAA,GACAkwG,EAAA,cAAAj+F,EAAAnmB,YAAA8T,EAAAI,EAAA,GACAmyE,EAAA,IAAAqwB,EAAA5iG,EAAAI,EAAA,EAAA/B,GACAkyG,EAAA,GAAAjmE,GAAA,KACAkmE,EAAA,GAAAlmE,GAAA,KACAylE,KACAT,OAAA,EACAC,OAAA,EACAkB,EAAAJ,EACA,GACAf,EAAA/8B,EAAAl4D,SAAAk2F,GACAhB,EAAAh9B,EAAAl4D,SAAAm2F,GACAT,EAAA1wG,KAAA,IAAA6vG,GAAAuB,EAAAnB,EAAAC,EAAA,KACAkB,GAAA,GAAAlB,QACKkB,EAAAH,GASL,OARAhB,EAAA/8B,EAAAl4D,SAAAk2F,GACAR,EAAA1wG,KAAA,IAAA6vG,GAAAmB,EAAA,EAAAf,EAAA,gBACAA,EAAA/8B,EAAAl4D,SAAAk2F,GACAR,EAAA1wG,KAAA,IAAA6vG,GAAAoB,EAAAhB,EAAA,QACA,EAAAhlE,IACAglE,EAAA/8B,EAAAl4D,SAAAk2F,GACAR,EAAA1wG,KAAA,IAAA6vG,GAAAI,EAAA,MAEA,IAAAQ,EAAAC,GAAA,GAnRAd,EAAA/jH,WACAwlH,kBAAA,SAAA1jH,GACAiR,KAAA0yG,gBAAA3jH,EACA,IAAAirC,EAAAjrC,EAAAqZ,MAAA,KACA5F,EAAA,IAAA8nD,kBAAAtwB,EAAAjrC,EAAAsZ,QACA,GAAAtZ,EAAAy6G,kBACA,QAAAz9G,EAAA,EAAA8V,EAAAW,EAAA/B,OAA2C1U,EAAA8V,EAAQ9V,IACnDyW,EAAAzW,GAAA,IAGAiU,KAAAwC,UAEAmwG,WAAA,SAAAC,EAAA79E,GACA,IAQAhpC,EAAAiuB,EAAA64F,EAAAzwG,EARAkuG,EAAAtwG,KAAA0yG,gBACAtqG,EAAAwqG,EAAAxqG,MACAC,EAAAuqG,EAAAvqG,OACA2xB,EAAAs2E,EAAAloG,MAAA,KACA2hG,EAAAuG,EAAAM,4BAAAgC,EAAA7I,oBAAAuG,EAAAvG,oBACAvnG,EAAAxC,KAAAwC,OACAswG,EAAA,QAAAF,EAAA3wG,GACAmkE,EAAAwsC,EAAA/pG,EAAAmxB,GAAA44E,EAAA3wG,GAAA,GAEA,OAAA8nG,GACA,OACA,IAAAh+G,EAAA,EAAqBA,EAAAsc,EAAYtc,IAAA,CAGjC,IAFA8mH,EAAAC,EACA1wG,EAAAgkE,EACApsD,EAAA,EAAuBA,EAAA5R,EAAW4R,IAClC+a,EAAAhpC,GAAAiuB,KACAxX,EAAAJ,IAAAywG,GAEAA,IAAA,EACAA,IACAA,EAAA,IACAzwG,KAGAgkE,GAAApsC,EAEA,MACA,OACA,IAAAjuC,EAAA,EAAqBA,EAAAsc,EAAYtc,IAAA,CAGjC,IAFA8mH,EAAAC,EACA1wG,EAAAgkE,EACApsD,EAAA,EAAuBA,EAAA5R,EAAW4R,IAClC+a,EAAAhpC,GAAAiuB,KACAxX,EAAAJ,IAAAywG,GAEAA,IAAA,EACAA,IACAA,EAAA,IACAzwG,KAGAgkE,GAAApsC,EAEA,MACA,QACA,UAAAgpE,EAAA,YAAA+G,EAAA,uBAGAgJ,yBAAA,SAAAC,EAAAjxG,EAAAI,EAAA/B,GACA,IAAAwyG,EAAAI,EAAAjkH,KACAk1G,EAAA,IAAAf,EAAAnhG,EAAAI,EAAA/B,GACA20B,EAAAuvE,EAAA0O,EAAAzO,IAAAqO,EAAAxqG,MAAAwqG,EAAAvqG,OAAA2qG,EAAAlO,SAAAkO,EAAAvO,WAAA,KAAAuO,EAAAtO,GAAAT,GACAjkG,KAAA2yG,WAAAC,EAAA79E,IAEAk+E,iCAAA,WACAjzG,KAAA+yG,yBAAAlyG,MAAAb,KAAAmK,YAEA+oG,mBAAA,SAAArE,EAAAsE,EAAAC,EAAArxG,EAAAI,EAAA/B,GACA,IAAA+mG,OAAA,EACAG,OAAA,EACAuH,EAAA/H,UACAK,EAAAkM,EAAAxE,EAAAuE,EAAApzG,KAAAszG,cACAhM,EAAA,IAAA3C,EAAA5iG,EAAAI,EAAA/B,IAEA,IAAA4mG,EAAAhnG,KAAAgnG,QACAA,IACAhnG,KAAAgnG,cAGA,IADA,IAAA2C,KACA59G,EAAA,EAAA8V,EAAAuxG,EAAA3yG,OAAmD1U,EAAA8V,EAAQ9V,IAAA,CAC3D,IAAAwnH,EAAAvM,EAAAoM,EAAArnH,IACAwnH,IACA5J,IAAAp9E,OAAAgnF,IAGA,IAAAtP,EAAA,IAAAf,EAAAnhG,EAAAI,EAAA/B,GACA4mG,EAAAmM,GAAAtM,EAAAgI,EAAA/H,QAAA+H,EAAA9H,WAAA4C,EAAAkF,EAAA5H,mBAAA4H,EAAA3H,wBAAAC,EAAA0H,EAAA/J,SAAA+J,EAAAnK,GAAAmK,EAAAQ,mBAAAR,EAAAxH,aAAApD,EAAAqD,IAEAkM,sBAAA,SAAAR,EAAAI,EAAArxG,EAAAI,EAAA/B,GAMA,IALA,IAAAwyG,EAAAI,EAAAjkH,KACAo4G,OAAA,EACAG,OAAA,EACAN,EAAAhnG,KAAAgnG,QACA2C,KACA59G,EAAA,EAAA8V,EAAAuxG,EAAA3yG,OAAmD1U,EAAA8V,EAAQ9V,IAAA,CAC3D,IAAAwnH,EAAAvM,EAAAoM,EAAArnH,IACAwnH,IACA5J,IAAAp9E,OAAAgnF,IAGA,IAAA9L,GAAA,EAAArzF,EAAAhmB,MAAAu7G,EAAAlpG,QACAuyG,EAAAlM,UACAQ,EAAA,IAAA3C,EAAA5iG,EAAAI,EAAA/B,GACA+mG,EAAAsM,EAAAT,EAAAI,EAAApzG,KAAAszG,aAAA3J,EAAAlpG,OAAA6mG,IAEA,IAAArD,EAAA,IAAAf,EAAAnhG,EAAAI,EAAA/B,GACA20B,EAAAszE,EAAA2K,EAAAlM,QAAAkM,EAAAjM,WAAA6L,EAAAxqG,MAAAwqG,EAAAvqG,OAAA2qG,EAAAxJ,kBAAAwJ,EAAAvJ,wBAAAuJ,EAAAtJ,UAAAC,EAAAlC,EAAAuL,EAAApJ,WAAAoJ,EAAAnJ,SAAAmJ,EAAAlJ,gBAAAkJ,EAAAjJ,oBAAA5C,EAAA6L,EAAA3D,mBAAA2D,EAAA3L,aAAApD,EAAA+O,EAAAhJ,aAAA1C,GACAtnG,KAAA2yG,WAAAC,EAAA79E,IAEA2+E,8BAAA,WACA1zG,KAAAwzG,sBAAA3yG,MAAAb,KAAAmK,YAEAwpG,oBAAA,SAAA9E,EAAAsE,EAAApxG,EAAAI,EAAA/B,GACA,IAAAsrG,EAAA1rG,KAAA0rG,SACAA,IACA1rG,KAAA0rG,eAEA,IAAAzH,EAAA,IAAAf,EAAAnhG,EAAAI,EAAA/B,GACAsrG,EAAAyH,GAAA9H,EAAAwD,EAAAtK,IAAAsK,EAAAvD,aAAAuD,EAAAtD,cAAAsD,EAAArD,gBAAAqD,EAAA/J,SAAAb,IAEA2P,0BAAA,SAAAZ,EAAAI,EAAArxG,EAAAI,EAAA/B,GACA,IAAAsrG,EAAA1rG,KAAA0rG,SAAA0H,EAAA,IACAR,EAAAI,EAAAjkH,KACAk1G,EAAA,IAAAf,EAAAnhG,EAAAI,EAAA/B,GACA20B,EAAA62E,EAAAoH,EAAAzO,IAAAmH,EAAAsH,EAAAlO,SAAA8N,EAAAxqG,MAAAwqG,EAAAvqG,OAAA2qG,EAAAxJ,kBAAAwJ,EAAAjH,WAAAiH,EAAAjJ,oBAAAiJ,EAAAhH,UAAAgH,EAAA/G,WAAA+G,EAAA9G,YAAA8G,EAAA7G,YAAA6G,EAAA5G,YAAA4G,EAAA3G,YAAApI,GACAjkG,KAAA2yG,WAAAC,EAAA79E,IAEA8+E,kCAAA,WACA7zG,KAAA4zG,0BAAA/yG,MAAAb,KAAAmK,YAEA2pG,SAAA,SAAAX,EAAApxG,EAAAI,EAAA/B,GACA,IAAAkzG,EAAAtzG,KAAAszG,aACAA,IACAtzG,KAAAszG,mBAEAA,EAAAH,GAAAhB,EAAApwG,EAAAI,EAAA/B,KAgCAqxG,EAAAxkH,WACAilH,UAAA,SAAAR,EAAA17F,GACA,IAAA45C,EAAA8hD,EAAAH,YAAAv7F,EAAA,EACA,GAAAA,GAAA,EACAhW,KAAA2xG,SAAA/hD,GAAA,IAAA6hD,EAAAC,OACO,CACP,IAAAphE,EAAAtwC,KAAA2xG,SAAA/hD,GACAtf,IACAtwC,KAAA2xG,SAAA/hD,GAAAtf,EAAA,IAAAmhE,EAAA,OAEAnhE,EAAA4hE,UAAAR,EAAA17F,EAAA,KAGA+9F,WAAA,SAAAz/B,GACA,GAAAt0E,KAAA4xG,OAAA,CACA,GAAA5xG,KAAAmxG,MACA,YAEA,IAAA6C,EAAA1/B,EAAAl4D,SAAApc,KAAAsxG,aACA,OAAAtxG,KAAAoxG,UAAApxG,KAAAwxG,cAAAwC,KAEA,IAAA1jE,EAAAtwC,KAAA2xG,SAAAr9B,EAAAh5B,WACA,IAAAhL,EACA,UAAA0yD,EAAA,wBAEA,OAAA1yD,EAAAyjE,WAAAz/B,KAkBAu9B,EAAA5kH,WACA23B,OAAA,SAAA0vD,GACA,OAAAt0E,KAAAiyG,SAAA8B,WAAAz/B,IAEA09B,kBAAA,SAAAF,GACA,IAAAmC,EAAAnC,EAAArxG,OACAyzG,EAAA,EACAnoH,OAAA,EACA,IAAAA,EAAA,EAAiBA,EAAAkoH,EAAiBloH,IAClCmoH,EAAAlzG,KAAAqD,IAAA6vG,EAAApC,EAAA/lH,GAAAslH,cAEA,IAAA8C,EAAA,IAAA5xG,YAAA2xG,EAAA,GACA,IAAAnoH,EAAA,EAAiBA,EAAAkoH,EAAiBloH,IAClCooH,EAAArC,EAAA/lH,GAAAslH,gBAEA,IAAA+C,EAAA,EACAC,EAAA,EACAC,OAAA,EACAC,OAAA,EACA7C,OAAA,EACAyC,EAAA,KACA,MAAAC,GAAAF,EAAA,CACAG,IAAAF,EAAAC,EAAA,MACAE,EAAAD,EACAE,EAAA,EACA,MAAAA,EAAAN,EACAvC,EAAAI,EAAAyC,GACA7C,EAAAL,eAAA+C,IACA1C,EAAAH,WAAA+C,EACAA,KAEAC,IAEAH,OA+BA,IAAAI,KACA,SAAA5M,EAAA/hG,GACA,IAAAoR,EAAAu9F,EAAA3uG,GACA,GAAAoR,EACA,OAAAA,EAEA,IAAA66F,OAAA,EACA,OAAAjsG,GACA,OACAisG,IAAA,iDACA,MACA,OACAA,IAAA,yEACA,MACA,OACAA,KAAA,gHACA,MACA,OACAA,IAAA,kEACA,MACA,OACAA,KAAA,wGACA,MACA,OACAA,KAAA,qMACA,MACA,OACAA,KAAA,4MACA,MACA,OACAA,KAAA,0QACA,MACA,OACAA,KAAA,yRACA,MACA,QACAA,KAAA,+QACA,MACA,QACAA,IAAA,4JACA,MACA,QACAA,IAAA,2JACA,MACA,QACAA,IAAA,uJACA,MACA,QACAA,KAAA,mDACA,MACA,QACAA,KAAA,kKACA,MACA,QACA,UAAA9O,EAAA,oBAAAn9F,EAAA,mBAEA,IAAApF,EAAAqxG,EAAArxG,OACA1U,OAAA,EACA,IAAAA,EAAA,EAAeA,EAAA0U,EAAY1U,IAC3B+lH,EAAA/lH,GAAA,IAAAklH,EAAAa,EAAA/lH,IAIA,OAFAkrB,EAAA,IAAA46F,EAAAC,GAAA,GACA0C,EAAA3uG,GAAAoR,EACAA,EAEA,SAAA0tF,EAAA5iG,EAAAI,EAAA/B,GACAJ,KAAA+B,OACA/B,KAAAmC,QACAnC,KAAAI,MACAJ,KAAAmmC,SAAAhkC,EACAnC,KAAAgW,OAAA,EACAhW,KAAAy0G,YAAA,EAiCA,SAAAC,EAAAjnF,EAAAogF,EAAAyF,GACA,IAAAvlE,EAAA,EACAhiD,OAAA,EACA8V,EAAAgsG,EAAAptG,OACAwW,OAAA,EACA,IAAAlrB,EAAA,EAAeA,EAAA8V,EAAQ9V,IAEvB,GADAkrB,EAAAq8F,EAAAzF,EAAA9hH,IACAkrB,EAAA,CACA,GAAAwW,IAAAsgB,EACA,OAAA92B,EAEA82B,IAGA,UAAAi1D,EAAA,mCAEA,SAAAyQ,EAAAnE,EAAAzB,EAAAyF,EAAAqB,EAAArgC,GACA,IAAAp9D,KACAnrB,OAAA,EACA6vB,OAAA,EACA,IAAA7vB,EAAA,EAAeA,GAAA,GAASA,IACxB6vB,EAAA04D,EAAAl4D,SAAA,GACAlF,EAAA9V,KAAA,IAAA6vG,GAAAllH,EAAA6vB,EAAA,OAEA,IAAAg5F,EAAA,IAAA/C,EAAA36F,GAAA,GAEA,IADAA,EAAAzW,OAAA,EACA1U,EAAA,EAAeA,EAAA4oH,GAEf,GADA/4F,EAAAg5F,EAAAhwF,OAAA0vD,GACA14D,GAAA,IACA,IAAAi5F,OAAA,EACAC,OAAA,EACA96F,OAAA,EACA,OAAA4B,GACA,QACA,OAAA7vB,EACA,UAAAi3G,EAAA,wCAEA8R,EAAAxgC,EAAAl4D,SAAA,KACAy4F,EAAA39F,EAAAnrB,EAAA,GAAAslH,aACA,MACA,QACAyD,EAAAxgC,EAAAl4D,SAAA,KACAy4F,EAAA,EACA,MACA,QACAC,EAAAxgC,EAAAl4D,SAAA,MACAy4F,EAAA,EACA,MACA,QACA,UAAA7R,EAAA,0CAEA,IAAAhpF,EAAA,EAAmBA,EAAA86F,EAAqB96F,IACxC9C,EAAA9V,KAAA,IAAA6vG,GAAAllH,EAAA8oH,EAAA,OACA9oH,SAGAmrB,EAAA9V,KAAA,IAAA6vG,GAAAllH,EAAA6vB,EAAA,OACA7vB,IAGAuoF,EAAAx7B,YACA,IAAA2xD,EAAA,IAAAoH,EAAA36F,GAAA,GACA69F,EAAA,EACAzK,OAAA,EACAc,OAAA,EACAlB,OAAA,EACA,OAAAoF,EAAAG,WACA,OACA,OACAnF,EAAA1C,EAAA0H,EAAAG,UAAA,GACA,MACA,OACAnF,EAAAoK,EAAAK,EAAAlH,EAAAyF,GACAyB,IACA,MACA,QACA,UAAA/R,EAAA,+BAEA,OAAAsM,EAAAI,WACA,OACA,OACA,OACAtE,EAAAxD,EAAA0H,EAAAI,UAAA,GACA,MACA,OACAtE,EAAAsJ,EAAAK,EAAAlH,EAAAyF,GACAyB,IACA,MACA,QACA,UAAA/R,EAAA,+BAEA,OAAAsM,EAAAK,WACA,OACA,OACA,OACAzF,EAAAtC,EAAA0H,EAAAK,UAAA,IACA,MACA,OACAzF,EAAAwK,EAAAK,EAAAlH,EAAAyF,GACAyB,IACA,MACA,QACA,UAAA/R,EAAA,+BAEA,GAAAsM,EAAAvI,WACA,UAAA/D,EAAA,4CAEA,OACAyH,gBACAH,cACAc,cACAlB,eAGA,SAAAmJ,EAAAxE,EAAAhB,EAAAyF,GACA,IAAAyB,EAAA,EACAjN,OAAA,EACAK,OAAA,EACA,OAAA0G,EAAAE,mBACA,OACA,OACAjH,EAAAF,EAAAiH,EAAAE,kBAAA,GACA,MACA,OACAjH,EAAA4M,EAAAK,EAAAlH,EAAAyF,GACAyB,IACA,MACA,QACA,UAAA/R,EAAA,+BAEA,OAAA6L,EAAAG,mBACA,OACA,OACA7G,EAAAP,EAAAiH,EAAAG,kBAAA,GACA,MACA,OACA7G,EAAAuM,EAAAK,EAAAlH,EAAAyF,GACAyB,IACA,MACA,QACA,UAAA/R,EAAA,+BAEA,IAAA0F,OAAA,EACAsM,OAAA,EAYA,OAXAnG,EAAAI,oBACAvG,EAAAgM,EAAAK,EAAAlH,EAAAyF,GACAyB,KAEArM,EAAAd,EAAA,GAGAoN,EADAnG,EAAAK,6BACAwF,EAAAK,EAAAlH,EAAAyF,GAEA1L,EAAA,IAGAE,mBACAK,kBACAO,kBACAsM,2BAGA,SAAApM,EAAAt0B,EAAAlsE,EAAAC,GACA,IAAA0sB,KACA9yB,OAAA,EACA4G,OAAA,EACAwwC,OAAA,EACA,IAAAxwC,EAAA,EAAeA,EAAAR,EAAYQ,IAAA,CAG3B,IAFAwwC,EAAA,IAAA/3C,WAAA8G,GACA2sB,EAAA3zB,KAAAi4C,GACAp3C,EAAA,EAAiBA,EAAAmG,EAAWnG,IAC5Bo3C,EAAAp3C,GAAAqyE,EAAAh5B,UAEAg5B,EAAAx7B,YAEA,OAAA/jB,EAEA,SAAA6vE,EAAA9pF,EAAA1S,EAAAC,EAAA4sG,GACA,IAAAl8F,GACA44C,GAAA,EACA2wC,QAAAl6F,EACAm6F,KAAAl6F,EACAo6F,UAAA,EACAD,WAAAyS,GAEA9sD,EAAA,IAAA+5C,EAAAzqD,gBAAA38B,EAAA/B,GACAgc,KACA9yB,OAAA,EACA4G,OAAA,EACAwwC,OAAA,EACAo7D,OAAA,EACAz+F,OAAA,EACAT,GAAA,EACA,IAAA1M,EAAA,EAAeA,EAAAR,EAAYQ,IAI3B,IAHAwwC,EAAA,IAAA/3C,WAAA8G,GACA2sB,EAAA3zB,KAAAi4C,GACArjC,GAAA,EACA/T,EAAA,EAAiBA,EAAAmG,EAAWnG,IAC5B+T,EAAA,IACAy+F,EAAAtsD,EAAAtO,gBACA,IAAA46D,IACAA,EAAA,EACAl/F,GAAA,GAEAS,EAAA,GAEAqjC,EAAAp3C,GAAAwyG,GAAAz+F,EAAA,EACAA,IAGA,GAAAi/F,IAAA1/F,EAEA,IADA,IAAA2/F,EAAA,EACAnpH,EAAA,EAAqBA,EAAAmpH,EAAqBnpH,IAC1C,QAAAo8D,EAAAtO,eACA,MAIA,OAAA9kB,EAEA,SAAA6tE,KAMA,OAjQA+B,EAAA13G,WACAquD,QAAA,WACA,GAAAt7C,KAAAgW,MAAA,GACA,GAAAhW,KAAAmmC,UAAAnmC,KAAAI,IACA,UAAA4iG,EAAA,iCAEAhjG,KAAAy0G,YAAAz0G,KAAA+B,KAAA/B,KAAAmmC,YACAnmC,KAAAgW,MAAA,EAEA,IAAA45C,EAAA5vD,KAAAy0G,aAAAz0G,KAAAgW,MAAA,EAEA,OADAhW,KAAAgW,QACA45C,GAEAxzC,SAAA,SAAA+4F,GACA,IAAAzvG,EAAA,EACA3Z,OAAA,EACA,IAAAA,EAAAopH,EAAA,EAA2BppH,GAAA,EAAQA,IACnC2Z,GAAA1F,KAAAs7C,WAAAvvD,EAEA,OAAA2Z,GAEAozC,UAAA,WACA94C,KAAAgW,OAAA,GAEA0X,KAAA,WACA,OAAA1tB,KAAAmmC,UAAAnmC,KAAAI,KACA,EAEAJ,KAAA+B,KAAA/B,KAAAmmC,cAgOAy8D,EAAA31G,WACA81G,YAAA,SAAAn9D,GACA,OAAAmrE,EAAAnrE,KAGAg9D,EA3tDA,GA6tDAn3G,EAAAm3G,cAIA,SAAAp3G,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAorC,eAAArlC,EAEA,IAAAC,EAAA,oBAAAC,QAAA,kBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,oBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAzE,UAAA,gBAAA2E,GAE5IwiB,EAAAvoB,EAAA,GAEAupH,EAAA,WACA,SAAAA,EAAAp3G,GACAgC,KAAAC,QAAA,eAAAjC,EAKA,OAHAo3G,EAAAnoH,UAAA,IAAAmR,MACAg3G,EAAAnoH,UAAAZ,KAAA,YACA+oH,EAAAvjH,YAAAujH,EACAA,EAPA,GASAC,EAAA,WACA,SAAAA,EAAAp1G,EAAAq1G,GACAt1G,KAAAC,UACAD,KAAAs1G,YAKA,OAHAD,EAAApoH,UAAA,IAAAmR,MACAi3G,EAAApoH,UAAAZ,KAAA,iBACAgpH,EAAAxjH,YAAAwjH,EACAA,EARA,GAUAx+E,EAAA,WACA,IAAA0+E,EAAA,IAAAj0G,YAAA,wLACAk0G,EAAA,KACAC,EAAA,IACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACA,SAAAl/E,IACA72B,KAAAo3B,gBAAA,KACAp3B,KAAAq3B,gBAAA,EAEA,SAAA2+E,EAAAz9F,EAAApV,GACA,IAEApX,EACAiuB,EAHApB,EAAA,EACA7Y,KAGAU,EAAA,GACA,MAAAA,EAAA,IAAA8X,EAAA9X,EAAA,GACAA,IAEAV,EAAAqB,MACAuwG,YACAlkF,MAAA,IAEA,IACAnR,EADAnvB,EAAA4S,EAAA,GAEA,IAAAhU,EAAA,EAAeA,EAAA0U,EAAY1U,IAAA,CAC3B,IAAAiuB,EAAA,EAAiBA,EAAAzB,EAAAxsB,GAAoBiuB,IAAA,CACrC7sB,EAAA4S,EAAA8vC,MACA1iD,EAAAwkH,SAAAxkH,EAAAsgC,OAAAtqB,EAAAyV,GACA,MAAAzrB,EAAAsgC,MAAA,EACAtgC,EAAA4S,EAAA8vC,MAEA1iD,EAAAsgC,QACA1tB,EAAAqB,KAAAjU,GACA,MAAA4S,EAAAU,QAAA1U,EACAgU,EAAAqB,KAAAkb,GACAq1F,YACAlkF,MAAA,IAEAtgC,EAAAwkH,SAAAxkH,EAAAsgC,OAAAnR,EAAAq1F,SACAxkH,EAAAmvB,EAEA1D,IAEA7sB,EAAA,EAAA0U,IACAV,EAAAqB,KAAAkb,GACAq1F,YACAlkF,MAAA,IAEAtgC,EAAAwkH,SAAAxkH,EAAAsgC,OAAAnR,EAAAq1F,SACAxkH,EAAAmvB,GAGA,OAAAvc,EAAA,GAAA4xG,SAEA,SAAAsE,EAAA35D,EAAAjD,EAAA68D,GACA,YAAA55D,EAAA65D,cAAA,GAAA98D,EAAA68D,GAEA,SAAAE,EAAAr0G,EAAAK,EAAAi0G,EAAAl5D,EAAAm5D,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAxsG,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,IAAAA,UAAA,GAEAysG,EAAAP,EAAAO,YACAC,EAAAR,EAAAQ,YACAC,EAAA10G,EACA20G,EAAA,EACAC,EAAA,EACA,SAAA17D,IACA,GAAA07D,EAAA,EAEA,OADAA,IACAD,GAAAC,EAAA,EAGA,GADAD,EAAAh1G,EAAAK,KACA,MAAA20G,EAAA,CACA,IAAAE,EAAAl1G,EAAAK,KACA,GAAA60G,EAAA,CACA,SAAAA,GAAAN,EAAA,CACAv0G,GAAA,EACA,IAAAkzG,EAAAvzG,EAAAK,MAAA,EAAAL,EAAAK,KACA,GAAAkzG,EAAA,GAAAA,IAAAe,EAAAf,UACA,UAAAD,EAAA,oDAAAC,GAGA,UAAAF,EAAA,sBAAA2B,GAAA,EAAAE,GAAA/rG,SAAA,MAIA,OADA8rG,EAAA,EACAD,IAAA,EAEA,SAAAG,EAAAC,GACA,IAAA7mE,EAAA6mE,EACA,SAEA,GADA7mE,IAAAgL,KACA,kBAAAhL,EACA,OAAAA,EAEA,oCAAAA,EAAA,YAAA7+C,EAAA6+C,IACA,UAAA8kE,EAAA,6BAIA,SAAAgC,EAAA32G,GACA,IAAA5T,EAAA,EACA,MAAA4T,EAAA,EACA5T,KAAA,EAAAyuD,IACA76C,IAEA,OAAA5T,EAEA,SAAAwqH,EAAA52G,GACA,OAAAA,EACA,WAAA66C,IAAA,KAEA,IAAAzuD,EAAAuqH,EAAA32G,GACA,OAAA5T,GAAA,GAAA4T,EAAA,EACA5T,EAEAA,IAAA,GAAA4T,GAAA,EAEA,SAAA62G,EAAAh7D,EAAAl6C,GACA,IAAAuV,EAAAu/F,EAAA56D,EAAAi7D,gBACAzpC,EAAA,IAAAn2D,EAAA,EAAA0/F,EAAA1/F,GACA2kC,EAAAk7D,UAAAp1G,GAAAk6C,EAAAm7D,MAAA3pC,EACA,IAAAl1D,EAAA,EACA,MAAAA,EAAA,IACA,IAAA8+F,EAAAR,EAAA56D,EAAAq7D,gBACAvqH,EAAA,GAAAsqH,EACAp0G,EAAAo0G,GAAA,EACA,OAAAtqH,EAAA,CAOAwrB,GAAAtV,EACA,IAAAgyD,EAAAigD,EAAA38F,GACA0jC,EAAAk7D,UAAAp1G,EAAAkzD,GAAA+hD,EAAAjqH,GACAwrB,QAVA,CACA,GAAAtV,EAAA,GACA,MAEAsV,GAAA,KASA,SAAAg/F,EAAAt7D,EAAAl6C,GACA,IAAAuV,EAAAu/F,EAAA56D,EAAAi7D,gBACAzpC,EAAA,IAAAn2D,EAAA,EAAA0/F,EAAA1/F,IAAA++F,EACAp6D,EAAAk7D,UAAAp1G,GAAAk6C,EAAAm7D,MAAA3pC,EAEA,SAAA+pC,EAAAv7D,EAAAl6C,GACAk6C,EAAAk7D,UAAAp1G,IAAAk5C,KAAAo7D,EAEA,IAAAoB,EAAA,EACA,SAAAC,EAAAz7D,EAAAl6C,GACA,GAAA01G,EAAA,EACAA,QADA,CAIA,IAAAl/F,EAAA29F,EACAt3G,EAAAu3G,EACA,MAAA59F,GAAA3Z,EAAA,CACA,IAAAy4G,EAAAR,EAAA56D,EAAAq7D,gBACAvqH,EAAA,GAAAsqH,EACAp0G,EAAAo0G,GAAA,EACA,OAAAtqH,EAAA,CAQAwrB,GAAAtV,EACA,IAAAgyD,EAAAigD,EAAA38F,GACA0jC,EAAAk7D,UAAAp1G,EAAAkzD,GAAA+hD,EAAAjqH,IAAA,GAAAspH,GACA99F,QAXA,CACA,GAAAtV,EAAA,IACAw0G,EAAAV,EAAA9zG,IAAA,GAAAA,GAAA,EACA,MAEAsV,GAAA,MASA,IACAo/F,EADAC,EAAA,EAEA,SAAAC,EAAA57D,EAAAl6C,GACA,IAGAhV,EACAsqH,EAJA9+F,EAAA29F,EACAt3G,EAAAu3G,EACAlzG,EAAA,EAGA,MAAAsV,GAAA3Z,EAAA,CACA,IAAAk5G,EAAA/1G,EAAAmzG,EAAA38F,GACAoa,EAAAspB,EAAAk7D,UAAAW,GAAA,OACA,OAAAF,GACA,OAIA,GAHAP,EAAAR,EAAA56D,EAAAq7D,gBACAvqH,EAAA,GAAAsqH,EACAp0G,EAAAo0G,GAAA,EACA,IAAAtqH,EACAkW,EAAA,IACAw0G,EAAAV,EAAA9zG,IAAA,GAAAA,GACA20G,EAAA,IAEA30G,EAAA,GACA20G,EAAA,OAEa,CACb,OAAA7qH,EACA,UAAAgoH,EAAA,wBAEA4C,EAAAX,EAAAjqH,GACA6qH,EAAA30G,EAAA,IAEA,SACA,OACA,OACAg5C,EAAAk7D,UAAAW,GACA77D,EAAAk7D,UAAAW,IAAAnlF,GAAAsoB,KAAAo7D,IAEApzG,IACA,IAAAA,IACA20G,EAAA,IAAAA,EAAA,MAGA,MACA,OACA37D,EAAAk7D,UAAAW,GACA77D,EAAAk7D,UAAAW,IAAAnlF,GAAAsoB,KAAAo7D,IAEAp6D,EAAAk7D,UAAAW,GAAAH,GAAAtB,EACAuB,EAAA,GAEA,MACA,OACA37D,EAAAk7D,UAAAW,KACA77D,EAAAk7D,UAAAW,IAAAnlF,GAAAsoB,KAAAo7D,IAEA,MAEA99F,IAEA,IAAAq/F,IACAH,IACA,IAAAA,IACAG,EAAA,IAIA,SAAAG,EAAA97D,EAAA13B,EAAAyzF,EAAAh/D,EAAA68D,GACA,IAAAoC,EAAAD,EAAAzB,EAAA,EACA2B,EAAAF,EAAAzB,EACA4B,EAAAF,EAAAh8D,EAAA93C,EAAA60C,EACAo/D,EAAAF,EAAAj8D,EAAA3iB,EAAAu8E,EACA9zG,EAAA6zG,EAAA35D,EAAAk8D,EAAAC,GACA7zF,EAAA03B,EAAAl6C,GAEA,SAAAs2G,EAAAp8D,EAAA13B,EAAAyzF,GACA,IAAAG,EAAAH,EAAA/7D,EAAA65D,cAAA,EACAsC,EAAAJ,EAAA/7D,EAAA65D,cACA/zG,EAAA6zG,EAAA35D,EAAAk8D,EAAAC,GACA7zF,EAAA03B,EAAAl6C,GAEA,IACAk6C,EAAAvwD,EAAAiuB,EAAApB,EAAA/rB,EACA8rH,EAFAC,EAAAz7D,EAAA18C,OAKAk4G,EAFA9B,EACA,IAAAN,EACA,IAAAE,EAAAmB,EAAAC,EAEA,IAAApB,EAAAsB,EAAAG,EAGAZ,EAEA,IACAuB,EACAC,EAMAn/E,EAAAn1B,EARA6zG,EAAA,EAIAS,EADA,IAAAF,EACAz7D,EAAA,GAAAg5D,cAAAh5D,EAAA,GAAA47D,gBAEAnC,EAAAP,EAAA2C,cAGA,MAAAX,EAAAS,EAAA,CACA,IAAAG,EAAA3C,EAAAt1G,KAAAC,IAAA63G,EAAAT,EAAA/B,GAAAwC,EACA,IAAA/sH,EAAA,EAAiBA,EAAA6sH,EAAsB7sH,IACvCoxD,EAAApxD,GAAA0rH,KAAA,EAGA,GADAK,EAAA,EACA,IAAAc,EAEA,IADAt8D,EAAAa,EAAA,GACAtwD,EAAA,EAAmBA,EAAAosH,EAAepsH,IAClC6rH,EAAAp8D,EAAAq8D,EAAAN,GACAA,SAGA,IAAAxrH,EAAA,EAAmBA,EAAAosH,EAAepsH,IAAA,CAClC,IAAAd,EAAA,EAAqBA,EAAA6sH,EAAsB7sH,IAI3C,IAHAuwD,EAAAa,EAAApxD,GACA4tC,EAAA2iB,EAAA3iB,EACAn1B,EAAA83C,EAAA93C,EACAwV,EAAA,EAAuBA,EAAAxV,EAAOwV,IAC9B,IAAApB,EAAA,EAAyBA,EAAA+gB,EAAO/gB,IAChCw/F,EAAA97D,EAAAq8D,EAAAN,EAAAr+F,EAAApB,GAIAy/F,IAGArB,EAAA,EACA6B,EAAAK,EAAAn3G,EAAAK,GACAy2G,KAAAh9B,WACA,EAAAznE,EAAA7mB,MAAA,wDAAAsrH,EAAAh9B,SACAz5E,EAAAy2G,EAAAz2G,QAEA,IAAA+2G,EAAAN,KAAAM,OACA,IAAAA,MAAA,MACA,UAAA/D,EAAA,wBAEA,KAAA+D,GAAA,OAAAA,GAAA,OAGA,MAFA/2G,GAAA,EAUA,OALAy2G,EAAAK,EAAAn3G,EAAAK,GACAy2G,KAAAh9B,WACA,EAAAznE,EAAA7mB,MAAA,yDAAAsrH,EAAAh9B,SACAz5E,EAAAy2G,EAAAz2G,QAEAA,EAAA00G,EAEA,SAAAsC,EAAA98D,EAAA+8D,EAAAlsH,GACA,IAEAsjE,EAAA39C,EAAAC,EAAAumG,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAA31G,EAAAC,EAAAE,EAAAC,EAAAw1G,EAAAC,EAAAC,EACAniG,EAJAoiG,EAAAz9D,EAAA09D,kBACAxC,EAAAl7D,EAAAk7D,UAIA,IAAAuC,EACA,UAAA3E,EAAA,wCAEA,QAAA/7D,EAAA,EAAqBA,EAAA,GAAUA,GAAA,EAC/BsgE,EAAAnC,EAAA6B,EAAAhgE,GACAr1C,EAAAwzG,EAAA6B,EAAAhgE,EAAA,GACAp1C,EAAAuzG,EAAA6B,EAAAhgE,EAAA,GACAl1C,EAAAqzG,EAAA6B,EAAAhgE,EAAA,GACAj1C,EAAAozG,EAAA6B,EAAAhgE,EAAA,GACAugE,EAAApC,EAAA6B,EAAAhgE,EAAA,GACAwgE,EAAArC,EAAA6B,EAAAhgE,EAAA,GACAygE,EAAAtC,EAAA6B,EAAAhgE,EAAA,GACAsgE,GAAAI,EAAA1gE,GACA,KAAAr1C,EAAAC,EAAAE,EAAAC,EAAAw1G,EAAAC,EAAAC,IAYA91G,GAAA+1G,EAAA1gE,EAAA,GACAp1C,GAAA81G,EAAA1gE,EAAA,GACAl1C,GAAA41G,EAAA1gE,EAAA,GACAj1C,GAAA21G,EAAA1gE,EAAA,GACAugE,GAAAG,EAAA1gE,EAAA,GACAwgE,GAAAE,EAAA1gE,EAAA,GACAygE,GAAAC,EAAA1gE,EAAA,GACAoX,EAAAqlD,EAAA6D,EAAA,OACA7mG,EAAAgjG,EAAA1xG,EAAA,OACA2O,EAAA9O,EACAq1G,EAAAO,EACAN,EAAAxD,GAAA/xG,EAAA81G,GAAA,OACAJ,EAAA3D,GAAA/xG,EAAA81G,GAAA,OACAN,EAAAr1G,GAAA,EACAs1G,EAAAG,GAAA,EACAnpD,IAAA39C,EAAA,KACAA,EAAA29C,EAAA39C,EACA6E,EAAA5E,EAAA8iG,EAAAyD,EAAA1D,EAAA,OACA7iG,IAAA6iG,EAAA0D,EAAAzD,EAAA,OACAyD,EAAA3hG,EACA4hG,IAAAE,EAAA,KACAA,EAAAF,EAAAE,EACAC,IAAAF,EAAA,KACAA,EAAAE,EAAAF,EACA/oD,IAAA6oD,EAAA,KACAA,EAAA7oD,EAAA6oD,EACAxmG,IAAAC,EAAA,KACAA,EAAAD,EAAAC,EACA4E,EAAA4hG,EAAA5D,EAAA+D,EAAAhE,EAAA,SACA6D,IAAA7D,EAAAgE,EAAA/D,EAAA,SACA+D,EAAA/hG,EACAA,EAAA6hG,EAAA/D,EAAAgE,EAAAjE,EAAA,SACAgE,IAAAhE,EAAAiE,EAAAhE,EAAA,SACAgE,EAAA9hG,EACAxqB,EAAAksD,GAAAoX,EAAAipD,EACAvsH,EAAAksD,EAAA,GAAAoX,EAAAipD,EACAvsH,EAAAksD,EAAA,GAAAvmC,EAAA2mG,EACAtsH,EAAAksD,EAAA,GAAAvmC,EAAA2mG,EACAtsH,EAAAksD,EAAA,GAAAtmC,EAAAymG,EACArsH,EAAAksD,EAAA,GAAAtmC,EAAAymG,EACArsH,EAAAksD,EAAA,GAAAigE,EAAAC,EACApsH,EAAAksD,EAAA,GAAAigE,EAAAC,IApDA5hG,EAAAm+F,EAAA6D,EAAA,QACAxsH,EAAAksD,GAAA1hC,EACAxqB,EAAAksD,EAAA,GAAA1hC,EACAxqB,EAAAksD,EAAA,GAAA1hC,EACAxqB,EAAAksD,EAAA,GAAA1hC,EACAxqB,EAAAksD,EAAA,GAAA1hC,EACAxqB,EAAAksD,EAAA,GAAA1hC,EACAxqB,EAAAksD,EAAA,GAAA1hC,EACAxqB,EAAAksD,EAAA,GAAA1hC,GA8CA,QAAAu+F,EAAA,EAAqBA,EAAA,IAASA,EAC9ByD,EAAAxsH,EAAA+oH,GACAlyG,EAAA7W,EAAA+oH,EAAA,GACAjyG,EAAA9W,EAAA+oH,EAAA,IACA/xG,EAAAhX,EAAA+oH,EAAA,IACA9xG,EAAAjX,EAAA+oH,EAAA,IACA0D,EAAAzsH,EAAA+oH,EAAA,IACA2D,EAAA1sH,EAAA+oH,EAAA,IACA4D,EAAA3sH,EAAA+oH,EAAA,IACA,KAAAlyG,EAAAC,EAAAE,EAAAC,EAAAw1G,EAAAC,EAAAC,IAaArpD,EAAAqlD,EAAA6D,EAAA,SACA7mG,EAAAgjG,EAAA1xG,EAAA,SACA2O,EAAA9O,EACAq1G,EAAAO,EACAN,EAAAxD,GAAA/xG,EAAA81G,GAAA,SACAJ,EAAA3D,GAAA/xG,EAAA81G,GAAA,SACAN,EAAAr1G,EACAs1G,EAAAG,EACAnpD,EAAA,MAAAA,EAAA39C,EAAA,MACAA,EAAA29C,EAAA39C,EACA6E,EAAA5E,EAAA8iG,EAAAyD,EAAA1D,EAAA,SACA7iG,IAAA6iG,EAAA0D,EAAAzD,EAAA,SACAyD,EAAA3hG,EACA4hG,IAAAE,EAAA,KACAA,EAAAF,EAAAE,EACAC,IAAAF,EAAA,KACAA,EAAAE,EAAAF,EACA/oD,IAAA6oD,EAAA,KACAA,EAAA7oD,EAAA6oD,EACAxmG,IAAAC,EAAA,KACAA,EAAAD,EAAAC,EACA4E,EAAA4hG,EAAA5D,EAAA+D,EAAAhE,EAAA,SACA6D,IAAA7D,EAAAgE,EAAA/D,EAAA,SACA+D,EAAA/hG,EACAA,EAAA6hG,EAAA/D,EAAAgE,EAAAjE,EAAA,SACAgE,IAAAhE,EAAAiE,EAAAhE,EAAA,SACAgE,EAAA9hG,EACAgiG,EAAAlpD,EAAAipD,EACAI,EAAArpD,EAAAipD,EACA11G,EAAA8O,EAAA2mG,EACAI,EAAA/mG,EAAA2mG,EACAx1G,EAAA8O,EAAAymG,EACAI,EAAA7mG,EAAAymG,EACAr1G,EAAAm1G,EAAAC,EACAn1G,EAAAk1G,EAAAC,EACAI,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACA31G,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAE,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAw1G,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAtC,EAAA6B,EAAAnD,GAAAyD,EACAnC,EAAA6B,EAAAnD,EAAA,GAAAlyG,EACAwzG,EAAA6B,EAAAnD,EAAA,IAAAjyG,EACAuzG,EAAA6B,EAAAnD,EAAA,IAAA/xG,EACAqzG,EAAA6B,EAAAnD,EAAA,IAAA9xG,EACAozG,EAAA6B,EAAAnD,EAAA,IAAA0D,EACApC,EAAA6B,EAAAnD,EAAA,IAAA2D,EACArC,EAAA6B,EAAAnD,EAAA,IAAA4D,IA9DAniG,EAAAm+F,EAAA6D,EAAA,SACAhiG,KAAA,OAAAA,GAAA,SAAAA,EAAA,QACA6/F,EAAA6B,EAAAnD,GAAAv+F,EACA6/F,EAAA6B,EAAAnD,EAAA,GAAAv+F,EACA6/F,EAAA6B,EAAAnD,EAAA,IAAAv+F,EACA6/F,EAAA6B,EAAAnD,EAAA,IAAAv+F,EACA6/F,EAAA6B,EAAAnD,EAAA,IAAAv+F,EACA6/F,EAAA6B,EAAAnD,EAAA,IAAAv+F,EACA6/F,EAAA6B,EAAAnD,EAAA,IAAAv+F,EACA6/F,EAAA6B,EAAAnD,EAAA,IAAAv+F,GAwDA,SAAAsiG,EAAA5D,EAAA/5D,GAIA,IAHA,IAAA65D,EAAA75D,EAAA65D,cACA4C,EAAAz8D,EAAAy8D,gBACAmB,EAAA,IAAAC,WAAA,IACA3B,EAAA,EAA0BA,EAAAO,EAA4BP,IACtD,QAAAC,EAAA,EAA4BA,EAAAtC,EAA0BsC,IAAA,CACtD,IAAAr2G,EAAA6zG,EAAA35D,EAAAk8D,EAAAC,GACAW,EAAA98D,EAAAl6C,EAAA83G,GAGA,OAAA59D,EAAAk7D,UAEA,SAAA0B,EAAAn3G,EAAAq4G,GACA,IAAAvqF,EAAA1lB,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,GAAAA,UAAA,GAAAiwG,EAEA,SAAAC,EAAAv4G,GACA,OAAAC,EAAAD,IAAA,EAAAC,EAAAD,EAAA,GAEA,IAAAw4G,EAAAv4G,EAAAtB,OAAA,EACA85G,EAAA1qF,EAAAuqF,EAAAvqF,EAAAuqF,EACA,GAAAA,GAAAE,EACA,YAEA,IAAAE,EAAAH,EAAAD,GACA,GAAAI,GAAA,OAAAA,GAAA,MACA,OACA3+B,QAAA,KACAs9B,OAAAqB,EACAp4G,OAAAg4G,GAGA,IAAAK,EAAAJ,EAAAE,GACA,QAAAE,GAAA,OAAAA,GAAA,QACA,KAAAF,GAAAD,EACA,YAEAG,EAAAJ,EAAAE,GAEA,OACA1+B,QAAA2+B,EAAAtvG,SAAA,IACAiuG,OAAAsB,EACAr4G,OAAAm4G,GAwZA,OArZA1jF,EAAA5pC,WACAy1B,MAAA,SAAA3gB,GACA,IAAAW,EAAAyH,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,GAAAA,UAAA,MACAuwG,EAAAh4G,EAAAi4G,aACAA,OAAAnpH,IAAAkpH,EAAA,KAAAA,EAEA,SAAAxsH,IACA,IAAAb,EAAA0U,EAAAK,IAAA,EAAAL,EAAAK,EAAA,GAEA,OADAA,GAAA,EACA/U,EAEA,SAAAutH,IACA,IAAAn6G,EAAAvS,IACA2sH,EAAAz4G,EAAA3B,EAAA,EACAo4G,EAAAK,EAAAn3G,EAAA84G,EAAAz4G,GACAy2G,KAAAh9B,WACA,EAAAznE,EAAA7mB,MAAA,wDAAAsrH,EAAAh9B,SACAg/B,EAAAhC,EAAAz2G,QAEA,IAAA+sB,EAAAptB,EAAAZ,SAAAiB,EAAAy4G,GAEA,OADAz4G,GAAA+sB,EAAA1uB,OACA0uB,EAEA,SAAA2rF,EAAAzE,GAGA,IAFA,IAAAO,EAAA51G,KAAAkB,KAAAm0G,EAAA0E,eAAA,EAAA1E,EAAA2E,MACAhC,EAAAh4G,KAAAkB,KAAAm0G,EAAAf,UAAA,EAAAe,EAAA4E,MACAlvH,EAAA,EAAuBA,EAAAsqH,EAAAl5D,WAAA18C,OAA6B1U,IAAA,CACpDuwD,EAAA+5D,EAAAl5D,WAAApxD,GACA,IAAAoqH,EAAAn1G,KAAAkB,KAAAlB,KAAAkB,KAAAm0G,EAAA0E,eAAA,GAAAz+D,EAAA3iB,EAAA08E,EAAA2E,MACAjC,EAAA/3G,KAAAkB,KAAAlB,KAAAkB,KAAAm0G,EAAAf,UAAA,GAAAh5D,EAAA93C,EAAA6xG,EAAA4E,MACAC,EAAAtE,EAAAt6D,EAAA3iB,EACAwhF,EAAAnC,EAAA18D,EAAA93C,EACA42G,EAAA,GAAAD,GAAAD,EAAA,GACA5+D,EAAAk7D,UAAA,IAAA2C,WAAAiB,GACA9+D,EAAA65D,gBACA75D,EAAAy8D,kBAEA1C,EAAAO,cACAP,EAAA2C,gBAEA,IAGA3C,EAAAC,EAHAl0G,EAAA,EACAi5G,EAAA,KACAC,EAAA,KAEAC,EAAA,EACAC,KACAC,KACAC,KACA7C,EAAA3qH,IACA,WAAA2qH,EACA,UAAAzD,EAAA,iBAEAyD,EAAA3qH,IACA,cAAA2qH,EAAA,CACA,IAAA9sH,EAAAiuB,EAAAhuB,EACA,OAAA6sH,GACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,IAAA8C,EAAAf,IACA,QAAA/B,GACA,KAAA8C,EAAA,SAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,QAAAA,EAAA,KACAN,GACA78F,SACAyiD,MAAA06C,EAAA,GACAz6C,MAAAy6C,EAAA,IAEAC,aAAAD,EAAA,GACAE,SAAAF,EAAA,MAAAA,EAAA,GACAG,SAAAH,EAAA,OAAAA,EAAA,IACAI,WAAAJ,EAAA,IACAK,YAAAL,EAAA,IACAM,UAAAN,EAAAx6G,SAAA,QAAAw6G,EAAA,IAAAA,EAAA,OAIA,QAAA9C,GACA,KAAA8C,EAAA,UAAAA,EAAA,UAAAA,EAAA,SAAAA,EAAA,UAAAA,EAAA,KACAL,GACA98F,QAAAm9F,EAAA,MAAAA,EAAA,GACAO,OAAAP,EAAA,MAAAA,EAAA,GACAQ,OAAAR,EAAA,MAAAA,EAAA,IACAS,cAAAT,EAAA,MAIA,MACA,WACA,IAEArmD,EAFA+mD,EAAAnuH,IACAouH,EAAAD,EAAAj6G,EAAA,EAEA,MAAAA,EAAAk6G,EAAA,CACA,IAAAC,EAAAx6G,EAAAK,KACAo6G,EAAA,IAAAxgG,YAAA,IACA,GAAAugG,GAAA,MACA,IAAAviG,EAAA,EAA2BA,EAAA,GAAQA,IACnCs7C,EAAAigD,EAAAv7F,GACAwiG,EAAAlnD,GAAAvzD,EAAAK,SAEe,IAAAm6G,GAAA,MAMf,UAAAnH,EAAA,4BALA,IAAAp7F,EAAA,EAA2BA,EAAA,GAAQA,IACnCs7C,EAAAigD,EAAAv7F,GACAwiG,EAAAlnD,GAAApnE,IAKAstH,EAAA,GAAAe,GAAAC,EAEA,MACA,WACA,WACA,WACA,GAAAnG,EACA,UAAAjB,EAAA,qCAEAlnH,IACAmoH,KACAA,EAAAoG,SAAA,QAAA5D,EACAxC,EAAAQ,YAAA,QAAAgC,EACAxC,EAAA9sD,UAAAxnD,EAAAK,KACA,IAAAs6G,EAAAxuH,IACAmoH,EAAAf,UAAAqF,GAAA+B,EACArG,EAAA0E,eAAA7sH,IACAmoH,EAAAl5D,cACAk5D,EAAAsG,gBACA,IACAC,EADA3+D,EAAAl8C,EAAAK,KAEA44G,EAAA,EACAC,EAAA,EACA,IAAAlvH,EAAA,EAAuBA,EAAAkyD,EAAqBlyD,IAAA,CAC5C6wH,EAAA76G,EAAAK,GACA,IAAAu3B,EAAA53B,EAAAK,EAAA,MACAoC,EAAA,GAAAzC,EAAAK,EAAA,GACA44G,EAAArhF,IACAqhF,EAAArhF,GAEAshF,EAAAz2G,IACAy2G,EAAAz2G,GAEA,IAAAq4G,EAAA96G,EAAAK,EAAA,GACApW,EAAAqqH,EAAAl5D,WAAA/7C,MACAu4B,IACAn1B,IACAs4G,eAAAD,EACA7C,kBAAA,OAEA3D,EAAAsG,aAAAC,GAAA5wH,EAAA,EACAoW,GAAA,EAEAi0G,EAAA2E,OACA3E,EAAA4E,OACAH,EAAAzE,GACA,MACA,WACA,IAAA0G,EAAA7uH,IACA,IAAAnC,EAAA,EAAuBA,EAAAgxH,GAAmB,CAC1C,IAAAC,EAAAj7G,EAAAK,KACAmW,EAAA,IAAAjX,WAAA,IACA27G,EAAA,EACA,IAAAjjG,EAAA,EAAyBA,EAAA,GAAQA,IAAA5X,IACjC66G,GAAA1kG,EAAAyB,GAAAjY,EAAAK,GAEA,IAAA86G,EAAA,IAAA57G,WAAA27G,GACA,IAAAjjG,EAAA,EAAyBA,EAAAijG,EAAmBjjG,IAAA5X,IAC5C86G,EAAAljG,GAAAjY,EAAAK,GAEArW,GAAA,GAAAkxH,GACAD,GAAA,MAAAtB,EAAAD,GAAA,GAAAuB,GAAAhH,EAAAz9F,EAAA2kG,GAEA,MACA,WACAhvH,IACAooH,EAAApoH,IACA,MACA,WACA,IAAAyoH,EAAA,MAAA4E,IAAAZ,EACAzsH,IACA,IAEAouD,EAFA6gE,EAAAp7G,EAAAK,KACA+6C,KAEA,IAAApxD,EAAA,EAAuBA,EAAAoxH,EAAoBpxH,IAAA,CAC3C,IAAAqxH,EAAA/G,EAAAsG,aAAA56G,EAAAK,MACAk6C,EAAA+5D,EAAAl5D,WAAAigE,GACA,IAAAC,EAAAt7G,EAAAK,KACAk6C,EAAAi7D,eAAAmE,EAAA2B,GAAA,GACA/gE,EAAAq7D,eAAA8D,EAAA,GAAA4B,GACAlgE,EAAA/7C,KAAAk7C,GAEA,IAAAi6D,EAAAx0G,EAAAK,KACAo0G,GAAAz0G,EAAAK,KACAk7G,GAAAv7G,EAAAK,KACA,IACA,IAAAypC,GAAAuqE,EAAAr0G,EAAAK,EAAAi0G,EAAAl5D,EAAAm5D,EAAAC,EAAAC,GAAA8G,IAAA,KAAAA,GAAA3G,GACAv0G,GAAAypC,GACa,MAAAtsC,GACb,GAAAA,aAAA81G,EAEA,OADA,EAAAjhG,EAAA7mB,MAAA,uGACAyS,KAAA0iB,MAAA3gB,GAAyC44G,aAAAp7G,EAAA+1G,YAEzC,MAAA/1G,EAEA,MACA,WACA6C,GAAA,EACA,MACA,WACA,MAAAL,EAAAK,IACAA,IAEA,MACA,QACA,SAAAL,EAAAK,EAAA,IAAAL,EAAAK,EAAA,SAAAL,EAAAK,EAAA,SACAA,GAAA,EACA,MAEA,IAAAm7G,GAAArE,EAAAn3G,EAAAK,EAAA,GACA,GAAAm7G,OAAA1hC,QAAA,EACA,EAAAznE,EAAA7mB,MAAA,yDAAAgwH,GAAA1hC,SACAz5E,EAAAm7G,GAAAn7G,OACA,MAEA,UAAAgzG,EAAA,kBAAAyD,EAAA3tG,SAAA,KAEA2tG,EAAA3qH,IAOA,IALA8R,KAAAoI,MAAAiuG,EAAA0E,eACA/6G,KAAAqI,OAAAguG,EAAAf,UACAt1G,KAAAq7G,OACAr7G,KAAAs7G,QACAt7G,KAAAm9C,cACApxD,EAAA,EAAiBA,EAAAsqH,EAAAl5D,WAAA18C,OAA6B1U,IAAA,CAC9CuwD,EAAA+5D,EAAAl5D,WAAApxD,GACA,IAAAiuH,GAAAwB,EAAAl/D,EAAAwgE,gBACA9C,KACA19D,EAAA09D,sBAEAh6G,KAAAm9C,WAAA/7C,MACAqyD,OAAAwmD,EAAA5D,EAAA/5D,GACAkhE,OAAAlhE,EAAA3iB,EAAA08E,EAAA2E,KACAyC,OAAAnhE,EAAA93C,EAAA6xG,EAAA4E,KACA9E,cAAA75D,EAAA65D,cACA4C,gBAAAz8D,EAAAy8D,kBAGA/4G,KAAA09G,cAAA19G,KAAAm9C,WAAA18C,QAGAk9G,wBAAA,SAAAv1G,EAAAC,GACA,IAEAi0C,EAAAshE,EAAAC,EAAAC,EACA77G,EAAA4G,EAAA9c,EAAAiuB,EAAApB,EACA6U,EAEAgmC,EANA+pD,EAAAx9G,KAAAoI,QACAq1G,EAAAz9G,KAAAqI,SAIAjG,EAAA,EAEAs7G,EAAA19G,KAAAm9C,WAAA18C,OACAwzC,EAAA7rC,EAAAC,EAAAq1G,EACA37G,EAAA,IAAAuoD,kBAAArW,GACA8pE,EAAA,IAAAx7G,YAAA6F,GACA41G,EAAA,WACA,IAAAjyH,EAAA,EAAiBA,EAAA2xH,EAAmB3xH,IAAA,CAOpC,IANAuwD,EAAAt8C,KAAAm9C,WAAApxD,GACA6xH,EAAAthE,EAAAkhE,SACAK,EAAAvhE,EAAAmhE,SACAr7G,EAAArW,EACA0nE,EAAAnX,EAAAmX,OACAqqD,EAAAxhE,EAAA65D,cAAA,KACAl0G,EAAA,EAAmBA,EAAAmG,EAAWnG,IAC9B+X,EAAA,EAAA/X,EAAA27G,EACAG,EAAA97G,IAAA+X,EAAAgkG,IAAA,IAAAhkG,EAEA,IAAAnR,EAAA,EAAmBA,EAAAR,EAAYQ,IAG/B,IAFAmR,EAAA,EAAAnR,EAAAg1G,EACApwF,EAAAqwF,GAAA9jG,EAAAgkG,IAAA,EAAAhkG,IAAA,EACA/X,EAAA,EAAqBA,EAAAmG,EAAWnG,IAChCF,EAAAK,GAAAqxD,EAAAhmC,EAAAswF,EAAA97G,IACAG,GAAAs7G,EAIA,IAAA9kH,EAAAoH,KAAAo3B,gBACA,GAAAx+B,EACA,IAAA7M,EAAA,EAAmBA,EAAAkoD,GACnB,IAAAj6B,EAAA,EAAApB,EAAA,EAA4BoB,EAAA0jG,EAAmB1jG,IAAAjuB,IAAA6sB,GAAA,EAC/C7W,EAAAhW,IAAAgW,EAAAhW,GAAA6M,EAAAggB,IAAA,GAAAhgB,EAAAggB,EAAA,GAIA,OAAA7W,GAEAk8G,yBAAA,WACA,OAAAj+G,KAAAs7G,QACAt7G,KAAAs7G,MAAAc,cAEA,IAAAp8G,KAAA09G,cACA,IAAA19G,KAAAq3B,eAKA,IAAAr3B,KAAAq3B,gBAMA6mF,iBAAA,SAAAn8G,GAEA,IADA,IAAAooB,EAAAg0F,EAAAC,EACAryH,EAAA,EAAA0U,EAAAsB,EAAAtB,OAA2C1U,EAAA0U,EAAY1U,GAAA,EACvDo+B,EAAApoB,EAAAhW,GACAoyH,EAAAp8G,EAAAhW,EAAA,GACAqyH,EAAAr8G,EAAAhW,EAAA,GACAgW,EAAAhW,GAAAo+B,EAAA,cAAAi0F,EACAr8G,EAAAhW,EAAA,GAAAo+B,EAAA,aAAAg0F,EAAA,KAAAC,EACAr8G,EAAAhW,EAAA,GAAAo+B,EAAA,cAAAg0F,EAEA,OAAAp8G,GAEAs8G,kBAAA,SAAAt8G,GAGA,IAFA,IAAAooB,EAAAg0F,EAAAC,EAAAxlG,EACAxW,EAAA,EACArW,EAAA,EAAA0U,EAAAsB,EAAAtB,OAA2C1U,EAAA0U,EAAY1U,GAAA,EACvDo+B,EAAApoB,EAAAhW,GACAoyH,EAAAp8G,EAAAhW,EAAA,GACAqyH,EAAAr8G,EAAAhW,EAAA,GACA6sB,EAAA7W,EAAAhW,EAAA,GACAgW,EAAAK,KAAA+7G,IAAA,oBAAAA,EAAA,oBAAAC,EAAA,mBAAAj0F,EAAA,mBAAAvR,EAAA,kCAAAwlG,IAAA,oBAAAA,EAAA,oBAAAj0F,EAAA,mBAAAvR,EAAA,kBAAAuR,GAAA,oBAAAA,EAAA,mBAAAvR,EAAA,iBAAAA,IAAA,oBAAAA,EAAA,kBACA7W,EAAAK,KAAA,iBAAA+7G,GAAA,oBAAAA,EAAA,oBAAAC,EAAA,oBAAAj0F,EAAA,oBAAAvR,EAAA,kBAAAwlG,IAAA,oBAAAA,EAAA,mBAAAj0F,EAAA,oBAAAvR,EAAA,kBAAAuR,GAAA,mBAAAA,EAAA,mBAAAvR,EAAA,iBAAAA,IAAA,oBAAAA,EAAA,kBACA7W,EAAAK,KAAA+7G,IAAA,oBAAAA,EAAA,oBAAAC,EAAA,kBAAAj0F,EAAA,mBAAAvR,EAAA,kCAAAwlG,IAAA,oBAAAA,EAAA,oBAAAj0F,EAAA,oBAAAvR,EAAA,kBAAAuR,GAAA,mBAAAA,EAAA,mBAAAvR,EAAA,kBAAAA,IAAA,oBAAAA,EAAA,iBAEA,OAAA7W,EAAAZ,SAAA,EAAAiB,IAEAk8G,mBAAA,SAAAv8G,GAEA,IADA,IAAAooB,EAAAg0F,EAAAC,EACAryH,EAAA,EAAA0U,EAAAsB,EAAAtB,OAA2C1U,EAAA0U,EAAY1U,GAAA,EACvDo+B,EAAApoB,EAAAhW,GACAoyH,EAAAp8G,EAAAhW,EAAA,GACAqyH,EAAAr8G,EAAAhW,EAAA,GACAgW,EAAAhW,GAAA,QAAAo+B,EAAA,MAAAi0F,EACAr8G,EAAAhW,EAAA,WAAAo+B,EAAA,KAAAg0F,EAAA,KAAAC,EACAr8G,EAAAhW,EAAA,WAAAo+B,EAAA,MAAAg0F,EAEA,OAAAp8G,GAEAw8G,kBAAA,SAAAx8G,GAIA,IAHA,IAAA5V,EAAAD,EAAA2c,EAAA+P,EACAxW,EAAA,EACAqF,EAAA,MACA1b,EAAA,EAAA0U,EAAAsB,EAAAtB,OAA2C1U,EAAA0U,EAAY1U,GAAA,EACvDI,EAAA4V,EAAAhW,GAAA0b,EACAvb,EAAA6V,EAAAhW,EAAA,GAAA0b,EACAoB,EAAA9G,EAAAhW,EAAA,GAAA0b,EACAmR,EAAA7W,EAAAhW,EAAA,GAAA0b,EACA1F,EAAAK,KAAA,IAAAjW,IAAA,kBAAAA,EAAA,kBAAAD,EAAA,kBAAA2c,EAAA,mBAAA+P,EAAA,mBAAA1sB,GAAA,mBAAAA,EAAA,mBAAA2c,EAAA,mBAAA+P,EAAA,mBAAA/P,IAAA,mBAAAA,EAAA,mBAAA+P,EAAA,kBAAAA,GAAA,kBAAAA,EAAA,oBACA7W,EAAAK,KAAA,IAAAjW,GAAA,kBAAAA,EAAA,mBAAAD,EAAA,kBAAA2c,EAAA,mBAAA+P,EAAA,kBAAA1sB,IAAA,mBAAAA,EAAA,mBAAA2c,EAAA,mBAAA+P,EAAA,mBAAA/P,GAAA,kBAAAA,EAAA,gBAAA+P,EAAA,mBAAAA,GAAA,mBAAAA,EAAA,oBACA7W,EAAAK,KAAA,IAAAjW,GAAA,kBAAAA,EAAA,kBAAAD,EAAA,kBAAA2c,EAAA,mBAAA+P,EAAA,oBAAA1sB,GAAA,kBAAAA,EAAA,kBAAA2c,EAAA,mBAAA+P,EAAA,oBAAA/P,GAAA,mBAAAA,EAAA,mBAAA+P,EAAA,oBAAAA,GAAA,kBAAAA,EAAA,oBAEA,OAAA7W,EAAAZ,SAAA,EAAAiB,IAEAk1B,QAAA,SAAAlvB,EAAAC,EAAAm2G,GACA,GAAAx+G,KAAA09G,cAAA,EACA,UAAAtI,EAAA,0BAEA,IAAArzG,EAAA/B,KAAA29G,wBAAAv1G,EAAAC,GACA,OAAArI,KAAA09G,eAAAc,EAAA,CAIA,IAHA,IAAAvqE,EAAAlyC,EAAAtB,OACAg+G,EAAA,IAAAn0D,kBAAA,EAAArW,GACA7xC,EAAA,EACArW,EAAA,EAAuBA,EAAAkoD,EAAgBloD,IAAA,CACvC,IAAA2yH,EAAA38G,EAAAhW,GACA0yH,EAAAr8G,KAAAs8G,EACAD,EAAAr8G,KAAAs8G,EACAD,EAAAr8G,KAAAs8G,EAEA,OAAAD,EACO,OAAAz+G,KAAA09G,eAAA19G,KAAAi+G,2BACP,OAAAj+G,KAAAk+G,iBAAAn8G,GACO,OAAA/B,KAAA09G,cAAA,CACP,GAAA19G,KAAAi+G,2BACA,OAAAO,EACAx+G,KAAAq+G,kBAAAt8G,GAEA/B,KAAAs+G,mBAAAv8G,GACS,GAAAy8G,EACT,OAAAx+G,KAAAu+G,kBAAAx8G,GAGA,OAAAA,IAGA80B,EA/5BA,GAi6BAprC,EAAAorC,aAIA,SAAArrC,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAA4mC,eAAA7gC,EAEA,IAAAu8B,EAAAliC,EAAA,GAEA8yH,EAAA9yH,EAAA,IAEAuoB,EAAAvoB,EAAA,GAEAwmC,EAAA,WACA,SAAAA,EAAAhmB,EAAAoK,EAAA9T,EAAAoW,GACA/Y,KAAAqM,SACArM,KAAAyW,cACAzW,KAAA2C,OACA3C,KAAA+Y,SACAgV,EAAA/Z,aAAA/nB,KAAA+T,KAAAyW,GA+CA,OA7CA4b,EAAAplC,UAAAT,OAAAoT,OAAAmuB,EAAA/Z,aAAA/mB,WACAT,OAAAC,eAAA4lC,EAAAplC,UAAA,SACAL,IAAA,WACA,SAAAwnB,EAAAvmB,QAAAmS,KAAA,QAAAA,KAAAqM,OAAA4G,SAAAjT,KAAAyW,eAEA/pB,cAAA,IAEA2lC,EAAAplC,UAAAyoB,aAAA,SAAAC,KACA0c,EAAAplC,UAAAwoB,UAAA,WACA,IAAAzV,KAAAuV,IAAA,CAGA,IAAAqpG,EAAA,IAAAD,EAAA/iE,SACAgjE,EAAAl8F,MAAA1iB,KAAAQ,OACA,IAAA4H,EAAAw2G,EAAAx2G,MACAC,EAAAu2G,EAAAv2G,OACA41C,EAAA2gE,EAAA3gE,gBACA4gE,EAAAD,EAAAthE,MAAA78C,OACA,OAAAo+G,EACA7+G,KAAAwC,OAAAo8G,EAAAthE,MAAA,GAAA3R,UACK,CAEL,IADA,IAAA5pC,EAAA,IAAAuoD,kBAAAliD,EAAAC,EAAA41C,GACArlC,EAAA,EAAqBA,EAAAimG,EAAejmG,IAWpC,IAVA,IAAAkmG,EAAAF,EAAAthE,MAAA1kC,GACAmmG,EAAAD,EAAA12G,MACA42G,EAAAF,EAAAz2G,OACA42G,EAAAH,EAAAzkG,KACA6kG,EAAAJ,EAAA90D,IACAljD,EAAAg4G,EAAAnzE,MACAwzE,EAAA,EACAC,GAAAh3G,EAAA82G,EAAAD,GAAAhhE,EACAlkB,EAAA3xB,EAAA61C,EACAohE,EAAAN,EAAA9gE,EACAjkC,EAAA,EAAuBA,EAAAglG,EAAgBhlG,IAAA,CACvC,IAAAV,EAAAxS,EAAA3F,SAAAg+G,IAAAE,GACAt9G,EAAAC,IAAAsX,EAAA8lG,GACAD,GAAAE,EACAD,GAAArlF,EAGA/5B,KAAAwC,OAAAT,EAEA/B,KAAAsV,aAAAtV,KAAAwC,OAAA/B,OACAT,KAAAuV,KAAA,IAEA8c,EArDA,GAuDA5mC,EAAA4mC,aAIA,SAAA7mC,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAs0G,kBAAAt0G,EAAA6zH,sBAAA7zH,EAAA8zH,gBAAA/tH,EAEA,IAAAguH,EAAA,SAAA5yH,EAAAG,EAAAC,EAAAyyH,GAAqD,OAAA1yH,MAAA0V,SAAAxV,WAAkD,IAAAyyH,EAAAlzH,OAAA64F,yBAAAt4F,EAAAC,GAA8D,QAAAwE,IAAAkuH,EAAA,CAA0B,IAAA9zE,EAAAp/C,OAAAiyC,eAAA1xC,GAA4C,cAAA6+C,OAAuB,EAA2Bh/C,EAAAg/C,EAAA5+C,EAAAyyH,GAA4C,aAAAC,EAA4B,OAAAA,EAAAryH,MAA4B,IAAAf,EAAAozH,EAAA9yH,IAAuB,YAAA4E,IAAAlF,EAAgDA,EAAAL,KAAAwzH,QAAhD,GAExZntD,EAAA,WAAgC,SAAAC,EAAAt0C,EAAAu0C,GAA2C,QAAAzmE,EAAA,EAAgBA,EAAAymE,EAAA/xD,OAAkB1U,IAAA,CAAO,IAAA0mE,EAAAD,EAAAzmE,GAA2B0mE,EAAA9lE,WAAA8lE,EAAA9lE,aAAA,EAAwD8lE,EAAA/lE,cAAA,EAAgC,UAAA+lE,MAAAhzD,UAAA,GAAuDjT,OAAAC,eAAAwxB,EAAAw0C,EAAA7vD,IAAA6vD,IAA+D,gBAAAh9B,EAAAi9B,EAAAC,GAA2L,OAAlID,GAAAH,EAAA98B,EAAAxoC,UAAAylE,GAAqEC,GAAAJ,EAAA98B,EAAAk9B,GAA6Dl9B,GAAxhB,GAEArhB,EAAAvoB,EAAA,GAEAuxG,EAAAvxG,EAAA,IAEAwoB,EAAAxoB,EAAA,GAEA4+C,EAAA5+C,EAAA,IAEAyxG,EAAAzxG,EAAA,IAEAkiC,EAAAliC,EAAA,GAEA,SAAA+mE,EAAAlnE,EAAAO,GAAiD,IAAAP,EAAa,UAAAmnE,eAAA,6DAAyF,OAAA5mE,GAAA,kBAAAA,GAAA,oBAAAA,EAAAP,EAAAO,EAEvJ,SAAA6mE,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAAr0C,UAAA,kEAAAq0C,GAAuGD,EAAA9lE,UAAAT,OAAAoT,OAAAozD,KAAA/lE,WAAyE4E,aAAexE,MAAA0lE,EAAApmE,YAAA,EAAA8S,UAAA,EAAA/S,cAAA,KAA6EsmE,IAAAxmE,OAAAymE,eAAAzmE,OAAAymE,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,SAAAG,EAAAC,EAAA39B,GAAiD,KAAA29B,aAAA39B,GAA0C,UAAA9W,UAAA,qCAE3F,IAAAohF,EAAA,WACA,SAAAA,IACA5sC,EAAAnzD,KAAA+/F,GA6EA,OA1EAztC,EAAAytC,EAAA,OACAn9F,IAAA,SACAvV,MAAA,SAAA+iB,EAAA+B,EAAAu4B,EAAAyzD,GACA,IAAAx7F,EAAAyN,EAAAU,WAAAqB,GACA,MAAAkC,EAAAxC,QAAAlP,GAAA,CAGA,IAAAypB,GAAA,EAAA/X,EAAAnD,OAAAiB,KAAAjH,WAAA,SAAAizF,EAAAC,cACA9yD,EAAA3oC,EAAA/V,IAAA,WACA0+C,GAAA,EAAAj3B,EAAA1B,QAAA24B,KAAAj/C,KAAA,KACA,IAAAszH,GACAvvG,OACAzN,OACAwP,KAAA,EAAAkC,EAAAnD,OAAAiB,KAAA,KACAm5B,UACAlf,KACAse,cAEA,OAAAY,GACA,WACA,WAAAs0E,EAAAD,GACA,WACA,WAAAE,EAAAF,GACA,aACA,IAAAG,GAAA,EAAA1rG,EAAAllB,yBACAyT,OACAC,IAAA,OAGA,OADAk9G,GAAA,EAAAzrG,EAAA1B,QAAAmtG,KAAAzzH,KAAA,KACAyzH,GACA,SACA,WAAAC,EAAAJ,GACA,UACA,WAAAK,EAAAL,GACA,SACA,WAAAM,EAAAN,GAGA,OADA,EAAAvrG,EAAA7mB,MAAA,oCAAAuyH,EAAA,uCACA,IAAAI,EAAAP,GACA,YACA,WAAAQ,EAAAR,GACA,WACA,WAAAS,EAAAT,GACA,aACA,WAAAU,EAAAV,GACA,aACA,WAAAW,EAAAX,GACA,eACA,WAAAY,EAAAZ,GACA,cACA,WAAAa,EAAAb,GACA,gBACA,WAAAc,EAAAd,GACA,gBACA,WAAAe,EAAAf,GACA,eACA,WAAAgB,EAAAhB,GACA,gBACA,WAAAiB,EAAAjB,GACA,YACA,WAAAkB,EAAAlB,GACA,qBACA,WAAAmB,EAAAnB,GACA,QAMA,OALAr0E,GAGA,EAAAl3B,EAAA7mB,MAAA,kCAAA+9C,EAAA,wCAFA,EAAAl3B,EAAA7mB,MAAA,gDAIA,IAAAgyH,EAAAI,SAKA5f,EA/EA,GAkFA,SAAAghB,EAAA77G,EAAA87G,EAAAx9F,GACA,IAAA2qD,EAAA/5D,EAAAvkB,KAAAkU,2BAAAi9G,EAAAx9F,GACA4hF,EAAAj3B,EAAA,GACAk3B,EAAAl3B,EAAA,GACA70C,EAAA60C,EAAA,GACA8yC,EAAA9yC,EAAA,GACA,GAAAi3B,IAAA9rE,GAAA+rE,IAAA4b,EACA,eAAA/7G,EAAA,GAAAA,EAAA,IAEA,IAAA2b,GAAA3b,EAAA,GAAAA,EAAA,KAAAo0B,EAAA8rE,GACAtkF,GAAA5b,EAAA,GAAAA,EAAA,KAAA+7G,EAAA5b,GACA,OAAAxkF,EAAA,IAAAC,EAAA5b,EAAA,GAAAkgG,EAAAvkF,EAAA3b,EAAA,GAAAmgG,EAAAvkF,GAGA,IAAAy+F,EAAA,WACA,SAAAA,EAAAxmG,GACAo6C,EAAAnzD,KAAAu/G,GAEA,IAAA58G,EAAAoW,EAAApW,KACA3C,KAAAkhH,SAAAv+G,EAAA/V,IAAA,MACAoT,KAAAmhH,aAAAx+G,EAAAG,SAAA,SACA9C,KAAAohH,SAAAz+G,EAAAG,SAAA,MACA9C,KAAAqhH,eAAA1+G,GACA3C,KAAAshH,cAAA3+G,GACA3C,KAAA+B,MACAw/G,gBAAAvhH,KAAAqsC,MACAm1E,YAAAxhH,KAAAwhH,YACAl5F,MAAAtoB,KAAAsoB,MACAm5F,gBAAAzhH,KAAA0hH,WACAt1F,GAAArT,EAAAqT,GACAlnB,KAAAlF,KAAA7G,UACAmyC,QAAAvyB,EAAAuyB,SA4LA,OAxLAgnB,EAAAitD,IACA38G,IAAA,WACAvV,MAAA,SAAAg/C,EAAAs1E,GACA,SAAAt1E,EAAAs1E,MAGA/+G,IAAA,cACAvV,MAAA,SAAAg/C,GACA,OAAArsC,KAAA4hH,SAAAv1E,EAAAj4B,EAAApjB,eAAAqB,aAAA2N,KAAA4hH,SAAAv1E,EAAAj4B,EAAApjB,eAAAyD,UAAAuL,KAAA4hH,SAAAv1E,EAAAj4B,EAAApjB,eAAA6D,WAGA+N,IAAA,eACAvV,MAAA,SAAAg/C,GACA,OAAArsC,KAAA4hH,SAAAv1E,EAAAj4B,EAAApjB,eAAA0D,SAAAsL,KAAA4hH,SAAAv1E,EAAAj4B,EAAApjB,eAAAqB,aAAA2N,KAAA4hH,SAAAv1E,EAAAj4B,EAAApjB,eAAAyD,WAGAmO,IAAA,WACAvV,MAAA,SAAAg/C,GACArsC,KAAAqsC,MAAAvuC,OAAAC,UAAAsuC,MAAA,EAAAA,EAAA,KAGAzpC,IAAA,UACAvV,MAAA,SAAAs0H,GACA,OAAA3hH,KAAA4hH,SAAA5hH,KAAAqsC,MAAAs1E,MAGA/+G,IAAA,eACAvV,MAAA,SAAA8L,GACAkN,MAAA4K,QAAA9X,IAAA,IAAAA,EAAAsH,OACAT,KAAA7G,UAAAib,EAAAvkB,KAAAoV,cAAA9L,GAEA6G,KAAA7G,WAAA,YAIAyJ,IAAA,WACAvV,MAAA,SAAAi7B,GACA,IAAAgkB,EAAA,IAAAhrC,WAAA,GACA,GAAA+E,MAAA4K,QAAAqX,GAIA,OAAAA,EAAA7nB,QACA,OACAT,KAAAsoB,MAAA,KACA,MACA,OACAmiB,EAAAxqB,WAAAmD,WAAAC,KAAA/B,WAAAgH,EAAA,EAAAgkB,EAAA,GACAtsC,KAAAsoB,MAAAgkB,EACA,MACA,OACA7B,EAAAxqB,WAAAmD,WAAA/B,IAAAC,WAAAgH,EAAA,EAAAgkB,EAAA,GACAtsC,KAAAsoB,MAAAgkB,EACA,MACA,OACA7B,EAAAxqB,WAAAmD,WAAAE,KAAAhC,WAAAgH,EAAA,EAAAgkB,EAAA,GACAtsC,KAAAsoB,MAAAgkB,EACA,MACA,QACAtsC,KAAAsoB,MAAAgkB,EACA,WArBAtsC,KAAAsoB,MAAAgkB,KAyBA1pC,IAAA,iBACAvV,MAAA,SAAAm0H,GAEA,GADAxhH,KAAAwhH,YAAA,IAAAlC,GACA,EAAAjrG,EAAAxC,QAAA2vG,GAGA,GAAAA,EAAAjwG,IAAA,OACA,IAAA5O,EAAA6+G,EAAA50H,IAAA,MACAi1H,EAAAl/G,EAAA/V,IAAA,QACAi1H,KAAA,EAAAxtG,EAAA1B,QAAAkvG,EAAA,YACA7hH,KAAAwhH,YAAAM,SAAAn/G,EAAA/V,IAAA,MACAoT,KAAAwhH,YAAAO,SAAAp/G,EAAA/V,IAAA,MACAoT,KAAAwhH,YAAAQ,aAAAr/G,EAAAG,SAAA,YAEO,GAAA0+G,EAAAjwG,IAAA,WACP,IAAA4d,EAAAqyF,EAAA1+G,SAAA,UACAuD,MAAA4K,QAAAke,MAAA1uB,QAAA,IACAT,KAAAwhH,YAAAS,0BAAA9yF,EAAA,IACAnvB,KAAAwhH,YAAAU,wBAAA/yF,EAAA,IACAnvB,KAAAwhH,YAAAM,SAAA3yF,EAAA,IACA,IAAAA,EAAA1uB,QACAT,KAAAwhH,YAAAQ,aAAA7yF,EAAA,UAIAnvB,KAAAwhH,YAAAM,SAAA,MAIAl/G,IAAA,gBACAvV,MAAA,SAAAsV,GACA3C,KAAA0hH,WAAA,KACA,IAAAS,EAAAx/G,EAAA/V,IAAA,MACA,MAAAynB,EAAAxC,QAAAswG,GAAA,CAGA,IAAAC,EAAAD,EAAAv1H,IAAA,KACA,MAAAynB,EAAArB,UAAAovG,GACApiH,KAAA0hH,WAAAU,OAGA,MAAA/tG,EAAAxC,QAAAuwG,GAAA,CAGA,IAAA72F,EAAA5oB,EAAA/V,IAAA,OACA,EAAAynB,EAAA1B,QAAA4Y,IAAA62F,EAAA7wG,IAAAga,EAAAl/B,QAGA2T,KAAA0hH,WAAAU,EAAAx1H,IAAA2+B,EAAAl/B,YAGAuW,IAAA,gBACAvV,MAAA,SAAAsV,GACAA,EAAA4O,IAAA,OACAvR,KAAA+B,KAAAumB,MAAA,MAEAtoB,KAAA+B,KAAAsgH,SAAA1/G,EAAA4O,IAAA,SACAvR,KAAA+B,KAAAqqC,OAAA,EAAAh4B,EAAA1mB,mBAAAiV,EAAA/V,IAAA,UACAoT,KAAA+B,KAAAugH,UAAA,EAAAluG,EAAA1mB,mBAAAiV,EAAA/V,IAAA,oBAGAgW,IAAA,gBACAvV,MAAA,SAAAikB,GACA,OAAAtR,KAAA0hH,WAAA/+G,KAAAoO,SAAA,aAAAnE,KAAA,SAAA0xF,GACA,GAAAA,EAAA,CAGA,IAAAM,EAAA,IAAAxB,EAAAxzD,aAAA00D,EAAAhtF,EAAAgtF,EAAAluF,MACA,OAAAwuF,EAAA1nD,OAAAtqC,KAAA,WACA,OAAA0xF,UAKA17F,IAAA,kBACAvV,MAAA,SAAA2hF,EAAA0G,EAAA6sC,GACA,IAAA72G,EAAA1L,KAEA,IAAAA,KAAA0hH,WACA,OAAA/3G,QAAAC,QAAA,IAAA0zF,EAAA5lE,cAEA,IAAA31B,EAAA/B,KAAA+B,KACAygH,EAAAxiH,KAAA0hH,WAAA/+G,KACAq7F,EAAAh+F,KAAA2+F,eAAA,gEACAqiB,EAAAwB,EAAA1/G,SAAA,mBACA0gB,EAAAg/F,EAAA1/G,SAAA,yBACAlK,EAAAmoH,EAAAh/G,EAAAmD,KAAA87G,EAAAx9F,GACA,OAAAw6E,EAAApxF,KAAA,SAAA0xF,GACA,IAAAlhE,EAAA,IAAAkgE,EAAA5lE,aAEA,OADA0F,EAAAJ,MAAA5oB,EAAA/iB,IAAA2L,iBAAA+E,EAAAmD,KAAAtM,EAAA4qB,IACAwrD,EAAA0J,iBACArsE,OAAAX,EAAAg2G,WACAhsC,OACA4oB,YACAhhE,aAAAF,IACSxwB,KAAA,WAGT,OAFAwwB,EAAAJ,MAAA5oB,EAAA/iB,IAAA4L,kBACAyO,EAAAg2G,WAAAzsG,QACAmoB,SAKAx6B,IAAA,WACAhW,IAAA,WACA,WAAAoT,KAAAqsC,OAGArsC,KAAAyiH,YAAAziH,KAAAqsC,UAGAzpC,IAAA,YACAhW,IAAA,WACA,WAAAoT,KAAAqsC,OAGArsC,KAAA0iH,aAAA1iH,KAAAqsC,WAIAkzE,EA7MA,GAgNAD,EAAA,WACA,SAAAA,IACAnsD,EAAAnzD,KAAAs/G,GAEAt/G,KAAAoI,MAAA,EACApI,KAAAytC,MAAAr5B,EAAAljB,0BAAAkF,MACA4J,KAAA2iH,WAAA,GACA3iH,KAAA4iH,uBAAA,EACA5iH,KAAA6iH,qBAAA,EA6EA,OA1EAvwD,EAAAgtD,IACA18G,IAAA,WACAvV,MAAA,SAAA+a,GACAtK,OAAAC,UAAAqK,KACApI,KAAAoI,YAIAxF,IAAA,WACAvV,MAAA,SAAAogD,GACA,GAAAA,EAGA,OAAAA,EAAAphD,MACA,QACA2T,KAAAytC,MAAAr5B,EAAAljB,0BAAAkF,MACA,MACA,QACA4J,KAAAytC,MAAAr5B,EAAAljB,0BAAAmF,OACA,MACA,QACA2J,KAAAytC,MAAAr5B,EAAAljB,0BAAAoF,QACA,MACA,QACA0J,KAAAytC,MAAAr5B,EAAAljB,0BAAAqF,MACA,MACA,QACAyJ,KAAAytC,MAAAr5B,EAAAljB,0BAAAsC,UACA,MACA,QACA,UAIAoP,IAAA,eACAvV,MAAA,SAAAs1H,GACA,GAAAt8G,MAAA4K,QAAA0xG,MAAAliH,OAAA,GAGA,IAFA,IAAAqiH,GAAA,EACAC,GAAA,EACAh3H,EAAA,EAAAyrB,EAAAmrG,EAAAliH,OAA+C1U,EAAAyrB,EAASzrB,IAAA,CACxD,IAAAi3H,EAAAL,EAAA52H,GACAk3H,GAAAD,GAAA,EACA,IAAAC,EAAA,CACAH,GAAA,EACA,MACWE,EAAA,IACXD,GAAA,GAGAD,IAAAC,EACA/iH,KAAA2iH,YAEA3iH,KAAAoI,MAAA,OAEOu6G,IACP3iH,KAAAoI,MAAA,MAIAxF,IAAA,4BACAvV,MAAA,SAAA61H,GACAplH,OAAAC,UAAAmlH,KACAljH,KAAA4iH,uBAAAM,MAIAtgH,IAAA,0BACAvV,MAAA,SAAA61H,GACAplH,OAAAC,UAAAmlH,KACAljH,KAAA6iH,qBAAAK,OAKA5D,EArFA,GAwFAY,EAAA,SAAAiD,GAGA,SAAAjD,EAAAnnG,GACAo6C,EAAAnzD,KAAAkgH,GAEA,IAAAzyG,EAAAmlD,EAAA5yD,MAAAkgH,EAAAhtD,WAAA1mE,OAAAiyC,eAAAyhF,IAAAj0H,KAAA+T,KAAA+Y,IAEApW,EAAAoW,EAAApW,KACAZ,EAAA0L,EAAA1L,KACAA,EAAAqhH,eAAAhvG,EAAArjB,eAAAmD,OACA6N,EAAAshH,UAAA51G,EAAA61G,oBAAA3gH,GACAZ,EAAAwhH,YAAA,EAAAnvG,EAAAllB,yBACAyT,OACAC,IAAA,IACAE,UAAA,IAEAf,EAAAyhH,iBAAA,EAAApvG,EAAA1mB,mBAAAiV,EAAA/V,IAAA,WACAmV,EAAA0hH,mBAAA,EAAArvG,EAAAllB,yBACAyT,OACAC,IAAA,QACK,GACL,IAAAk9G,GAAA,EAAA1rG,EAAAllB,yBACAyT,OACAC,IAAA,OAkBA,OAhBAb,EAAA+9G,WAAA,EAAAzrG,EAAA1B,QAAAmtG,KAAAzzH,KAAA,KACAohB,EAAAi2G,gBAAA,EAAAtvG,EAAAllB,yBACAyT,OACAC,IAAA,QACKyR,EAAAnE,KAAAuB,MACL1P,EAAA4hH,YAAA,EAAAvvG,EAAAllB,yBACAyT,OACAC,IAAA,SAEA9E,OAAAC,UAAAgE,EAAA4hH,aAAA5hH,EAAA4hH,WAAA,KACA5hH,EAAA4hH,WAAA,GAEA5hH,EAAA6hH,SAAAn2G,EAAAo2G,aAAAzvG,EAAAnjB,oBAAA6D,UACA,QAAAiN,EAAA+9G,WACAryG,EAAAyzG,SAAA9sG,EAAApjB,eAAAyD,QAEAgZ,EA4CA,OArFAqlD,EAAAotD,EAAAiD,GA4CA7wD,EAAA4tD,IACAt9G,IAAA,sBACAvV,MAAA,SAAAsV,GACA,IAAAA,EAAA4O,IAAA,OAAA5O,EAAA4O,IAAA,UAEA,OADA,EAAA6C,EAAA7mB,MAAA,yDACA,GAEA,IAAAoV,EAAA4O,IAAA,UACA,SAAA6C,EAAA1mB,mBAAAiV,EAAA/V,IAAA,MAEA,IAAAy2H,KACA1gH,EAAA4O,IAAA,MACA8xG,EAAA98G,SAAA,EAAA6N,EAAA1mB,mBAAAiV,EAAA/V,IAAA,OAEA,IAAAk3H,EAAAnhH,EACA,MAAAmhH,EAAAvyG,IAAA,WAEA,GADAuyG,IAAAl3H,IAAA,YACA,EAAAynB,EAAAxC,QAAAiyG,GACA,MAEAA,EAAAvyG,IAAA,MACA8xG,EAAA98G,SAAA,EAAA6N,EAAA1mB,mBAAAo2H,EAAAl3H,IAAA,OAGA,OAAAy2H,EAAAhiH,KAAA,QAGAuB,IAAA,eACAvV,MAAA,SAAAs0H,GACA,SAAA3hH,KAAA+B,KAAA4hH,WAAAhC,MAGA/+G,IAAA,kBACAvV,MAAA,SAAA2hF,EAAA0G,EAAA6sC,GACA,OAAAA,EACA54G,QAAAC,QAAA,IAAA0zF,EAAA5lE,cAEA8nF,EAAAU,EAAAjzH,UAAAimE,WAAA1mE,OAAAiyC,eAAAyhF,EAAAjzH,WAAA,kBAAA+S,MAAA/T,KAAA+T,KAAAgvE,EAAA0G,EAAA6sC,OAIArC,EAtFA,CAuFCX,GAEDQ,EAAA,SAAAgE,GAGA,SAAAhE,EAAAhnG,GACAo6C,EAAAnzD,KAAA+/G,GAEA,IAAA1xG,EAAAukD,EAAA5yD,MAAA+/G,EAAA7sD,WAAA1mE,OAAAiyC,eAAAshF,IAAA9zH,KAAA+T,KAAA+Y,IAEApW,EAAAoW,EAAApW,KACA0L,EAAAtM,KAAAwhH,YAAA,EAAAnvG,EAAA1mB,mBAAA2gB,EAAAtM,KAAAwhH,YAAA,IACA,IAAAS,GAAA,EAAA5vG,EAAAllB,yBACAyT,OACAC,IAAA,QAEA9E,OAAAC,UAAAimH,MAAA,GAAAA,EAAA,KACAA,EAAA,MAEA31G,EAAAtM,KAAAkiH,cAAAD,EACA,IAAAE,GAAA,EAAA9vG,EAAAllB,yBACAyT,OACAC,IAAA,WAQA,QANA9E,OAAAC,UAAAmmH,MAAA,KACAA,EAAA,MAEA71G,EAAAtM,KAAAoV,OAAA+sG,EACA71G,EAAAtM,KAAAoiH,UAAA91G,EAAAw1G,aAAAzvG,EAAAnjB,oBAAAmE,WACAiZ,EAAAtM,KAAAqiH,KAAA/1G,EAAAw1G,aAAAzvG,EAAAnjB,oBAAA+E,QAAAqY,EAAAw1G,aAAAzvG,EAAAnjB,oBAAAmE,aAAAiZ,EAAAw1G,aAAAzvG,EAAAnjB,oBAAAoE,YAAAgZ,EAAAw1G,aAAAzvG,EAAAnjB,oBAAA2E,aAAA,OAAAyY,EAAAtM,KAAAoV,OACA9I,EAyBA,OApDAykD,EAAAitD,EAAAgE,GA8BAzxD,EAAAytD,IACAn9G,IAAA,kBACAvV,MAAA,SAAA2hF,EAAA0G,EAAA6sC,GACA,GAAAA,GAAAviH,KAAA0hH,WACA,OAAAlC,EAAAO,EAAA9yH,UAAAimE,WAAA1mE,OAAAiyC,eAAAshF,EAAA9yH,WAAA,kBAAA+S,MAAA/T,KAAA+T,KAAAgvE,EAAA0G,EAAA6sC,GAEA,IAAAjlF,EAAA,IAAAggE,EAAA5lE,aACA,IAAA13B,KAAA+B,KAAA0hH,kBACA,OAAA95G,QAAAC,QAAA0zB,GAEA,IAAAjxB,EAAA,IAAA0hB,EAAApa,QAAA,EAAAS,EAAAzmB,eAAAqS,KAAA+B,KAAA0hH,oBACA,OAAAz0C,EAAA0J,iBACArsE,SACAqpE,OACA4oB,UAAAt+F,KAAA0jH,eACApmF,iBACO1wB,KAAA,WACP,OAAA0wB,QAKAyiF,EArDA,CAsDCG,GAEDF,EAAA,SAAAqE,GAGA,SAAArE,EAAAjnG,GACAo6C,EAAAnzD,KAAAggH,GAEA,IAAA9wG,EAAA0jD,EAAA5yD,MAAAggH,EAAA9sD,WAAA1mE,OAAAiyC,eAAAuhF,IAAA/zH,KAAA+T,KAAA+Y,IAcA,OAZA7J,EAAAnN,KAAAuiH,UAAAp1G,EAAA20G,aAAAzvG,EAAAnjB,oBAAAsE,SAAA2Z,EAAA20G,aAAAzvG,EAAAnjB,oBAAAuE,YACA0Z,EAAAnN,KAAAwiH,YAAAr1G,EAAA20G,aAAAzvG,EAAAnjB,oBAAAsE,SAAA2Z,EAAA20G,aAAAzvG,EAAAnjB,oBAAAuE,YACA0Z,EAAAnN,KAAAyiH,WAAAt1G,EAAA20G,aAAAzvG,EAAAnjB,oBAAAuE,YACA0Z,EAAAnN,KAAAuiH,SACAp1G,EAAAu1G,mBACKv1G,EAAAnN,KAAAwiH,YACLr1G,EAAAw1G,oBAAA3rG,GACK7J,EAAAnN,KAAAyiH,WACLt1G,EAAAy1G,mBAAA5rG,IAEA,EAAA3E,EAAA7mB,MAAA,oDAEA2hB,EAqDA,OAxEA4jD,EAAAktD,EAAAqE,GAsBA/xD,EAAA0tD,IACAp9G,IAAA,mBACAvV,MAAA,YACA,EAAAgnB,EAAA1B,QAAA3S,KAAA+B,KAAAwhH,cAGAvjH,KAAA+B,KAAAwhH,WAAAvjH,KAAA+B,KAAAwhH,WAAAl3H,SAGAuW,IAAA,sBACAvV,MAAA,SAAA0rB,GACA/Y,KAAA+B,KAAAwhH,WAAAvjH,KAAA+B,KAAA6iH,YAAA,KACA,IAAAC,EAAA9rG,EAAApW,KAAA/V,IAAA,UACA,MAAAynB,EAAAxC,QAAAgzG,MAAAtzG,IAAA,MACA,IAAAuzG,EAAAD,EAAAj4H,IAAA,MACA,EAAAynB,EAAA1B,QAAAmyG,KACA9kH,KAAA+B,KAAAwhH,WAAAuB,EAAAz4H,MAGA,IAAA81H,EAAAppG,EAAApW,KAAA/V,IAAA,MACA,MAAAynB,EAAAxC,QAAAswG,GAAA,CAGA,IAAAC,EAAAD,EAAAv1H,IAAA,KACA,MAAAynB,EAAAxC,QAAAuwG,GAIA,IADA,IAAA9wG,EAAA8wG,EAAA/wG,UACAtlB,EAAA,EAAA8V,EAAAyP,EAAA7Q,OAAuC1U,EAAA8V,EAAQ9V,IAC/C,WAAAulB,EAAAvlB,GAAA,CACAiU,KAAA+B,KAAA6iH,YAAAtzG,EAAAvlB,GACA,WAKA6W,IAAA,qBACAvV,MAAA,SAAA0rB,GACAA,EAAApW,KAAA4O,IAAA,KAIA6rF,EAAAvzD,QAAAmC,qBACAC,SAAAlzB,EAAApW,KACAupC,UAAAlsC,KAAA+B,KACAoqC,WAAApzB,EAAA2xB,WAAAyB,cANA,EAAA/3B,EAAA7mB,MAAA,kEAWAyyH,EAzEA,CA0ECE,GAEDD,EAAA,SAAA8E,GAGA,SAAA9E,EAAAlnG,GACAo6C,EAAAnzD,KAAAigH,GAEA,IAAA+E,EAAApyD,EAAA5yD,MAAAigH,EAAA/sD,WAAA1mE,OAAAiyC,eAAAwhF,IAAAh0H,KAAA+T,KAAA+Y,IAEAisG,EAAAjjH,KAAA42C,WACA,IAAAA,GAAA,EAAAvkC,EAAAllB,yBACAyT,KAAAoW,EAAApW,KACAC,IAAA,QAEA,GAAAyD,MAAA4K,QAAA0nC,GAEA,IADA,IAAAvoC,EAAA2I,EAAA3I,KACArkB,EAAA,EAAA8V,EAAA82C,EAAAl4C,OAA0C1U,EAAA8V,EAAQ9V,IAAA,CAClD,IAAAk5H,EAAA70G,EAAAU,WAAA6nC,EAAA5sD,IACAm5H,EAAA7+G,MAAA4K,QAAAg0G,GACAD,EAAAjjH,KAAA42C,QAAA5sD,IACAo5H,YAAAD,EAAA90G,EAAAU,WAAAm0G,EAAA,IAAAA,EACAG,cAAA,EAAAhxG,EAAA1mB,mBAAAw3H,EAAA90G,EAAAU,WAAAm0G,EAAA,IAAAA,IASA,OALA5+G,MAAA4K,QAAA+zG,EAAAjjH,KAAAwhH,cACAyB,EAAAjjH,KAAAwhH,YAAAyB,EAAAjjH,KAAAwhH,aAEAyB,EAAAjjH,KAAAsjH,MAAAL,EAAAnB,aAAAzvG,EAAAnjB,oBAAAwE,OACAuvH,EAAAjjH,KAAAujH,YAAAN,EAAAnB,aAAAzvG,EAAAnjB,oBAAA4E,aACAmvH,EAGA,OA/BAlyD,EAAAmtD,EAAA8E,GA+BA9E,EAhCA,CAiCCC,GAEDL,EAAA,SAAA0F,GAGA,SAAA1F,EAAAF,GACAxsD,EAAAnzD,KAAA6/G,GAEA,IAAA2F,EAAA,GAEAC,EAAA7yD,EAAA5yD,MAAA6/G,EAAA3sD,WAAA1mE,OAAAiyC,eAAAohF,IAAA5zH,KAAA+T,KAAA2/G,IAWA,OATA8F,EAAA1jH,KAAAqhH,eAAAhvG,EAAArjB,eAAAgC,KACA0yH,EAAA1jH,KAAA0/G,cACAgE,EAAA1jH,KAAA1V,KAAA,UAEAo5H,EAAA1jH,KAAAmD,KAAA,GAAAugH,EAAA1jH,KAAAmD,KAAA,GAAAsgH,EACAC,EAAA1jH,KAAAmD,KAAA,GAAAugH,EAAA1jH,KAAAmD,KAAA,GAAAsgH,EACAC,EAAA1jH,KAAA1V,KAAAszH,EAAAh9G,KAAA4O,IAAA,QAAAouG,EAAAh9G,KAAA/V,IAAA,QAAAP,KAAA,QAEAo5H,EAAAC,cAAA/F,EAAAh9G,MACA8iH,EAGA,OArBA3yD,EAAA+sD,EAAA0F,GAqBA1F,EAtBA,CAuBCN,GAEDK,EAAA,SAAA+F,GAGA,SAAA/F,EAAA7mG,GACAo6C,EAAAnzD,KAAA4/G,GAEA,IAAAgG,EAAAhzD,EAAA5yD,MAAA4/G,EAAA1sD,WAAA1mE,OAAAiyC,eAAAmhF,IAAA3zH,KAAA+T,KAAA+Y,IAQA,OANA6sG,EAAA7jH,KAAAqhH,eAAAhvG,EAAArjB,eAAAiC,KACAoqG,EAAAvzD,QAAAmC,qBACAC,SAAAlzB,EAAApW,KACAupC,UAAA05E,EAAA7jH,KACAoqC,WAAApzB,EAAA2xB,WAAAyB,aAEAy5E,EAGA,OAhBA9yD,EAAA8sD,EAAA+F,GAgBA/F,EAjBA,CAkBCL,GAEDY,EAAA,SAAA0F,GAGA,SAAA1F,EAAAR,GACAxsD,EAAAnzD,KAAAmgH,GAEA,IAAA2F,EAAAlzD,EAAA5yD,MAAAmgH,EAAAjtD,WAAA1mE,OAAAiyC,eAAA0hF,IAAAl0H,KAAA+T,KAAA2/G,IAEAmG,EAAA/jH,KAAAqhH,eAAAhvG,EAAArjB,eAAA+C,MACA,IAAA6O,EAAAg9G,EAAAh9G,KACAojH,EAAApjH,EAAA/V,IAAA,UACA,IAAAm5H,EAEA,OADA,EAAA3xG,EAAA7mB,MAAA,gEACAqlE,EAAAkzD,GAEA,IAAAE,EAAAD,EAAAn5H,IAAA,WAWA,GAVAk5H,EAAA/jH,KAAAkkH,YAAA,EAAA5xG,EAAA1B,QAAAqzG,KAAA35H,KAAA,KACAy5H,EAAA/jH,KAAAmkH,SAAAvjH,EAAAyO,OAAA,UAAAlG,WACA46G,EAAA/jH,KAAAqqC,OAAA,EAAAh4B,EAAA1mB,mBAAAq4H,EAAAn5H,IAAA,UACAk5H,EAAA/jH,KAAAugH,UAAA,EAAAluG,EAAA1mB,mBAAAq4H,EAAAn5H,IAAA,iBACAm5H,EAAAx0G,IAAA,MAGAu0G,EAAA1E,SAAA2E,EAAAjjH,SAAA,MACAgjH,EAAA/jH,KAAAumB,MAAAw9F,EAAAx9F,OAHAw9F,EAAA/jH,KAAAumB,MAAA,MAKAw9F,EAAAjoB,SAAA,CACA,IAAAsoB,EAAAJ,EAAAn5H,IAAA,KACAk5H,EAAArD,YAAA0D,IACAL,EAAA5E,SAAAiF,GAGA,OAAAL,EAGA,OAlCAhzD,EAAAqtD,EAAA0F,GAkCA1F,EAnCA,CAoCCZ,GAEDa,EAAA,SAAAgG,GAGA,SAAAhG,EAAAT,GACAxsD,EAAAnzD,KAAAogH,GAEA,IAAAiG,EAAAzzD,EAAA5yD,MAAAogH,EAAAltD,WAAA1mE,OAAAiyC,eAAA2hF,IAAAn0H,KAAA+T,KAAA2/G,IAEA0G,EAAAtkH,KAAAqhH,eAAAhvG,EAAArjB,eAAAmC,KACA,IAAAyP,EAAAg9G,EAAAh9G,KAGA,OAFA0jH,EAAAtkH,KAAAukH,gBAAAlyG,EAAAvkB,KAAAoV,cAAAtC,EAAAG,SAAA,MACAujH,EAAAX,cAAA/iH,GACA0jH,EAGA,OAdAvzD,EAAAstD,EAAAgG,GAcAhG,EAfA,CAgBCb,GAEDc,EAAA,SAAAkG,GAGA,SAAAlG,EAAAV,GACAxsD,EAAAnzD,KAAAqgH,GAEA,IAAAmG,EAAA5zD,EAAA5yD,MAAAqgH,EAAAntD,WAAA1mE,OAAAiyC,eAAA4hF,IAAAp0H,KAAA+T,KAAA2/G,IAIA,OAFA6G,EAAAzkH,KAAAqhH,eAAAhvG,EAAArjB,eAAAoC,OACAqzH,EAAAd,cAAA/F,EAAAh9G,MACA6jH,EAGA,OAZA1zD,EAAAutD,EAAAkG,GAYAlG,EAbA,CAcCd,GAEDe,EAAA,SAAAmG,GAGA,SAAAnG,EAAAX,GACAxsD,EAAAnzD,KAAAsgH,GAEA,IAAAoG,EAAA9zD,EAAA5yD,MAAAsgH,EAAAptD,WAAA1mE,OAAAiyC,eAAA6hF,IAAAr0H,KAAA+T,KAAA2/G,IAIA,OAFA+G,EAAA3kH,KAAAqhH,eAAAhvG,EAAArjB,eAAAqC,OACAszH,EAAAhB,cAAA/F,EAAAh9G,MACA+jH,EAGA,OAZA5zD,EAAAwtD,EAAAmG,GAYAnG,EAbA,CAcCf,GAEDgB,EAAA,SAAAoG,GAGA,SAAApG,EAAAZ,GACAxsD,EAAAnzD,KAAAugH,GAEA,IAAAqG,EAAAh0D,EAAA5yD,MAAAugH,EAAArtD,WAAA1mE,OAAAiyC,eAAA8hF,IAAAt0H,KAAA+T,KAAA2/G,IAEAiH,EAAA7kH,KAAAqhH,eAAAhvG,EAAArjB,eAAAuC,SACA,IAAAqP,EAAAg9G,EAAAh9G,KACAkkH,EAAAlkH,EAAAG,SAAA,YACA8jH,EAAA7kH,KAAA+kH,YACA,QAAA/6H,EAAA,EAAA8V,EAAAglH,EAAApmH,OAA4C1U,EAAA8V,EAAQ9V,GAAA,EACpD66H,EAAA7kH,KAAA+kH,SAAA1lH,MACAa,EAAA4kH,EAAA96H,GACA8c,EAAAg+G,EAAA96H,EAAA,KAIA,OADA66H,EAAAlB,cAAA/iH,GACAikH,EAGA,OArBA9zD,EAAAytD,EAAAoG,GAqBApG,EAtBA,CAuBChB,GAEDiB,EAAA,SAAAuG,GAGA,SAAAvG,EAAAb,GACAxsD,EAAAnzD,KAAAwgH,GAEA,IAAAwG,EAAAp0D,EAAA5yD,MAAAwgH,EAAAttD,WAAA1mE,OAAAiyC,eAAA+hF,IAAAv0H,KAAA+T,KAAA2/G,IAGA,OADAqH,EAAAjlH,KAAAqhH,eAAAhvG,EAAArjB,eAAAsC,QACA2zH,EAGA,OAXAl0D,EAAA0tD,EAAAuG,GAWAvG,EAZA,CAaCD,GAEDE,EAAA,SAAAwG,GAGA,SAAAxG,EAAAd,GACAxsD,EAAAnzD,KAAAygH,GAEA,IAAAyG,EAAAt0D,EAAA5yD,MAAAygH,EAAAvtD,WAAA1mE,OAAAiyC,eAAAgiF,IAAAx0H,KAAA+T,KAAA2/G,IAIA,OAFAuH,EAAAnlH,KAAAqhH,eAAAhvG,EAAArjB,eAAAwC,UACA2zH,EAAAxB,cAAA/F,EAAAh9G,MACAukH,EAGA,OAZAp0D,EAAA2tD,EAAAwG,GAYAxG,EAbA,CAcClB,GAEDmB,EAAA,SAAAyG,GAGA,SAAAzG,EAAAf,GACAxsD,EAAAnzD,KAAA0gH,GAEA,IAAA0G,EAAAx0D,EAAA5yD,MAAA0gH,EAAAxtD,WAAA1mE,OAAAiyC,eAAAiiF,IAAAz0H,KAAA+T,KAAA2/G,IAIA,OAFAyH,EAAArlH,KAAAqhH,eAAAhvG,EAAArjB,eAAAyC,UACA4zH,EAAA1B,cAAA/F,EAAAh9G,MACAykH,EAGA,OAZAt0D,EAAA4tD,EAAAyG,GAYAzG,EAbA,CAcCnB,GAEDoB,EAAA,SAAA0G,GAGA,SAAA1G,EAAAhB,GACAxsD,EAAAnzD,KAAA2gH,GAEA,IAAA2G,EAAA10D,EAAA5yD,MAAA2gH,EAAAztD,WAAA1mE,OAAAiyC,eAAAkiF,IAAA10H,KAAA+T,KAAA2/G,IAIA,OAFA2H,EAAAvlH,KAAAqhH,eAAAhvG,EAAArjB,eAAA0C,SACA6zH,EAAA5B,cAAA/F,EAAAh9G,MACA2kH,EAGA,OAZAx0D,EAAA6tD,EAAA0G,GAYA1G,EAbA,CAcCpB,GAEDqB,EAAA,SAAA2G,GAGA,SAAA3G,EAAAjB,GACAxsD,EAAAnzD,KAAA4gH,GAEA,IAAA4G,EAAA50D,EAAA5yD,MAAA4gH,EAAA1tD,WAAA1mE,OAAAiyC,eAAAmiF,IAAA30H,KAAA+T,KAAA2/G,IAIA,OAFA6H,EAAAzlH,KAAAqhH,eAAAhvG,EAAArjB,eAAA2C,UACA8zH,EAAA9B,cAAA/F,EAAAh9G,MACA6kH,EAGA,OAZA10D,EAAA8tD,EAAA2G,GAYA3G,EAbA,CAcCrB,GAEDsB,EAAA,SAAA4G,GAGA,SAAA5G,EAAAlB,GACAxsD,EAAAnzD,KAAA6gH,GAEA,IAAA6G,EAAA90D,EAAA5yD,MAAA6gH,EAAA3tD,WAAA1mE,OAAAiyC,eAAAoiF,IAAA50H,KAAA+T,KAAA2/G,IAIA,OAFA+H,EAAA3lH,KAAAqhH,eAAAhvG,EAAArjB,eAAA4C,MACA+zH,EAAAhC,cAAA/F,EAAAh9G,MACA+kH,EAGA,OAZA50D,EAAA+tD,EAAA4G,GAYA5G,EAbA,CAcCtB,GAEDuB,EAAA,SAAA6G,GAGA,SAAA7G,EAAAnB,GACAxsD,EAAAnzD,KAAA8gH,GAEA,IAAA8G,EAAAh1D,EAAA5yD,MAAA8gH,EAAA5tD,WAAA1mE,OAAAiyC,eAAAqiF,IAAA70H,KAAA+T,KAAA2/G,IAEAvhD,EAAA,IAAAg/B,EAAA1zD,SAAAi2E,EAAAh9G,KAAA/V,IAAA,MAAA+yH,EAAAvvG,MAIA,OAHAw3G,EAAA7lH,KAAAqhH,eAAAhvG,EAAArjB,eAAAgD,eACA6zH,EAAA7lH,KAAAq8D,OAAAvvB,aACA+4E,EAAAlC,cAAA/F,EAAAh9G,MACAilH,EAGA,OAdA90D,EAAAguD,EAAA6G,GAcA7G,EAfA,CAgBCvB,GAED9zH,EAAA8zH,aACA9zH,EAAA6zH,wBACA7zH,EAAAs0G,qBAIA,SAAAv0G,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAszG,sBAAAvtG,EAEA,IAAA4iB,EAAAvoB,EAAA,GAEAg8H,EAAAh8H,EAAA,KAEAkiC,EAAAliC,EAAA,GAEAwoB,EAAAxoB,EAAA,GAEAi8H,EAAAj8H,EAAA,KAEA4xE,EAAA5xE,EAAA,IAEAk8H,EAAAl8H,EAAA,IAEAm8H,EAAAn8H,EAAA,IAEAo8H,EAAAp8H,EAAA,KAEAy+C,EAAAz+C,EAAA,IAEAq8H,EAAAr8H,EAAA,KAEA4+C,EAAA5+C,EAAA,IAEAs8H,EAAAt8H,EAAA,IAEAu8H,EAAAv8H,EAAA,KAEA2xG,EAAA3xG,EAAA,IAEAqiC,EAAAriC,EAAA,IAEAw8H,EAAAx8H,EAAA,KAEAyxG,EAAAzxG,EAAA,IAEAy8H,EAAAz8H,EAAA,KAEAkzG,EAAA,WACA,IAAAwpB,GACAr+G,iBAAA,EACAqtE,cAAA,EACAC,iBAAA,EACAC,0BAAArjE,EAAA9jB,oBAAA0B,OACA0lF,cAAA,EACArpF,iBAAA,GAEA,SAAAm6H,EAAA9lH,GACA,IAAA0N,EAAA1N,EAAA0N,KACAkuF,EAAA57F,EAAA47F,UACApxF,EAAAxK,EAAAwK,QACAu7G,EAAA/lH,EAAAwH,gBACAA,OAAA1Y,IAAAi3H,KACA5lG,EAAAngB,EAAAmgB,mBAEA7iB,KAAAoQ,OACApQ,KAAAs+F,YACAt+F,KAAAkN,UACAlN,KAAAkK,kBACAlK,KAAA6iB,qBAmCA,SAAAk8E,EAAA3vF,GACA,IAAA1D,EAAA1L,KAEA0qC,EAAAt7B,EAAAs7B,WACAt6B,EAAAhB,EAAAgB,KACAlD,EAAAkC,EAAAlC,QACAwvB,EAAAttB,EAAAstB,UACAyhE,EAAA/uF,EAAA+uF,UACArzD,EAAA17B,EAAA07B,UACAC,EAAA37B,EAAA27B,iBACA29E,EAAAt5G,EAAAupC,QACAA,OAAAnnD,IAAAk3H,EAAA,KAAAA,EACA7lG,EAAAzT,EAAAyT,mBAEA7iB,KAAA0qC,aACA1qC,KAAAoQ,OACApQ,KAAAkN,UACAlN,KAAA08B,YACA18B,KAAAm+F,YACAn+F,KAAA8qC,YACA9qC,KAAA+qC,mBACA/qC,KAAA24C,WAAA4vE,EACAvoH,KAAA6iB,qBACA7iB,KAAA2oH,iBAAA,SAAAt8H,GACA,IAAAu8H,EAAAl9G,EAAAq/B,iBAAA1+C,GACA,OAAAu8H,EACAj/G,QAAAC,QAAAg/G,GAEAl9G,EAAAwB,QAAAI,gBAAA,oBAAgEjhB,SAAaugB,KAAA,SAAA7K,GAI7E,OAHAA,EAAA8mH,kBAAAz0G,EAAAxjB,oBAAAmB,OACA2Z,EAAAq/B,iBAAA1+C,GAAA0V,GAEAA,KAjEAymH,EAAAv7H,WACA67H,UAAA,SAAAC,GACA,OAAAA,aAAA76F,EAAAkE,YAAAo2F,EAAAQ,YAAAD,EAAA/oH,KAAAoQ,KAAApQ,KAAAs+F,UAAAt+F,KAAA6iB,qBAEA+B,OAAA,SAAAmkG,GACA,IAAApmH,EAAAomH,EAAApmH,KACAsmH,EAAAtmH,EAAA/V,IAAA,mBAEA,OADAq8H,EAAAx+E,EAAAxqB,WAAAyC,MAAAumG,EAAAjpH,KAAAoQ,KAAApQ,KAAAs+F,UAAAt+F,KAAA6iB,oBACA7iB,KAAAkN,QAAAI,gBAAA,cAAAy7G,EAAAtxF,MAAAz3B,KAAAkK,iBAAA++G,EAAA7mG,WAAAxV,KAAA,SAAA2B,GACA,IAAAxM,EAAAwM,EAAAxM,KACAwM,EAAAnG,MACAmG,EAAAlG,OAEA,WAAA0lB,EAAApa,OAAA5R,EAAA,EAAAA,EAAAtB,OAAAsoH,EAAApmH,UAIA6lH,EAAAU,YAAA,SAAAH,EAAA34G,EAAAwS,EAAAC,GACA,IAAAlgB,EAAAomH,EAAApmH,KACA,GAAAA,EAAA4O,IAAA,gBAAA5O,EAAA4O,IAAA,MACA,SAEA,IAAAoR,EAAA8nB,EAAAxqB,WAAAyC,MAAA/f,EAAA/V,IAAA,mBAAAwjB,EAAAwS,EAAAC,GACA,sBAAAF,EAAAt2B,MAAA,cAAAs2B,EAAAt2B,OAAAs2B,EAAAgC,gBAAAhiB,EAAAG,SAAA,gBAEA0lH,EAAAQ,YAAA,SAAAD,EAAA34G,EAAAwS,EAAAC,GACA,IAAAlgB,EAAAomH,EAAApmH,KACA,GAAAA,EAAA4O,IAAA,gBAAA5O,EAAA4O,IAAA,MACA,SAEA,IAAAoR,EAAA8nB,EAAAxqB,WAAAyC,MAAA/f,EAAA/V,IAAA,mBAAAwjB,EAAAwS,EAAAC,GACA,WAAAF,EAAAP,UAAA,IAAAO,EAAAP,WAAAO,EAAAgC,gBAAAhiB,EAAAG,SAAA,gBAsCA,IAAAqmH,EAAA,GACAC,EAAA,IACA,SAAAC,IACArpH,KAAAiV,QAeA,SAAAq0G,EAAAj8H,GACA,OAAAgnB,EAAA1B,QAAAtlB,GACA,oBAEA,OAAAA,EAAAhB,MACA,aACA,iBACA,oBACA,eACA,iBACA,aACA,eACA,cACA,gBACA,aACA,eACA,cACA,gBACA,iBACA,oBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,iBACA,mBACA,gBACA,kBACA,UACA,YACA,iBACA,mBACA,YACA,cACA,iBACA,mBAGA,OADA,EAAA+nB,EAAA7mB,MAAA,2BAAAF,EAAAhB,MACA,cArDAg9H,EAAAp8H,WACA6rB,MAAA,WACA,UAAA9Y,KAAAupH,QAAAH,KAGAppH,KAAAupH,QAAA,EACAvpH,KAAAwpH,SAAA/wC,KAAAh1C,QAEAxuB,MAAA,WACAjV,KAAAwpH,QAAA/wC,KAAAh1C,MAAA0lF,EACAnpH,KAAAupH,QAAA,IA6CA,IAAAE,EAAA9/G,QAAAC,UACA8/G,EAAA,EACAC,EAAA,EAg4DA,OA/3DA5qB,EAAA9xG,WACAyb,MAAA,WACA,IAAAkhH,EAAAz/G,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,GAAAA,UAAA,GAAAo+G,EAEAsB,EAAAr9H,OAAAoT,OAAAI,MAEA,OADA6pH,EAAAlxE,QAAAixE,EACAC,GAGAzqB,cAAA,SAAAd,GACA,OAAAjqF,EAAAxC,QAAAysF,GACA,SAEA,IAAAzyD,EAAAr/C,OAAAoT,OAAA,MACA0+F,EAAAhuF,QACAu7B,EAAAyyD,EAAAhuF,QAAA,GAEA,IAAAw5G,GAAAxrB,GACAluF,EAAApQ,KAAAoQ,KACA,MAAA05G,EAAArpH,OAAA,CACA,IAAAmC,EAAA7W,EAAA8V,EACAyuC,EAAAw5E,EAAA9zG,QACA+zG,EAAAz5E,EAAA1jD,IAAA,aACA,MAAAynB,EAAAxC,QAAAk4G,GAAA,CACA,IAAAC,EAAAD,EAAA14G,UACA,IAAAtlB,EAAA,EAAA8V,EAAAmoH,EAAAvpH,OAAoD1U,EAAA8V,EAAQ9V,IAAA,CAC5D6W,EAAAonH,EAAAj+H,GACA,IAAAk+H,EAAAF,EAAAn9H,IAAAgW,GACAsnH,EAAAD,EAAAr9H,IAAA,MACA,MAAAynB,EAAA1B,QAAAu3G,IAAA,WAAAA,EAAA79H,KACA,UAIA,IAAA89H,EAAA75E,EAAA1jD,IAAA,WACA,MAAAynB,EAAAxC,QAAAs4G,GAAA,CAGA,IAAAC,EAAAD,EAAA94G,UACA,IAAAtlB,EAAA,EAAA8V,EAAAuoH,EAAA3pH,OAA6C1U,EAAA8V,EAAQ9V,IAAA,CACrD6W,EAAAwnH,EAAAr+H,GACA,IAAAs+H,EAAAF,EAAA/4G,OAAAxO,GACA,MAAAyR,EAAAnD,OAAAm5G,GAAA,CACA,GAAAx+E,EAAAw+E,EAAAn/G,YACA,SAEAm/G,EAAAj6G,EAAAe,MAAAk5G,GAEA,MAAAh2G,EAAArB,UAAAq3G,GAAA,CAGA,GAAAA,EAAA1nH,KAAA2N,MAAA,CACA,GAAAu7B,EAAAw+E,EAAA1nH,KAAA2N,OACA,SAEAu7B,EAAAw+E,EAAA1nH,KAAA2N,QAAA,EAEA,IAAAg6G,EAAAD,EAAA1nH,KAAA/V,IAAA,eACA,EAAAynB,EAAAxC,QAAAy4G,MAAAh6G,OAAAu7B,EAAAy+E,EAAAh6G,SACAw5G,EAAA1oH,KAAAkpH,GACAA,EAAAh6G,QACAu7B,EAAAy+E,EAAAh6G,QAAA,OAKA,UAEAi6G,iBAAA,SAAAjsB,EAAAksB,EAAA/rH,EAAA6+B,EAAAo4C,EAAA+0C,GACA,IAAA9nH,EAAA6nH,EAAA7nH,KACA6gB,EAAA7gB,EAAAG,SAAA,UACAk+G,EAAAr+G,EAAAG,SAAA,QACA4nH,EAAA/nH,EAAA/V,IAAA,SACA,GAAA89H,EAAA,CACA,IAAAC,GACAnnG,SACAw9F,OACAviH,QACAmsH,UAAA,EACAC,UAAA,GAEAC,EAAAJ,EAAA99H,IAAA,KACAq8H,EAAA,MACA,EAAA50G,EAAA1B,QAAAm4G,EAAA,kBACAH,EAAAC,SAAAF,EAAA99H,IAAA,SACA+9H,EAAAE,SAAAH,EAAA99H,IAAA,SACA89H,EAAAn5G,IAAA,QACA03G,EAAAx+E,EAAAxqB,WAAAyC,MAAAgoG,EAAA99H,IAAA,MAAAoT,KAAAoQ,KAAAkuF,EAAAt+F,KAAA6iB,sBAGApkB,KAAAssH,WACA9B,KAAAx+E,EAAAxqB,WAAAmD,WAAA/B,IACA5iB,EAAAssH,SAAA9B,EAAA9nG,OAAA1iB,EAAAssH,SAAA,IAEAztF,EAAAN,MAAA5oB,EAAA/iB,IAAAuL,YAAA+tH,IAGA,OADArtF,EAAAN,MAAA5oB,EAAA/iB,IAAAqL,uBAAA8mB,EAAAw9F,IACAhhH,KAAA04E,iBACArsE,OAAAm+G,EACA90C,OACA4oB,UAAA37F,EAAA/V,IAAA,cAAA0xG,EACAhhE,eACAmtF,iBACO79G,KAAA,WACP0wB,EAAAN,MAAA5oB,EAAA/iB,IAAAsL,wBACA+tH,GACAptF,EAAAN,MAAA5oB,EAAA/iB,IAAAwL,UAAA8tH,OAIAK,uBAAA,SAAA/+C,GACA,IAAAx+D,EAAAzN,KAEAs+F,EAAAryB,EAAAqyB,UACAyqB,EAAA98C,EAAA88C,MACAkC,EAAAh/C,EAAAi/C,SACAA,OAAA15H,IAAAy5H,KACA3tF,EAAA2uC,EAAA3uC,aACAvM,EAAAk7C,EAAAl7C,SACApC,EAAAs9C,EAAAt9C,WACAw8F,EAAAl/C,EAAAm/C,+BACAA,OAAA55H,IAAA25H,KAEAxoH,EAAAomH,EAAApmH,KACAyzB,EAAAzzB,EAAA/V,IAAA,aACA+sC,EAAAh3B,EAAA/V,IAAA,cACA,IAAAwpC,KAAA,EAAAhiB,EAAAzlB,OAAAynC,KAAAuD,KAAA,EAAAvlB,EAAAzlB,OAAAgrC,GAEA,OADA,EAAAvlB,EAAA7mB,MAAA,iDACAoc,QAAAC,UAEA,IAAA2tE,EAAAv3E,KAAA24C,QAAA4+B,aACA,QAAAA,GAAAnhD,EAAAuD,EAAA49C,EAEA,OADA,EAAAnjE,EAAA7mB,MAAA,wDACAoc,QAAAC,UAEA,IACAkwB,EAAAnxB,EADA6vB,EAAA71B,EAAA/V,IAAA,sBAEA,GAAA4rC,EAAA,CACA,IAAApwB,EAAAzF,EAAA/V,IAAA,aACAyb,EAAA1F,EAAA/V,IAAA,cACAy+H,EAAAjjH,EAAA,KACAkjH,EAAAvC,EAAA91G,SAAAo4G,EAAAhjH,GACAuc,EAAAjiB,EAAAG,SAAA,cAiBA,OAhBAg3B,EAAAwuF,EAAAiD,SAAAC,YACAF,WACAljH,QACAC,SACAojH,wBAAA1C,aAAAh7F,EAAA/Z,aACA03G,gBAAA9mG,KAAA,OAEAkV,EAAAyC,QAAA,EACA5zB,GAAAmxB,GACAwD,EAAAN,MAAA5oB,EAAA/iB,IAAA8L,sBAAAwL,GACAooB,IACApC,EAAAoC,IACAlmB,GAAAuJ,EAAA/iB,IAAA8L,sBACAwL,SAGAgB,QAAAC,UAEA,IAAA+hH,EAAAhpH,EAAA/V,IAAA,kBACAimH,EAAAlwG,EAAA/V,IAAA,YACAg/H,EAAA,IACA,GAAAV,IAAAS,IAAA9Y,KAAAkW,aAAA76F,EAAAkE,aAAAgE,EAAAuD,EAAAiyF,EAAA,CACA,IAAAC,EAAA,IAAAvD,EAAAiD,UACAn7G,KAAApQ,KAAAoQ,KACAwS,IAAA07E,EACAyqB,QACAmC,WACAroG,mBAAA7iB,KAAA6iB,qBAIA,OAFAiX,EAAA+xF,EAAAC,iBAAA,GACAxuF,EAAAN,MAAA5oB,EAAA/iB,IAAAiM,yBAAAw8B,IACAnwB,QAAAC,UAEA,IAAA6tE,EAAA2zC,EAAAh3G,EAAA9jB,oBAAAyB,KAAAiO,KAAA24C,QAAA8+B,0BACAnnE,EAAA,OAAAtQ,KAAAm+F,UAAAC,cACA,GAAA3mB,IAAArjE,EAAA9jB,oBAAAyB,OAAA45H,IAAA9Y,GAAAkW,aAAA76F,EAAAkE,YAAAo2F,EAAAU,YAAAH,EAAA/oH,KAAAoQ,KAAAkuF,EAAAt+F,KAAA6iB,oBACA,OAAA7iB,KAAAkN,QAAAI,gBAAA,OAAAgD,EAAAtQ,KAAA08B,UAAA,aAAAqsF,EAAAtxF,MAAAz3B,KAAA24C,QAAAzuC,mBAAA0C,KAAA,WACA0wB,EAAAL,cAAA3sB,GACA3H,GAAA2H,EAAA8lB,EAAAuD,GACA2D,EAAAN,MAAA5oB,EAAA/iB,IAAA6L,iBAAAyL,GACAooB,IACApC,EAAAoC,IACAlmB,GAAAuJ,EAAA/iB,IAAA6L,iBACAyL,UAGS,SAAAqC,GAET,OADA,EAAAoJ,EAAA7mB,MAAA,sDAAAyd,KAAA/K,UACAwN,EAAAu9G,wBACA1sB,YACAyqB,QACAmC,WACA5tF,eACAvM,WACApC,aACAy8F,gCAAA,MAIA,IAAAW,EAAA,KAkCA,OAjCAt0C,IAAArjE,EAAA9jB,oBAAA0B,SAAA+2H,aAAA76F,EAAAkE,YAAAygF,aAAA3kF,EAAAkE,YAAAu5F,aAAAz9F,EAAAkE,cACA25F,EAAA,IAAAvD,GACAp4G,KAAApQ,KAAAoQ,KACAkuF,YACApxF,QAAAlN,KAAAkN,QACAhD,gBAAAlK,KAAA24C,QAAAzuC,gBACA2Y,mBAAA7iB,KAAA6iB,sBAGAya,EAAAL,cAAA3sB,GACA3H,GAAA2H,EAAA8lB,EAAAuD,GACA2uF,EAAAiD,SAAAS,YACA9+G,QAAAlN,KAAAkN,QACAkD,KAAApQ,KAAAoQ,KACAwS,IAAA07E,EACAyqB,QACAmC,WACAe,cAAAF,EACAlpG,mBAAA7iB,KAAA6iB,qBACOjW,KAAA,SAAAi/G,GACP,IAAA/xF,EAAA+xF,EAAAC,iBAAA,GACAr+G,EAAAP,QAAAE,KAAA,OAAAkD,EAAA7C,EAAAivB,UAAA,QAAA5C,MAAA/3B,KAAAS,WACO8I,MAAA,SAAAN,IACP,EAAAoJ,EAAA7mB,MAAA,2BAAAyd,GACAyC,EAAAP,QAAAE,KAAA,OAAAkD,EAAA7C,EAAAivB,UAAA,iBAEAY,EAAAN,MAAA5oB,EAAA/iB,IAAAgM,kBAAAsL,GACAooB,IACApC,EAAAoC,IACAlmB,GAAAuJ,EAAA/iB,IAAAgM,kBACAsL,SAGAgB,QAAAC,WAGAsiH,YAAA,SAAAztH,EAAA6/F,EAAAhhE,EAAAo4C,EAAAy2C,GACA,IAAAC,EAAA3tH,EAAA7R,IAAA,KACAy/H,GACA/gF,QAAA7sC,EAAA7R,IAAA,KAAAP,KACA0+H,SAAAtsH,EAAA7R,IAAA,OAEA0/H,EAAA7tH,EAAA7R,IAAA,MACA,MAAA4wG,EAAAlzB,eAAAgiD,GAAA,CAIA,IAHA,IAAAC,EAAAvsH,KAAA6iB,mBAAAjjB,OAAA0sH,GACAE,EAAA,IAAAlrH,WAAA,KACA+xD,EAAA,IAAAnuC,aAAA,GACAn5B,EAAA,EAAuBA,EAAA,IAASA,IAChCsnE,EAAA,GAAAtnE,EAAA,IACAwgI,EAAAl5D,EAAA,EAAAA,EAAA,GACAm5D,EAAAzgI,GAAA,IAAAsnE,EAAA,KAEAg5D,EAAAG,cAEA,OAAAxsH,KAAAuqH,iBAAAjsB,EAAA8tB,EAAAC,EAAA/uF,EAAAo4C,EAAAy2C,EAAAr8F,MAAApnB,UAEA+jH,iBAAA,SAAA5hH,EAAAlC,EAAA21F,EAAAxmE,EAAA40F,EAAApvF,EAAAo4C,GACA,IAAArnE,EAAArO,KAEA2sH,EAAA,IAAArvB,EAAA5lE,aACAk1F,GAAAF,EAAA9/H,IAAA,aAAA0xG,GACAuuB,EAAAx4G,EAAAnE,KAAAwB,MAAA1R,KAAAoQ,KAAAw8G,GACA,OAAA5sH,KAAA04E,iBACArsE,OAAAyrB,EACA49C,OACA4oB,UAAAuuB,EACAvvF,aAAAqvF,IACO//G,KAAA,WACP,SAAAq7G,EAAA6E,qBACA10F,QAAAu0F,EAAAv0F,QACAC,UAAAs0F,EAAAt0F,WACSq0F,EAAA/jH,KACFiE,KAAA,SAAAmgH,GACPzvF,EAAAJ,gBAAAyvF,EAAA/vF,cACAU,EAAAN,MAAAnyB,EAAAkiH,IACO,SAAA/hH,GACP,GAAAqD,EAAAsqC,QAAA++B,aAGA,OAFArpE,EAAAnB,QAAAE,KAAA,sBAAqDwrE,UAAAxkE,EAAAjjB,qBAAAmN,eACrD,EAAA8V,EAAA7mB,MAAA,yCAAAyd,EAAA,MAGA,MAAAA,KAIAgiH,cAAA,SAAA1uB,EAAA2uB,EAAAC,EAAA5vF,EAAAo4C,EAAA5lD,GACA,IAEAq9F,EAFAj+G,EAAAlP,KAOA,OAJAitH,IACAA,IAAA/oH,QACAipH,EAAAF,EAAA,GAAA5gI,MAEA2T,KAAAotH,SAAAD,EAAAD,EAAA5uB,GAAA1xF,KAAA,SAAA0iC,GACA,OAAAA,EAAA3wC,KAAA0uH,YAGA/9E,EAAAg+E,cAAAp+G,EAAAovF,EAAAhhE,EAAAo4C,GAAA9oE,KAAA,WACA,OAAA0iC,IACShkC,MAAA,SAAAN,GAET,OADAkE,EAAAhC,QAAAE,KAAA,sBAAqDwrE,UAAAxkE,EAAAjjB,qBAAAwN,OACrD,IAAA4uH,EAAA,mBAAAzF,EAAA0F,UAAA,0BAAAxiH,GAAAskC,EAAA3wC,QANA2wC,IAQO1iC,KAAA,SAAA0iC,GAGP,OAFAxf,EAAAnxB,KAAA2wC,EAAA3wC,KACA2wC,EAAAliC,KAAA8B,EAAAhC,SACAoiC,EAAAm+E,cAGAC,WAAA,SAAAzjD,EAAAn6C,GACA,IAAAk1F,EAAAhlH,KAEArB,EAAAmxB,EAAAnxB,KACAgvH,EAAAhvH,EAAAivH,cAAA3jD,GACA4jD,KAAA/9F,EAAAg+F,kBAAA15G,EAAApkB,kBAAA2C,kBACA,GAAAgM,EAAAoD,OAAA8rH,GAAA7tH,KAAA24C,QAAA6+B,iBAAA,YAAA1nD,EAAAi+F,eAAA1hI,MAOA,IANA,IAAA2hI,EAAA,SAAAC,GACA,IAAAtvH,EAAAuvH,SAAAC,aAAAF,GAAA,CACA,IAAAG,EAAAzvH,EAAAuvH,SAAAG,UAAAJ,GACAjJ,EAAA93G,QAAAE,KAAA,aAAAzO,EAAA8uH,WAAA,SAAAQ,EAAA,WAAAG,MAGAriI,EAAA,EAAA8V,EAAA8rH,EAAAltH,OAA2C1U,EAAA8V,EAAQ9V,IAAA,CACnD,IAAAuiI,EAAAX,EAAA5hI,GACAiiI,EAAAM,EAAAL,UACA,IAAAM,EAAAD,EAAAC,OACAA,KAAAN,UACAD,EAAAO,EAAAN,UAIA,OAAAN,GAEAl1H,UAAA,SAAA6lG,EAAAkwB,EAAAlxF,EAAAo4C,EAAAy2C,GAuEA,IAtEA,IAAA1G,EAAAzlH,KAEAyuH,KACAC,EAAAF,EAAAn9G,UACA3H,EAAAC,QAAAC,UAEA+kH,EAAA,WACA,IAAA/rH,EAAA8rH,EAAA3iI,GACAsB,EAAAmhI,EAAA5hI,IAAAgW,GACA,OAAAA,GACA,WACA,MACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA6rH,EAAArtH,MAAAwB,EAAAvV,IACA,MACA,WACAqc,IAAAkD,KAAA,WACA,OAAA64G,EAAAuH,cAAA1uB,EAAA,KAAAjxG,EAAA,GAAAiwC,EAAAo4C,EAAAy2C,EAAAr8F,OAAAljB,KAAA,SAAA6gH,GACAnwF,EAAAL,cAAAwwF,GACAgB,EAAArtH,MAAAwB,GAAA6qH,EAAApgI,EAAA,UAGA,MACA,SACAohI,EAAArtH,MAAAwB,EAAA0mH,EAAAj8H,KACA,MACA,YACA,MAAAgnB,EAAA1B,QAAAtlB,EAAA,SACAohI,EAAArtH,MAAAwB,GAAA,IACA,OAEA,EAAAyR,EAAAxC,QAAAxkB,IACAqc,IAAAkD,KAAA,WACA,OAAA64G,EAAAyG,YAAA7+H,EAAAixG,EAAAhhE,EAAAo4C,EAAAy2C,KAEAsC,EAAArtH,MAAAwB,GAAA,MAEA,EAAAwR,EAAA7mB,MAAA,0BAEA,MACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,SACA,UACA,SACA,SACA,SACA,UACA,UACA,EAAA6mB,EAAArlB,MAAA,0BAAA6T,GACA,MACA,SACA,EAAAwR,EAAArlB,MAAA,kCAAA6T,GACA,QAIA7W,EAAA,EAAA8V,EAAA6sH,EAAAjuH,OAA6C1U,EAAA8V,EAAQ9V,IACrD4iI,IAEA,OAAAjlH,EAAAkD,KAAA,WACA6hH,EAAAhuH,OAAA,GACA68B,EAAAN,MAAA5oB,EAAA/iB,IAAAoH,WAAAg2H,OAIArB,SAAA,SAAAD,EAAAxuH,EAAA2/F,GACA,IAAAsnB,EAAA5lH,KAEA,SAAA4uH,IACA,OAAAjlH,QAAAC,QAAA,IAAA2jH,EAAA,mBAAAzF,EAAA0F,UAAA,QAAAL,EAAA,qBAAAxuH,IAEA,IAAAuuH,EACA98G,EAAApQ,KAAAoQ,KACA,GAAAzR,EAAA,CACA,OAAA0V,EAAAnD,OAAAvS,GACA,UAAAP,MAAA,4CAEA8uH,EAAAvuH,MACO,CACP,IAAAkwH,EAAAvwB,EAAA1xG,IAAA,QACA,IAAAiiI,EAIA,OADA,EAAAz6G,EAAA7mB,MAAA,yBACAqhI,IAHA1B,EAAA2B,EAAAz9G,OAAA+7G,GAMA,IAAAD,EAEA,OADA,EAAA94G,EAAA7mB,MAAA,yBACAqhI,IAEA,GAAA5uH,KAAA8qC,UAAAv5B,IAAA27G,GACA,OAAAltH,KAAA8qC,UAAAl+C,IAAAsgI,GAGA,GADAvuH,EAAAyR,EAAAU,WAAAo8G,KACA,EAAA74G,EAAAxC,QAAAlT,GACA,OAAAiwH,IAEA,GAAAjwH,EAAA2wC,WACA,OAAA3wC,EAAA2wC,WAEA,IAIAw/E,EAmCAC,EAvCAC,GAAA,EAAA56G,EAAA/kB,2BACA4/H,EAAAjvH,KAAAkvH,gBAAAvwH,GACA8zD,EAAAw8D,EAAAx8D,WACA08D,GAAA,EAAA96G,EAAAnD,OAAAg8G,GAKA,GAHAiC,IACAL,EAAA5B,EAAAhiH,aAEA,EAAAmJ,EAAAxC,QAAA4gD,GAAA,CACAA,EAAA28D,cACA38D,EAAA28D,YAAA5iI,OAAAoT,OAAA,OAEA,IAAAwvH,EAAA38D,EAAA28D,YACAz7D,EAAAs7D,EAAAt7D,KACA,GAAAy7D,EAAAz7D,GAAA,CACA,IAAA07D,EAAAD,EAAAz7D,GAAAnhD,SACA,GAAA28G,GAAAE,GAAArvH,KAAA8qC,UAAAv5B,IAAA89G,GAEA,OADArvH,KAAA8qC,UAAAv4B,SAAA26G,EAAAmC,GACArvH,KAAA8qC,UAAAl+C,IAAAsgI,QAGAkC,EAAAz7D,IAA+Bm7D,OAAAhH,EAAAwH,KAAAC,aAE/BJ,IACAC,EAAAz7D,GAAAnhD,SAAA06G,GAEA4B,EAAAM,EAAAz7D,GAAAm7D,OAEAK,EACAnvH,KAAA8qC,UAAA14B,IAAA86G,EAAA8B,EAAAtlH,UAEAolH,IACAA,EAAA9uH,KAAAm+F,UAAAC,eAEAp+F,KAAA8qC,UAAA14B,IAAA,MAAA08G,EAAAE,EAAAtlH,WAEA,EAAA0K,EAAA5kB,QAAAs/H,EAAA,iCACAnwH,EAAA8uH,WAAA,KAAAztH,KAAA0qC,WAAA6qC,MAAA,KAAAu5C,EACAnwH,EAAA2wC,WAAA0/E,EAAAtlH,QAEA,IACAqlH,EAAA/uH,KAAAwvH,cAAAP,GACO,MAAAhwH,GACP8vH,EAAAplH,QAAAE,OAAA5K,GAoBA,OAlBA8vH,EAAAniH,KAAA,SAAA6iH,GACA,QAAAj+H,IAAAi+H,EAAAC,SAAA,CACA,IAAAC,EAAAv/G,EAAA8hB,MAAAuf,UACAk+E,EAAAF,EAAAC,WAAA,EAEAV,EAAAplH,QAAA,IAAA2jH,EAAA5uH,EAAA8uH,WAAAgC,EAAA9wH,MACO2M,MAAA,SAAAN,GACP46G,EAAA14G,QAAAE,KAAA,sBAAmDwrE,UAAAxkE,EAAAjjB,qBAAAwN,OACnD,IACA,IAAA8zD,EAAAw8D,EAAAx8D,WACAm9D,EAAAn9D,KAAA7lE,IAAA,aACA0+C,EAAAskF,KAAAhjI,IAAA,WACA8iI,GAAA,EAAA5H,EAAA+H,aAAAZ,EAAAjlH,KAAAshC,KAAAj/C,MACAsjI,EAAAv/G,EAAA8hB,MAAAuf,UACAk+E,EAAAD,IAAA,EACS,MAAAnwH,IACTyvH,EAAAplH,QAAA,IAAA2jH,EAAA5uH,EAAA8uH,WAAA,IAAA3F,EAAA0F,UAAAxiH,aAAA5M,MAAA4M,EAAA/K,QAAA+K,GAAArM,MAEAqwH,EAAAtlH,SAEAskH,UAAA,SAAA1wF,EAAAzyB,EAAAlC,GACA,IAAAmnH,EAAAxyF,EAAA78B,OAAA,EAIA,GAHAkI,IACAA,MAEAmnH,EAAA,GAAAxyF,EAAAlF,QAAA03F,KAAA17G,EAAA/iB,IAAAsM,cACA2/B,EAAAN,MAAA5oB,EAAA/iB,IAAAsM,gBAAAkN,GAAAlC,QACO,CACP,IAAAonH,EAAAzyF,EAAAjF,UAAAy3F,GACAC,EAAA,GAAA3uH,KAAAyJ,GACAxE,MAAApZ,UAAAmU,KAAAP,MAAAkvH,EAAA,GAAApnH,KAGAqnH,aAAA,SAAA1yF,EAAAzyB,EAAAlC,EAAAga,EAAA+oF,EAAApN,EAAA5oB,GACA,IACA59C,EADAm4F,EAAAtnH,IAAAlI,OAAA,GAEA,MAAA4T,EAAA1B,QAAAs9G,KAAAn4F,EAAA4zE,EAAA9+G,IAAAqjI,EAAA5jI,OAAA,CACA,IAAAsW,GAAA,EAAA0R,EAAArB,UAAA8kB,KAAAn1B,KAAAm1B,EACA6zC,EAAAhpE,EAAA/V,IAAA,eACA,GAAA++E,IAAA+9C,EAAA,CACA,IAAAphG,EAAA3F,EAAA7jB,KAAA6jB,EAAA7jB,KAAAqiB,OAAAxY,EAAA,QACA,OAAA3I,KAAAysH,iBAAA5hH,EAAAyd,EAAAg2E,EAAAxmE,EAAAn1B,EAAA26B,EAAAo4C,GACS,GAAA/J,IAAAg+C,EAAA,CACT,IAAAuG,EAAAvtH,EAAA/V,IAAA,WACA42B,EAAA7gB,EAAAG,SAAA,UAGA,OAFAg1B,EAAAmwF,EAAAkI,QAAAC,aAAAF,EAAA1sG,EAAAxjB,KAAAoQ,KAAAkuF,EAAAt+F,KAAAkN,QAAAlN,KAAA6iB,oBACAya,EAAAN,MAAAnyB,EAAAitB,EAAAL,SACA9tB,QAAAC,UAEA,OAAAD,QAAAE,OAAA,IAAAzL,MAAA,wBAAAutE,IAGA,OADAruC,EAAAN,MAAAnyB,EAAAlC,GACAgB,QAAAC,WAEA8uE,gBAAA,SAAAxM,GACA,IAAA45C,EAAA9lH,KAEAqM,EAAA6/D,EAAA7/D,OACAqpE,EAAAxJ,EAAAwJ,KACA4oB,EAAApyB,EAAAoyB,UACAhhE,EAAA4uC,EAAA5uC,aACA+yF,EAAAnkD,EAAAu+C,aACAA,OAAAj5H,IAAA6+H,EAAA,KAAAA,EAIA,GAFA/xB,KAAAjqF,EAAAnE,KAAAuB,MACAg5G,KAAA,IAAA6F,GACAhzF,EACA,UAAAl/B,MAAA,qDAEA,IAAA1S,EAAAsU,KACAoQ,EAAApQ,KAAAoQ,KACAue,EAAAniC,OAAAoT,OAAA,MACA2wH,EAAAjyB,EAAA1xG,IAAA,YAAAynB,EAAAnE,KAAAuB,MACAi6F,EAAApN,EAAA1xG,IAAA,YAAAynB,EAAAnE,KAAAuB,MACA06G,EAAA,IAAAqE,EAAA/F,GACAgG,EAAA,IAAAC,EAAArkH,EAAA+D,EAAA+7G,GACAwE,EAAA,IAAAtH,EACA,SAAAuH,EAAA1qC,GACA,QAAAn6F,EAAA,EAAA8V,EAAA4uH,EAAAI,iBAA2D9kI,EAAA8V,EAAQ9V,IACnEuxC,EAAAN,MAAA5oB,EAAA/iB,IAAAsH,YAGA,WAAAgR,QAAA,SAAAmnH,EAAAlnH,EAAAC,GACA,IAAA6jB,EAAA,SAAAhkB,GACAA,EAAAkD,KAAA,WACA,IACAkkH,EAAAlnH,EAAAC,GACa,MAAAtK,GACbsK,EAAAtK,KAEWsK,IAEX6rE,EAAApC,sBACAq9C,EAAA17G,QACA,IAAA87G,EAEAhlI,EACA8V,EACA8gB,EAHAovD,KAIA,QAAAg/C,EAAAJ,EAAA73G,SAAA,CAEA,GADAi5D,EAAAppE,KAAA,MACA8nH,EAAA3oF,KAAAiqC,GACA,MAEA,IAAAppE,EAAAopE,EAAAppE,KACAkC,EAAAknE,EAAAlnE,GACA,SAAAA,GACA,KAAAuJ,EAAA/iB,IAAA6K,aACA,IAAA7P,EAAAsc,EAAA,GAAAtc,KACA,GAAAA,QAAAmF,IAAAm9B,EAAAtiC,GAAA,CACAixC,EAAAN,MAAArO,EAAAtiC,GAAAwe,GAAA8jB,EAAAtiC,GAAAsc,MACAA,EAAA,KACA,SAiDA,YA/CA+kB,EAAA,IAAA/jB,QAAA,SAAAqnH,EAAAC,GACA,IAAA5kI,EACA,UAAA+nB,EAAAzkB,YAAA,wCAEA,IAAA66H,EAAA+F,EAAA3jI,IAAAP,GACA,IAAAm+H,EAGA,OAFAltF,EAAAN,MAAAnyB,EAAAlC,QACAqoH,IAGA,OAAA38G,EAAArB,UAAAw3G,GACA,UAAAp2G,EAAAzkB,YAAA,8BAEA,IAAAqa,EAAAwgH,EAAA7nH,KAAA/V,IAAA,WACA,OAAAynB,EAAA1B,QAAA3I,GACA,UAAAoK,EAAAzkB,YAAA,sCAEA,YAAAqa,EAAA3d,KAMA,OALA8/H,EAAAzzH,YACAhN,EAAA6+H,iBAAAjsB,EAAAksB,EAAA,KAAAltF,EAAAo4C,EAAAy2C,EAAAr8F,MAAApnB,SAAAkE,KAAA,WACAu/G,EAAAxzH,UACAq4H,KACmBC,GAEF,aAAAjnH,EAAA3d,KAAA,CASA,UAAA2d,EAAA3d,KAGjB,UAAA+nB,EAAAzkB,YAAA,6BAAAqa,EAAA3d,OAFA,EAAA+nB,EAAArlB,MAAA,8BAIAiiI,SAbAtlI,EAAAs/H,wBACA1sB,YACAyqB,MAAAyB,EACAltF,eACAvM,SAAA1kC,EACAsiC,eACmB/hB,KAAAokH,EAAAC,KAQJ3lH,MAAA,SAAAN,GACf,GAAAtf,EAAAitD,QAAA++B,aAGA,OAFAhsF,EAAAwhB,QAAAE,KAAA,sBAA2DwrE,UAAAxkE,EAAAjjB,qBAAAmN,eAC3D,EAAA8V,EAAA7mB,MAAA,wCAAAyd,EAAA,MAGA,MAAAA,KAGA,KAAAoJ,EAAA/iB,IAAAgJ,QACA,IAAA62H,EAAAvoH,EAAA,GAKA,YAJA+kB,EAAAhiC,EAAAshI,cAAA1uB,EAAA31F,EAAA,KAAA20B,EAAAo4C,EAAAy2C,EAAAr8F,OAAAljB,KAAA,SAAA6gH,GACAnwF,EAAAL,cAAAwwF,GACAnwF,EAAAN,MAAA5oB,EAAA/iB,IAAAgJ,SAAAozH,EAAAyD,OAGA,KAAA98G,EAAA/iB,IAAA4K,eACA,IAAA80B,EAAApoB,EAAA,GAAAooB,SACA,GAAAA,EAAA,CACA,IAAAI,EAAAxC,EAAAoC,GACA,QAAAv/B,IAAA2/B,EAAA,CACAmM,EAAAN,MAAA7L,EAAAtmB,GAAAsmB,EAAAxoB,MACAA,EAAA,KACA,UAWA,YARA+kB,EAAAhiC,EAAAs/H,wBACA1sB,YACAyqB,MAAApgH,EAAA,GACAuiH,UAAA,EACA5tF,eACAvM,WACApC,gBAGA,KAAAva,EAAA/iB,IAAAuJ,SACA+N,EAAA,GAAAjd,EAAAgiI,WAAA/kH,EAAA,GAAAwjH,EAAAr8F,OACA,MACA,KAAA1b,EAAA/iB,IAAAwJ,eACA,IAAA2G,EAAAmH,EAAA,GACAwoH,KACAC,EAAA5vH,EAAAf,OACAqvB,EAAAq8F,EAAAr8F,MACA,IAAA/jC,EAAA,EAAyBA,EAAAqlI,IAAerlI,EAAA,CACxC,IAAAslI,EAAA7vH,EAAAzV,IACA,EAAAqoB,EAAA1lB,UAAA2iI,GACAhrH,MAAApZ,UAAAmU,KAAAP,MAAAswH,EAAAzlI,EAAAgiI,WAAA2D,EAAAvhG,KACiB,EAAA1b,EAAAzlB,OAAA0iI,IACjBF,EAAA/vH,KAAAiwH,GAGA1oH,EAAA,GAAAwoH,EACAtmH,EAAAuJ,EAAA/iB,IAAAuJ,SACA,MACA,KAAAwZ,EAAA/iB,IAAAyJ,iBACAwiC,EAAAN,MAAA5oB,EAAA/iB,IAAAsJ,UACAgO,EAAA,GAAAjd,EAAAgiI,WAAA/kH,EAAA,GAAAwjH,EAAAr8F,OACAjlB,EAAAuJ,EAAA/iB,IAAAuJ,SACA,MACA,KAAAwZ,EAAA/iB,IAAA0J,2BACAuiC,EAAAN,MAAA5oB,EAAA/iB,IAAAsJ,UACA2iC,EAAAN,MAAA5oB,EAAA/iB,IAAA6I,gBAAAyO,EAAAqN,UACAsnB,EAAAN,MAAA5oB,EAAA/iB,IAAA4I,gBAAA0O,EAAAqN,UACArN,EAAA,GAAAjd,EAAAgiI,WAAA/kH,EAAA,GAAAwjH,EAAAr8F,OACAjlB,EAAAuJ,EAAA/iB,IAAAuJ,SACA,MACA,KAAAwZ,EAAA/iB,IAAAiJ,qBACA6xH,EAAAr8F,MAAAg+F,kBAAAnlH,EAAA,GACA,MACA,KAAAyL,EAAA/iB,IAAA8J,kBACAgxH,EAAAr8F,MAAAi+F,eAAAtjF,EAAAxqB,WAAAyC,MAAA/Z,EAAA,GAAAyH,EAAAkuF,EAAA5yG,EAAAm3B,oBACA,SACA,KAAAzO,EAAA/iB,IAAA6J,oBACAixH,EAAAr8F,MAAAwhG,iBAAA7mF,EAAAxqB,WAAAyC,MAAA/Z,EAAA,GAAAyH,EAAAkuF,EAAA5yG,EAAAm3B,oBACA,SACA,KAAAzO,EAAA/iB,IAAAiK,aACAqnB,EAAAwpG,EAAAr8F,MAAAi+F,eACAplH,EAAAga,EAAAxB,OAAAxY,EAAA,GACAkC,EAAAuJ,EAAA/iB,IAAAsK,gBACA,MACA,KAAAyY,EAAA/iB,IAAA+J,eACAunB,EAAAwpG,EAAAr8F,MAAAwhG,iBACA3oH,EAAAga,EAAAxB,OAAAxY,EAAA,GACAkC,EAAAuJ,EAAA/iB,IAAAqK,kBACA,MACA,KAAA0Y,EAAA/iB,IAAAoK,YACA0wH,EAAAr8F,MAAAi+F,eAAAtjF,EAAAxqB,WAAAmD,WAAAC,KACA1a,EAAA8hC,EAAAxqB,WAAAmD,WAAAC,KAAAlC,OAAAxY,EAAA,GACAkC,EAAAuJ,EAAA/iB,IAAAsK,gBACA,MACA,KAAAyY,EAAA/iB,IAAAmK,cACA2wH,EAAAr8F,MAAAwhG,iBAAA7mF,EAAAxqB,WAAAmD,WAAAC,KACA1a,EAAA8hC,EAAAxqB,WAAAmD,WAAAC,KAAAlC,OAAAxY,EAAA,GACAkC,EAAAuJ,EAAA/iB,IAAAqK,kBACA,MACA,KAAA0Y,EAAA/iB,IAAAwK,iBACAswH,EAAAr8F,MAAAi+F,eAAAtjF,EAAAxqB,WAAAmD,WAAAE,KACA3a,EAAA8hC,EAAAxqB,WAAAmD,WAAAE,KAAAnC,OAAAxY,EAAA,GACAkC,EAAAuJ,EAAA/iB,IAAAsK,gBACA,MACA,KAAAyY,EAAA/iB,IAAAuK,mBACAuwH,EAAAr8F,MAAAwhG,iBAAA7mF,EAAAxqB,WAAAmD,WAAAE,KACA3a,EAAA8hC,EAAAxqB,WAAAmD,WAAAE,KAAAnC,OAAAxY,EAAA,GACAkC,EAAAuJ,EAAA/iB,IAAAqK,kBACA,MACA,KAAA0Y,EAAA/iB,IAAAsK,gBACAwwH,EAAAr8F,MAAAi+F,eAAAtjF,EAAAxqB,WAAAmD,WAAA/B,IACA1Y,EAAA8hC,EAAAxqB,WAAAmD,WAAA/B,IAAAF,OAAAxY,EAAA,GACA,MACA,KAAAyL,EAAA/iB,IAAAqK,kBACAywH,EAAAr8F,MAAAwhG,iBAAA7mF,EAAAxqB,WAAAmD,WAAA/B,IACA1Y,EAAA8hC,EAAAxqB,WAAAmD,WAAA/B,IAAAF,OAAAxY,EAAA,GACA,MACA,KAAAyL,EAAA/iB,IAAAkK,cAEA,GADAonB,EAAAwpG,EAAAr8F,MAAAi+F,eACA,YAAAprG,EAAAt2B,KAEA,YADAqhC,EAAAhiC,EAAAskI,aAAA1yF,EAAAlpB,EAAA/iB,IAAAkK,cAAAoN,EAAAga,EAAA+oF,EAAApN,EAAA5oB,IAGA/sE,EAAAga,EAAAxB,OAAAxY,EAAA,GACAkC,EAAAuJ,EAAA/iB,IAAAsK,gBACA,MACA,KAAAyY,EAAA/iB,IAAAgK,gBAEA,GADAsnB,EAAAwpG,EAAAr8F,MAAAwhG,iBACA,YAAA3uG,EAAAt2B,KAEA,YADAqhC,EAAAhiC,EAAAskI,aAAA1yF,EAAAlpB,EAAA/iB,IAAAgK,gBAAAsN,EAAAga,EAAA+oF,EAAApN,EAAA5oB,IAGA/sE,EAAAga,EAAAxB,OAAAxY,EAAA,GACAkC,EAAAuJ,EAAA/iB,IAAAqK,kBACA,MACA,KAAA0Y,EAAA/iB,IAAAyK,YACA,IAAAy1H,EAAAjzB,EAAA1xG,IAAA,WACA,IAAA2kI,EACA,UAAAn9G,EAAAzkB,YAAA,6BAEA,IAAAugI,EAAAqB,EAAA3kI,IAAA+b,EAAA,GAAAtc,MACA,IAAA6jI,EACA,UAAA97G,EAAAzkB,YAAA,2BAEA,IAAAmM,EAAAmsH,EAAAkI,QAAAC,aAAAF,EAAA,KAAA9/G,EAAAkuF,EAAA5yG,EAAAwhB,QAAAxhB,EAAAm3B,oBACA2uG,EAAA11H,EAAA27B,QACA9uB,GAAA6oH,GACA3mH,EAAAuJ,EAAA/iB,IAAAyK,YACA,MACA,KAAAsY,EAAA/iB,IAAAoH,UACA,IAAAg5H,EAAA9oH,EAAA,GACA+oH,EAAApzB,EAAA1xG,IAAA,aACA,OAAAynB,EAAAxC,QAAA6/G,OAAAngH,IAAAkgH,EAAAplI,MACA,MAEA,IAAAmiI,EAAAkD,EAAA9kI,IAAA6kI,EAAAplI,MAEA,YADAqhC,EAAAhiC,EAAA+M,UAAA6lG,EAAAkwB,EAAAlxF,EAAAo4C,EAAAy2C,IAEA,KAAA/3G,EAAA/iB,IAAAwH,OACA,KAAAub,EAAA/iB,IAAAyH,OACA,KAAAsb,EAAA/iB,IAAA0H,QACA,KAAAqb,EAAA/iB,IAAA2H,SACA,KAAAob,EAAA/iB,IAAA4H,SACA,KAAAmb,EAAA/iB,IAAA6H,UACAxN,EAAAsiI,UAAA1wF,EAAAzyB,EAAAlC,GACA,SACA,KAAAyL,EAAA/iB,IAAA8H,UACAzN,EAAAsiI,UAAA1wF,EAAAzyB,EAAAlC,GACA,SACA,KAAAyL,EAAA/iB,IAAA8K,UACA,KAAAiY,EAAA/iB,IAAA+K,eACA,KAAAgY,EAAA/iB,IAAAgL,mBACA,KAAA+X,EAAA/iB,IAAAiL,wBACA,KAAA8X,EAAA/iB,IAAAkL,iBACA,KAAA6X,EAAA/iB,IAAAmL,YACA,KAAA4X,EAAA/iB,IAAAoL,UACA,SACA,QACA,UAAAkM,EAAA,CACA,IAAA5c,EAAA,EAAA8V,EAAA8G,EAAAlI,OAA6C1U,EAAA8V,EAAQ9V,IACrD,GAAA4c,EAAA5c,aAAAsoB,EAAAnE,KACA,MAGA,GAAAnkB,EAAA8V,EAAA,EACA,EAAAuS,EAAA7mB,MAAA,wCAAAsd,GACA,WAIAyyB,EAAAN,MAAAnyB,EAAAlC,GAEAooH,EACArjG,EAAA+7F,IAGAmH,IACAhnH,OACO0B,MAAA,SAAAN,GACP,GAAA86G,EAAAntE,QAAA++B,aAIA,OAHAouC,EAAA54G,QAAAE,KAAA,sBAAqDwrE,UAAAxkE,EAAAjjB,qBAAAmN,WACrD,EAAA8V,EAAA7mB,MAAA,kDAAAmoF,EAAArpF,WACAukI,IAGA,MAAA5lH,KAGA00F,eAAA,SAAAvzB,GACA,IAAAk6C,EAAArmH,KAEAqM,EAAA8/D,EAAA9/D,OACAqpE,EAAAvJ,EAAAuJ,KACA4oB,EAAAnyB,EAAAmyB,UACAqzB,EAAAxlD,EAAAggD,aACAA,OAAA36H,IAAAmgI,EAAA,KAAAA,EACAC,EAAAzlD,EAAA8M,oBACAA,OAAAznF,IAAAogI,KACAC,EAAA1lD,EAAA+M,iBACAA,OAAA1nF,IAAAqgI,KACA94C,EAAA5M,EAAA4M,KACA+4C,EAAA3lD,EAAA4lD,WACAA,OAAAvgI,IAAAsgI,EAAAtlI,OAAAoT,OAAA,MAAAkyH,EAEAxzB,KAAAjqF,EAAAnE,KAAAuB,MACA06G,KAAA,IAAAqE,EAAA,IAAAwB,GACA,IA8BAC,EA9BAC,EAAA,MACAC,GACAxmF,SACAymF,OAAA5lI,OAAAoT,OAAA,OAEAyyH,GACA13G,aAAA,EACAra,OACA8H,MAAA,EACAC,OAAA,EACAiqH,UAAA,EACAC,iBAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,aAAA/rC,IACAgsC,kBAAAhsC,IACAisC,mBAAA,EACAC,qBAAA,EACAl6H,UAAA,KACAu0H,SAAA,MAEA4F,EAAA,GACAC,EAAA,IACAC,EAAA,EACAvnI,EAAAsU,KACAoQ,EAAApQ,KAAAoQ,KACAmgH,EAAA,KACA2C,EAAA1mI,OAAAoT,OAAA,MACA6wH,EAAA,IAAAC,EAAArkH,EAAA+D,EAAA+7G,GAEA,SAAAgH,IACA,GAAAd,EAAA13G,YACA,OAAA03G,EAEA,IAAA1zH,EAAAszH,EAAAtzH,KACAA,EAAA8uH,cAAAsE,IACAA,EAAApzH,EAAA8uH,aAAA,EACA0E,EAAAC,OAAAzzH,EAAA8uH,aACA2F,WAAAz0H,EAAA00H,aACAvzD,OAAAnhE,EAAAmhE,OACAC,QAAAphE,EAAAohE,QACAuyD,SAAA3zH,EAAA2zH,WAGAD,EAAAlF,SAAAxuH,EAAA8uH,WACA,IAAA6F,GAAArB,EAAAf,SAAAe,EAAAsB,WAAA,IAAAtB,EAAAf,SAAA,EAAAe,EAAAuB,UACA,GAAA70H,EAAA0uH,aAAA4E,EAAAtyD,aAAAvrD,EAAA7iB,sBAAA,IAAA0gI,EAAAf,SAAA,CACA,IAAAuC,EAAA90H,EAAAqiH,KAAA,GAAAriH,EAAAqiH,KAAA,GACAyS,EAAA,IACAA,GAAAxB,EAAAtyD,WAAA,GACA2zD,EAAA,IAAAG,GAGA,IAAAC,EAAAt/G,EAAAvkB,KAAA+I,UAAAq5H,EAAA0B,IAAAv/G,EAAAvkB,KAAA+I,UAAAq5H,EAAA2B,WAAAN,IACAjB,EAAAz5H,UAAA86H,EACA/0H,EAAA2zH,UAKAD,EAAAjqH,MAAApH,KAAA8D,KAAA4uH,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACArB,EAAAhqH,OAAA,EACAgqH,EAAAC,UAAA,IANAD,EAAAjqH,MAAA,EACAiqH,EAAAhqH,OAAArH,KAAA8D,KAAA4uH,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACArB,EAAAC,UAAA,GAMA,IAAA3tH,EAAAstH,EAAA4B,eAAA,GACArwH,EAAAyuH,EAAA4B,eAAA,GACAC,EAAA9yH,KAAA8D,KAAAH,IAAAnB,KACAmB,EAAAstH,EAAA0B,IAAA,GACAnwH,EAAAyuH,EAAA0B,IAAA,GACA,IAAAI,EAAA/yH,KAAA8D,KAAAH,IAAAnB,KACA6uH,EAAAI,iBAAAsB,EAAAD,EACAzB,EAAAE,iBAAA,EACAF,EAAAG,kBAAA,EACA,IAAAE,EAAA/zH,EAAA+zH,WAAA,IAAAT,EAAAf,SAeA,OAdAwB,GACAL,EAAAK,aACAL,EAAAM,aAAAD,EAAAK,EACAV,EAAAO,kBAAAF,EAAAM,EACAX,EAAAQ,kBAAAH,EAAAO,EACAZ,EAAAS,qBAAAn0H,EAAAq1H,cAEA3B,EAAAK,WAAA,EACAL,EAAAM,aAAA/rC,IACAyrC,EAAAO,kBAAAhsC,IACAyrC,EAAAQ,kBAAA,EACAR,EAAAS,qBAAA,GAEAT,EAAA13G,aAAA,EACA03G,EAEA,SAAA4B,EAAA3zH,GACA,IAEAP,EAFAhU,EAAA,EACA8V,EAAAvB,EAAAG,OAEA,MAAA1U,EAAA8V,IAAA9B,EAAAO,EAAAiB,WAAAxV,KAAA,IAAAgU,GAAA,IACAhU,IAEA,OAAAA,EAAA8V,EAAAvB,EAAAC,QAAA2xH,EAAA,KAAA5xH,EAEA,SAAA4zH,EAAAC,GACA,IAAA7zH,EAAA6zH,EAAA7zH,IAAAe,KAAA,IACA+yH,GAAA,EAAAlM,EAAAmM,MAAA/zH,GAAA,EAAA6zH,EAAA7B,UACA,OACAhyH,IAAA24E,EAAAg7C,EAAAG,EAAA9zH,KAAA8zH,EAAA9zH,IACAg0H,IAAAF,EAAAE,IACAlsH,MAAA+rH,EAAA/rH,MACAC,OAAA8rH,EAAA9rH,OACAzP,UAAAu7H,EAAAv7H,UACAu0H,SAAAgH,EAAAhH,UAGA,SAAAH,EAAAG,EAAAD,GACA,OAAAxhI,EAAA0hI,SAAAD,EAAAD,EAAA5uB,GAAA1xF,KAAA,SAAA0iC,GACA2iF,EAAAtzH,KAAA2wC,EAAA3wC,KACAszH,EAAAtyD,WAAArwB,EAAA3wC,KAAAghE,YAAAvrD,EAAA7iB,uBAGA,SAAAgjI,EAAAtqD,GAMA,IALA,IAAAtrE,EAAAszH,EAAAtzH,KACAw1H,EAAAhB,IACA/qH,EAAA,EACAC,EAAA,EACAslH,EAAAhvH,EAAAivH,cAAA3jD,GACAl+E,EAAA,EAAuBA,EAAA4hI,EAAAltH,OAAmB1U,IAAA,CAC1C,IAAAuiI,EAAAX,EAAA5hI,GACAyoI,EAAA,KAEAA,EADA71H,EAAA2zH,UAAAhE,EAAAmG,QACAnG,EAAAmG,QAAA,GAEAnG,EAAAlmH,MAEA,IAAAssH,EAAApG,EAAA9kD,QACAmrD,GAAA,EAAA5M,EAAAh+C,8BACAv4E,IAAAmjI,EAAAD,KACAA,EAAAC,EAAAD,IAEAA,GAAA,EAAA3M,EAAA/9C,cAAA0qD,GACA,IAAAE,EAAA3C,EAAA2C,YACA,GAAAtG,EAAA7/H,QAAA,CACA,IAAAomI,EAAA5C,EAAA4C,YACAD,GAAAC,EACAA,EAAA,GACAC,EAAAD,EAAAV,EAAA7zH,KAGA,IAAAy0H,EAAA,EACAC,EAAA,EACA,GAAAr2H,EAAA2zH,SAIW,CACX,IAAAlyG,EAAAo0G,EAAAvC,EAAAtyD,WAAA,GACAq1D,EAAA50G,EAAA6xG,EAAAf,SAAA0D,EACAvsH,GAAA2sH,MAPA,CACA,IAAAC,EAAAT,EAAAvC,EAAAtyD,WAAA,GACAo1D,GAAAE,EAAAhD,EAAAf,SAAA0D,GAAA3C,EAAAsB,WACAnrH,GAAA2sH,EAMA9C,EAAAiD,oBAAAH,EAAAC,GACAb,EAAA7zH,IAAAc,KAAAszH,GASA,OAPA/1H,EAAA2zH,UAIA6B,EAAA3B,kBAAAnqH,EACA8rH,EAAA9rH,QAAArH,KAAAwH,IAAAH,KAJA8rH,EAAA5B,iBAAAnqH,EACA+rH,EAAA/rH,UAKA+rH,EAEA,SAAAW,EAAA1sH,EAAAtH,GACA,KAAAsH,EAAAiqH,EAAAM,cAGA,GAAAvqH,EAAAiqH,EAAAO,kBACA9xH,EAAAM,KAAA,SADA,CAIA,IAAA+zH,EAAAn0H,KAAA4pB,MAAAxiB,EAAAiqH,EAAAK,YACA,MAAAyC,KAAA,EACAr0H,EAAAM,KAAA,MAGA,SAAAg0H,IACA/C,EAAA13G,cAGA03G,EAAAjqH,OAAAiqH,EAAAI,iBACAJ,EAAAhqH,QAAAgqH,EAAAI,iBACAN,EAAAxmF,MAAAvqC,KAAA8yH,EAAA7B,IACAA,EAAA13G,aAAA,EACA03G,EAAA/xH,IAAAG,OAAA,GAEA,SAAA40H,IACA,IAAA50H,EAAA0xH,EAAAxmF,MAAAlrC,OACAA,EAAA,IACAs4E,EAAAtqE,QAAA0jH,EAAA1xH,GACA0xH,EAAAxmF,SACAwmF,EAAAC,OAAA5lI,OAAAoT,OAAA,OAGA,IAAA+wH,EAAA,IAAAtH,EACA,WAAA1/G,QAAA,SAAAmnH,EAAAlnH,EAAAC,GACA,IAAA6jB,EAAA,SAAAhkB,GACA2rH,IACA1rH,QAAA2F,KAAA5F,EAAAqvE,EAAAjqE,QAAAlC,KAAA,WACA,IACAkkH,EAAAlnH,EAAAC,GACa,MAAAtK,GACbsK,EAAAtK,KAEWsK,IAEX6rE,EAAApC,sBACAq9C,EAAA17G,QACA,IAAA87G,EACAh/C,KACAppE,KACA,QAAAooH,EAAAJ,EAAA73G,SAAA,CAGA,GAFAnQ,EAAAlI,OAAA,EACAsxE,EAAAppE,QACA8nH,EAAA3oF,KAAAiqC,GACA,MAEAkgD,EAAA9F,EAAAr8F,MACA,IAEAwlG,EAAAxnD,EAFAjjE,EAAAknE,EAAAlnE,GAGA,OAFAlC,EAAAopE,EAAAppE,KAEA,EAAAkC,GACA,KAAAuJ,EAAA/iB,IAAAgJ,QACA,IAAAk7H,EAAA5sH,EAAA,GAAAtc,KACAmpI,EAAA7sH,EAAA,GACA,GAAAspH,EAAAtzH,MAAA42H,IAAAtD,EAAA9E,UAAAqI,IAAAvD,EAAAf,SACA,MAMA,OAJAkE,IACAnD,EAAA9E,SAAAoI,EACAtD,EAAAf,SAAAsE,OACA9nG,EAAAs/F,EAAAuI,EAAA,OAEA,KAAAnhH,EAAA/iB,IAAAkJ,YACA66H,IACAnD,EAAAuB,SAAA7qH,EAAA,GACA,MACA,KAAAyL,EAAA/iB,IAAA8I,UACAi7H,IACAnD,EAAAsB,WAAA5qH,EAAA,OACA,MACA,KAAAyL,EAAA/iB,IAAA+I,WACAg7H,IACAnD,EAAAwD,QAAA9sH,EAAA,GACA,MACA,KAAAyL,EAAA/iB,IAAAmJ,SACA,IAAAk7H,IAAAzD,EAAAtzH,MAAA,KAAAszH,EAAAtzH,KAAA2zH,SAAA3pH,EAAA,GAAAA,EAAA,IAEA,GADA2sH,EAAA3sH,EAAA,GAAAA,EAAA,GACAuwE,GAAAw8C,GAAArD,EAAA13G,aAAA26G,EAAA,GAAAA,GAAAjD,EAAAQ,kBAAA,CACAZ,EAAA0D,wBAAAhtH,EAAA,GAAAA,EAAA,IACA0pH,EAAAjqH,OAAAO,EAAA,GAAA0pH,EAAAE,iBACAF,EAAAhqH,QAAAM,EAAA,GAAA0pH,EAAAG,kBACA1kD,EAAAnlE,EAAA,GAAA0pH,EAAAE,kBAAA5pH,EAAA,GAAA0pH,EAAAG,mBACAsC,EAAAhnD,EAAAukD,EAAA/xH,KACA,MAEA80H,IACAnD,EAAA0D,wBAAAhtH,EAAA,GAAAA,EAAA,IACAspH,EAAA2B,WAAA3B,EAAA4B,eAAA3vH,QACA,MACA,KAAAkQ,EAAA/iB,IAAAoJ,mBACA26H,IACAnD,EAAAwD,SAAA9sH,EAAA,GACAspH,EAAA0D,wBAAAhtH,EAAA,GAAAA,EAAA,IACAspH,EAAA2B,WAAA3B,EAAA4B,eAAA3vH,QACA,MACA,KAAAkQ,EAAA/iB,IAAAsJ,SACAy6H,IACAnD,EAAA2D,iBACA,MACA,KAAAxhH,EAAA/iB,IAAAqJ,cAEA,GADA46H,EAAArD,EAAA4D,0BAAAltH,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAuwE,GAAA,OAAAo8C,GAAAjD,EAAA13G,aAAA26G,EAAAjoI,MAAA,GAAAioI,EAAAjoI,OAAAglI,EAAAQ,kBAAA,CACAZ,EAAA0D,wBAAAL,EAAAltH,MAAAktH,EAAAjtH,QACAgqH,EAAAjqH,OAAAktH,EAAAltH,MAAAiqH,EAAAE,iBACAF,EAAAhqH,QAAAitH,EAAAjtH,OAAAgqH,EAAAG,kBACA1kD,EAAAwnD,EAAAltH,MAAAiqH,EAAAE,kBAAA+C,EAAAjtH,OAAAgqH,EAAAG,mBACAsC,EAAAhnD,EAAAukD,EAAA/xH,KACA,MAEA80H,IACAnD,EAAAv3H,cAAAiO,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAspH,EAAA6D,kBAAAntH,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,MACA,KAAAyL,EAAA/iB,IAAA4I,eACAg4H,EAAA2C,YAAAjsH,EAAA,GACA,MACA,KAAAyL,EAAA/iB,IAAA6I,eACA+3H,EAAA4C,YAAAlsH,EAAA,GACA,MACA,KAAAyL,EAAA/iB,IAAA0I,UACAq7H,IACAnD,EAAA2B,WAAAx/G,EAAA9iB,gBAAA4S,QACA+tH,EAAA4B,eAAAz/G,EAAA9iB,gBAAA4S,QACA,MACA,KAAAkQ,EAAA/iB,IAAAwJ,eAGA,IAFA,IACAuH,EADAupC,EAAAhjC,EAAA,GAEAqR,EAAA,EAAAy0B,EAAA9C,EAAAlrC,OAAgDuZ,EAAAy0B,EAAQz0B,IACxD,qBAAA2xB,EAAA3xB,GACAu6G,EAAA5oF,EAAA3xB,SACiB,MAAA5F,EAAAzlB,OAAAg9C,EAAA3xB,IAAA,CACjBm5G,IACAmC,EAAA3pF,EAAA3xB,GAAAi4G,EAAAf,SAAA,IACA,IAAA6E,GAAA,EACA9D,EAAAtzH,KAAA2zH,UACAlwH,EAAAkzH,EACArD,EAAAiD,oBAAA,EAAA9yH,GACA2zH,EAAA1D,EAAAS,qBAAAwC,EAAAjD,EAAAQ,kBACAkD,IACA1D,EAAAhqH,QAAAjG,KAGAkzH,KACAlzH,EAAAkzH,EAAArD,EAAAsB,WACAtB,EAAAiD,oBAAA9yH,EAAA,GACA2zH,EAAA1D,EAAAS,qBAAAwC,EAAAjD,EAAAQ,kBACAkD,IACA1D,EAAAjqH,OAAAhG,IAGA2zH,EACAX,IACmBE,EAAA,GACnBR,EAAAQ,EAAAjD,EAAA/xH,KAIA,MACA,KAAA8T,EAAA/iB,IAAAuJ,SACA25H,EAAA5rH,EAAA,IACA,MACA,KAAAyL,EAAA/iB,IAAAyJ,iBACAs6H,IACAnD,EAAA2D,iBACArB,EAAA5rH,EAAA,IACA,MACA,KAAAyL,EAAA/iB,IAAA0J,2BACAq6H,IACAnD,EAAA4C,YAAAlsH,EAAA,GACAspH,EAAA2C,YAAAjsH,EAAA,GACAspH,EAAA2D,iBACArB,EAAA5rH,EAAA,IACA,MACA,KAAAyL,EAAA/iB,IAAA6K,aACAk5H,IACA7E,IACAA,EAAAjyB,EAAA1xG,IAAA,YAAAynB,EAAAnE,KAAAuB,OAEA,IAAAplB,EAAAsc,EAAA,GAAAtc,KACA,GAAAA,QAAAmF,IAAA0hI,EAAA7mI,GACA,MAqEA,YAnEAqhC,EAAA,IAAA/jB,QAAA,SAAAqnH,EAAAC,GACA,IAAA5kI,EACA,UAAA+nB,EAAAzkB,YAAA,wCAEA,IAAA66H,EAAA+F,EAAA3jI,IAAAP,GACA,GAAAm+H,EAAA,CAIA,OAAAn2G,EAAArB,UAAAw3G,GACA,UAAAp2G,EAAAzkB,YAAA,8BAEA,IAAAqa,EAAAwgH,EAAA7nH,KAAA/V,IAAA,WACA,OAAAynB,EAAA1B,QAAA3I,GACA,UAAAoK,EAAAzkB,YAAA,sCAEA,YAAAqa,EAAA3d,KAGA,OAFA6mI,EAAA7mI,IAAA,OACA2kI,IAGA,IAAAgF,EAAA7J,EAAAr8F,MAAApnB,QACAutH,EAAA,IAAAzF,EAAAwF,GACAxyG,EAAAgnG,EAAA7nH,KAAAG,SAAA,UACAuD,MAAA4K,QAAAuS,IAAA,IAAAA,EAAA/iB,QACAw1H,EAAAr9H,UAAA4qB,GAEA6xG,IACA,IAAAa,GACAC,gBAAA,EACA1nH,QAAA,SAAAvN,EAAAwN,GACA1O,KAAAm2H,gBAAA,EACAp9C,EAAAtqE,QAAAvN,EAAAwN,IAGAZ,kBACA,OAAAirE,EAAAjrE,aAEAgB,YACA,OAAAiqE,EAAAjqE,QAGApjB,EAAAg0G,gBACArzF,OAAAm+G,EACA90C,OACA4oB,UAAAksB,EAAA7nH,KAAA/V,IAAA,cAAA0xG,EACA6tB,aAAA8J,EACAh9C,sBACAC,mBACAH,KAAAm9C,EACAnE,eACiBnlH,KAAA,WACjBspH,EAAAC,iBACAjD,EAAA7mI,IAAA,GAEA2kI,KACiBC,QAlDjBD,MAmDe1lH,MAAA,SAAAN,GACf,KAAAA,aAAAoJ,EAAAzjB,gBAAA,CAGA,IAAAjF,EAAAitD,QAAA++B,aAIA,MAAA1sE,GAHA,EAAAoJ,EAAA7mB,MAAA,uCAAAyd,EAAA,UAMA,KAAAoJ,EAAA/iB,IAAAoH,UACA28H,IACA,IAAA3D,EAAA9oH,EAAA,GACA+oH,EAAApzB,EAAA1xG,IAAA,aACA,OAAAynB,EAAAxC,QAAA6/G,MAAA,EAAAr9G,EAAA1B,QAAA8+G,GACA,MAEA,IAAAjD,EAAAkD,EAAA9kI,IAAA6kI,EAAAplI,MACA,OAAAgoB,EAAAxC,QAAA28G,GACA,MAEA,IAAA4H,EAAA5H,EAAA5hI,IAAA,QACA,GAAAwpI,EAIA,OAHAnE,EAAA9E,SAAA,KACA8E,EAAAf,SAAAkF,EAAA,QACA1oG,EAAAs/F,EAAA,KAAAoJ,EAAA,KAGA,MAEA,GAAAjE,EAAAxmF,MAAAlrC,QAAAs4E,EAAAjrE,YAAA,CACAijH,GAAA,EACA,OAGAA,EACArjG,EAAA+7F,IAGA2L,IACAC,IACAzrH,OACO0B,MAAA,SAAAN,GACP,KAAAA,aAAAoJ,EAAAzjB,gBAAA,CAGA,GAAA01H,EAAA1tE,QAAA++B,aAIA,OAHA,EAAAtjE,EAAA7mB,MAAA,iDAAAmoF,EAAArpF,MACA+oI,SACAC,IAGA,MAAArqH,MAIAqrH,sBAAA,SAAA1zH,EAAA2zH,EAAAj4D,GACA,IAAAmoD,EAAAxmH,KAEAoQ,EAAApQ,KAAAoQ,KACAmmH,EAAA5zH,EAAA/V,IAAA,cAAA0pI,EAAA1pI,IAAA,aACA4pI,EAAAD,EAAAv2H,KAAAy2H,cAAAF,GAAA5sH,QAAAC,aAAApY,GACA,GAAA6sE,EAAAq4D,UAAA,CACA,IAAAC,EAAAh0H,EAAA/V,IAAA,kBACA,EAAAynB,EAAAxC,QAAA8kH,KACAt4D,EAAAs4D,eACAC,SAAAD,EAAA/pI,IAAA,YACAiqI,SAAAF,EAAA/pI,IAAA,YACAkqI,WAAAH,EAAA/pI,IAAA,gBAGA,IAAAmqI,EAAAp0H,EAAA/V,IAAA,gBACA,EAAAynB,EAAArB,UAAA+jH,KACA14D,EAAA04D,YAAA/2H,KAAAg3H,gBAAAD,IAGA,IAEAn+E,EAFAq+E,KACAC,EAAA,KAEA,GAAAv0H,EAAA4O,IAAA,aAEA,GADAqnC,EAAAj2C,EAAA/V,IAAA,aACA,EAAAynB,EAAAxC,QAAA+mC,IAGA,GAFAs+E,EAAAt+E,EAAAhsD,IAAA,gBACAsqI,GAAA,EAAA7iH,EAAA1B,QAAAukH,KAAA7qI,KAAA,KACAusD,EAAArnC,IAAA,eAGA,IAFA,IAAA4lH,EAAAv+E,EAAAhsD,IAAA,eACA6gC,EAAA,EACAzT,EAAA,EAAAy0B,EAAA0oF,EAAA12H,OAAqDuZ,EAAAy0B,EAAQz0B,IAAA,CAC7D,IAAAjY,EAAAqO,EAAAU,WAAAqmH,EAAAn9G,IACA,MAAA5F,EAAAzlB,OAAAoT,GACA0rB,EAAA1rB,MACe,QAAAsS,EAAA1B,QAAA5Q,GAGf,UAAAqS,EAAAzkB,YAAA,yCAAAoS,GAFAk1H,EAAAxpG,KAAA1rB,EAAA1V,WAMS,QAAAgoB,EAAA1B,QAAAimC,GAGT,UAAAxkC,EAAAzkB,YAAA,qCAFAunI,EAAAt+E,EAAAvsD,KAIA,qBAAA6qI,GAAA,sBAAAA,GAAA,oBAAAA,IACAA,EAAA,MAGA,GAAAA,EACA74D,EAAA+4D,iBAAA,EAAA35D,EAAAvxC,aAAAgrG,GAAAhzH,YACO,CACP,IAAAmzH,KAAAh5D,EAAAhyB,MAAAy7E,EAAAwP,UAAAC,UACAC,KAAAn5D,EAAAhyB,MAAAy7E,EAAAwP,UAAAG,aACA7+E,EAAA6kB,EAAA3xC,iBACA,aAAAuyC,EAAAr0D,MAAAwtH,IACA5+E,EAAA6kB,EAAA1xC,iBAEAsrG,IACAz+E,EAAA6kB,EAAA5xC,iBACAwyC,EAAAD,OACA,UAAAhgC,KAAAigC,EAAAhyE,MACAusD,EAAA6kB,EAAAzxC,kBACa,YAAAoS,KAAAigC,EAAAhyE,QACbusD,EAAA6kB,EAAAxxC,wBAIAoyC,EAAA+4D,gBAAAx+E,EAMA,OAJAylB,EAAA44D,cACA54D,EAAA64D,mBACA74D,EAAAq5D,cAAAR,GAAAD,EAAAx2H,OAAA,EACA49D,EAAA17D,OACA6zH,EAAA5pH,KAAA,SAAA2pH,GAEA,OADAl4D,EAAAk4D,YACA/P,EAAAmR,eAAAt5D,KACOzxD,KAAA,SAAA2pH,GAEP,OADAl4D,EAAAk4D,YACAl4D,KAGAu5D,0BAAA,SAAAv5D,IACA,EAAAjqD,EAAA5kB,SAAA6uE,EAAAq4D,UAAA,0BACA,IAAAH,KACAsB,OAAA,EACAC,OAAA,EACAl/E,EAAAylB,EAAA+4D,gBAAAlzH,QACAgzH,EAAA74D,EAAA64D,iBACAD,EAAA54D,EAAA44D,YACA,IAAAY,KAAAZ,EACAa,EAAAb,EAAAY,GACA,YAAAC,IAGAl/E,EAAAi/E,GAAAC,GAEA,IAAAvuD,GAAA,EAAA4+C,EAAA5qF,oBACA,IAAAs6F,KAAAj/E,EAEA,GADAk/E,EAAAl/E,EAAAi/E,GACA,KAAAC,EAES,QAAAtmI,IAAA+3E,EAAAuuD,GAqCTvB,EAAAsB,GAAAl3H,OAAAC,aAAA2oE,EAAAuuD,QArCS,CACT,IAAA/3H,EAAA,EACA,OAAA+3H,EAAA,IACA,QACA,IAAAA,EAAAr3H,SACAV,EAAA01C,SAAAqiF,EAAAjwD,OAAA,QAEA,MACA,QACA,IAAAiwD,EAAAr3H,SACAV,EAAA01C,SAAAqiF,EAAAjwD,OAAA,QAEA,MACA,QACA,QACAiwD,EAAAr3H,QAAA,IACAV,GAAA+3H,EAAAjwD,OAAA,IAEA,MACA,QACA,IAAA2B,GAAA,EAAAu+C,EAAAz+C,oBAAAwuD,EAAAvuD,IACA,IAAAC,IACAzpE,EAAAypE,GAGA,GAAAzpE,EAAA,CACA,GAAAm3H,GAAAn3H,KAAA83H,EAAA,CACA,IAAApzD,GAAA,EAAAhH,EAAAvxC,aAAAgrG,GACA,GAAAzyD,IAAAqzD,EAAArzD,EAAAozD,IAAA,CACAtB,EAAAsB,GAAAl3H,OAAAC,aAAA2oE,EAAAuuD,IACA,UAGAvB,EAAAsB,GAAAl3H,OAAAC,aAAAb,IAMA,WAAA+nH,EAAAiQ,aAAAxB,IAEAoB,eAAA,SAAAt5D,GAEA,GADAA,EAAA25D,0BAAA35D,EAAAk4D,WAAAl4D,EAAAk4D,UAAA91H,OAAA,EACA49D,EAAA25D,wBAIA,OAHA35D,EAAAq4D,WAAAr4D,EAAAq5D,cACAr5D,EAAA45D,kBAAAj4H,KAAA43H,0BAAAv5D,IAEA10D,QAAAC,QAAAy0D,EAAAk4D,WAEA,IAAAl4D,EAAAq4D,UACA,OAAA/sH,QAAAC,QAAA5J,KAAA43H,0BAAAv5D,IAEA,GAAAA,EAAAq4D,YAAAr4D,EAAA65D,KAAAC,eAAA95D,EAAA65D,gBAAArQ,EAAAuQ,eAAA,UAAA/5D,EAAAs4D,cAAAC,WAAA,QAAAv4D,EAAAs4D,cAAAE,UAAA,SAAAx4D,EAAAs4D,cAAAE,UAAA,WAAAx4D,EAAAs4D,cAAAE,UAAA,WAAAx4D,EAAAs4D,cAAAE,WAAA,CACA,IAAAD,EAAAv4D,EAAAs4D,cAAAC,SACAC,EAAAx4D,EAAAs4D,cAAAE,SACAwB,EAAAhkH,EAAA1E,KAAA/iB,IAAAgqI,EAAA,IAAAC,EAAA,SACA,OAAAhP,EAAAyQ,YAAA14H,QACAg5C,SAAAy/E,EACA1P,iBAAA3oH,KAAA2oH,iBACA4P,QAAA,OACS3rH,KAAA,SAAA4rH,GACT,IAAAN,EAAA75D,EAAA65D,KACA3B,KAUA,OATA2B,EAAA1mH,QAAA,SAAAqmH,EAAAl0D,GACA,GAAAA,EAAA,MACA,UAAAvvD,EAAAzkB,YAAA,6BAEA,IAAA8oI,EAAAD,EAAA74H,OAAAgkE,GACA80D,IACAlC,EAAAsB,GAAAl3H,OAAAC,cAAA63H,EAAAl3H,WAAA,OAAAk3H,EAAAl3H,WAAA,OAGA,IAAAumH,EAAAiQ,aAAAxB,KAGA,OAAA5sH,QAAAC,QAAA,IAAAk+G,EAAA4Q,qBAAAr6D,EAAAs6D,UAAAt6D,EAAAu6D,YAGAnC,cAAA,SAAAF,GACA,IAAAsC,EAAAtC,EACA,SAAAliH,EAAA1B,QAAAkmH,GACAhR,EAAAyQ,YAAA14H,QACAg5C,SAAAigF,EACAlQ,iBAAA3oH,KAAA2oH,iBACA4P,QAAA,OACS3rH,KAAA,SAAAksH,GACT,OAAAA,aAAAjR,EAAAuQ,aACA,IAAAtQ,EAAA4Q,qBAAA,SAEA,IAAA5Q,EAAAiQ,aAAAe,EAAAC,aAEO,EAAA1kH,EAAArB,UAAA6lH,GACPhR,EAAAyQ,YAAA14H,QACAg5C,SAAAigF,EACAlQ,iBAAA3oH,KAAA2oH,iBACA4P,QAAA,OACS3rH,KAAA,SAAAksH,GACT,GAAAA,aAAAjR,EAAAuQ,aACA,WAAAtQ,EAAA4Q,qBAAA,SAEA,IAAAnpH,EAAA,IAAAlJ,MAAAyyH,EAAAr4H,QAeA,OAdAq4H,EAAAtnH,QAAA,SAAAwnH,EAAAjlF,GAEA,IADA,IAAAzzC,KACAsY,EAAA,EAA2BA,EAAAm7B,EAAAtzC,OAAkBmY,GAAA,GAC7C,IAAAwH,EAAA2zB,EAAAxyC,WAAAqX,IAAA,EAAAm7B,EAAAxyC,WAAAqX,EAAA,GACA,kBAAAwH,GAAA,CAIAxH,GAAA,EACA,IAAA0H,EAAAyzB,EAAAxyC,WAAAqX,IAAA,EAAAm7B,EAAAxyC,WAAAqX,EAAA,GACAtY,EAAAc,OAAA,KAAAgf,IAAA,UAAAE,GAAA,YALAhgB,EAAAc,KAAAgf,GAOA7Q,EAAAypH,GAAAr4H,OAAAC,aAAAC,MAAAF,OAAAL,KAEA,IAAAwnH,EAAAiQ,aAAAxoH,KAGA5F,QAAAC,QAAA,OAEAotH,gBAAA,SAAAiC,GAGA,IAFA,IAAAC,EAAAD,EAAAhmH,WACAvN,KACAsU,EAAA,EAAAy0B,EAAAyqF,EAAAz4H,OAA6CuZ,EAAAy0B,EAAQz0B,IAAA,CACrD,IAAAm/G,EAAAD,EAAAl/G,MAAA,EAAAk/G,EAAAl/G,GACA,OAAAm/G,EAAA,CAGA,IAAAp5H,EAAAia,GAAA,EACAtU,EAAA3F,GAAAo5H,GAEA,OAAAzzH,GAEA0zH,cAAA,SAAAz2H,EAAA8vD,EAAA4L,GACA,IAIAg7D,EACAttI,EAAA8V,EAAAmY,EAAAy0B,EAAAtsC,EAAApC,EAAAihE,EALA5wD,EAAApQ,KAAAoQ,KACAkpH,KACAp2D,EAAA,EACAq2D,KAGA,GAAAl7D,EAAAq4D,UAAA,CAGA,GAFAxzD,EAAAvgE,EAAA4O,IAAA,MAAA5O,EAAA/V,IAAA,UACAo0E,EAAAr+D,EAAA/V,IAAA,KACAo0E,EACA,IAAAj1E,EAAA,EAAA8V,EAAAm/D,EAAAvgE,OAAyC1U,EAAA8V,EAAQ9V,IAGjD,GAFAoW,EAAAiO,EAAAU,WAAAkwD,EAAAj1E,MACAgU,EAAAqQ,EAAAU,WAAAkwD,EAAAj1E,IACAsa,MAAA4K,QAAAlR,GACA,IAAAia,EAAA,EAAAy0B,EAAA1uC,EAAAU,OAA2CuZ,EAAAy0B,EAAQz0B,IACnDs/G,EAAAn3H,KAAAiO,EAAAU,WAAA/Q,EAAAia,QAEa,CACb,IAAA5R,EAAAgI,EAAAU,WAAAkwD,IAAAj1E,IACA,IAAAiuB,EAAA7X,EAA6B6X,GAAAja,EAAWia,IACxCs/G,EAAAt/G,GAAA5R,EAKA,GAAAi2D,EAAAi0D,SAAA,CACA,IAAAkH,EAAA72H,EAAAG,SAAA,mBAGA,GAFAu2H,GAAAG,EAAA,MAAAt2D,EAAAs2D,EAAA,IACAA,EAAA72H,EAAA/V,IAAA,MACA4sI,EACA,IAAAztI,EAAA,EAAA8V,EAAA23H,EAAA/4H,OAA6C1U,EAAA8V,EAAQ9V,IAGrD,GAFAoW,EAAAiO,EAAAU,WAAA0oH,EAAAztI,MACAgU,EAAAqQ,EAAAU,WAAA0oH,EAAAztI,IACAsa,MAAA4K,QAAAlR,GACA,IAAAia,EAAA,EAAAy0B,EAAA1uC,EAAAU,OAA6CuZ,EAAAy0B,EAAQz0B,IACrDu/G,EAAAp3H,MAAAiO,EAAAU,WAAA/Q,EAAAia,MAAA5J,EAAAU,WAAA/Q,EAAAia,MAAA5J,EAAAU,WAAA/Q,EAAAia,SAEe,CACf,IAAAy6G,GAAArkH,EAAAU,WAAA0oH,IAAAztI,IAAAqkB,EAAAU,WAAA0oH,IAAAztI,IAAAqkB,EAAAU,WAAA0oH,IAAAztI,KACA,IAAAiuB,EAAA7X,EAA+B6X,GAAAja,EAAWia,IAC1Cu/G,EAAAv/G,GAAAy6G,QAMO,CACP,IAAAkE,EAAAt6D,EAAAs6D,UAEA,GADA33D,EAAAr+D,EAAA/V,IAAA,UACAo0E,EAAA,CAEA,IADAhnD,EAAA2+G,EACA5sI,EAAA,EAAA8V,EAAAm/D,EAAAvgE,OAAyC1U,EAAA8V,EAAQ9V,IACjDutI,EAAAt/G,KAAA5J,EAAAU,WAAAkwD,EAAAj1E,IAEAm3E,EAAA1B,WAAA/O,EAAA7lE,IAAA,wBACS,CACT,IAAA6sI,EAAA92H,EAAA/V,IAAA,YACA,MAAAynB,EAAA1B,QAAA8mH,GAAA,CACA,IAAAC,EAAA15H,KAAA25H,mBAAAF,EAAAptI,MACAitI,EAAAt5H,KAAA45H,qBAAAF,EAAA14D,OAAA3C,GACA6E,EAAAw2D,EAAAx2D,eAIA,IAAA8wD,GAAA,EACA6F,EAAA32D,EACA,QAAAorD,KAAAgL,EAAA,CACA,IAAA9E,EAAA8E,EAAAhL,GACA,GAAAkG,EAGA,GAAAqF,GAIA,GAAAA,IAAArF,EAAA,CACAR,GAAA,EACA,YALA6F,EAAArF,EAQAR,IACA31D,EAAAhyB,OAAAy7E,EAAAwP,UAAAwC,YAEAz7D,EAAA6E,eACA7E,EAAA2C,OAAAs4D,EACAj7D,EAAAg7D,kBACAh7D,EAAAm7D,SAAAD,GAEAQ,YAAA,SAAAN,GACA,IAAAO,EAAAP,EAAAz6G,MAAA,QACA,OAAAg7G,KAAA,EAAAhS,EAAA/+C,mBAAA,IAAA+wD,EAAAz+C,OAAA,YAEAo+C,mBAAA,SAAAttI,GACA,IAAA62E,EAAA,EACAlC,KACAi5D,GAAA,EACAC,GAAA,EAAAlS,EAAA7+C,iBACAgxD,EAAAD,EAAA7tI,MACA+tI,GAAA,EAAAhS,EAAAiS,cACAF,KAAAC,IAEAD,EADAn6H,KAAA+5H,YAAA1tI,GACA,cAEA,aAGA,IAAAiuI,EAAAF,EAAAD,GAOA,OANA,EAAA/lH,EAAAzlB,OAAA2rI,IACAp3D,EAAAo3D,EACAL,GAAA,GAEAj5D,EAAAs5D,KAGAp3D,eACA+2D,YACAj5D,WAGA44D,qBAAA,SAAAW,EAAAl8D,GAIA,IAHA,IAAA2C,EAAAx0E,OAAAoT,OAAA,MACAq3H,EAAA54D,EAAA44D,YACAr+E,EAAAylB,EAAA+4D,gBACA4B,EAAA,EAA4BA,EAAA,IAAgBA,IAC5CA,KAAA/B,GAAAsD,EAAAtD,EAAA+B,IACAh4D,EAAAg4D,GAAAuB,EAAAtD,EAAA+B,IAGAA,KAAApgF,GAAA2hF,EAAA3hF,EAAAogF,MACAh4D,EAAAg4D,GAAAuB,EAAA3hF,EAAAogF,KAIA,OAAAh4D,GAEAkuD,gBAAA,SAAAvsH,GACA,IAAA2zH,EAAA3zH,EACAqH,EAAArH,EAAA/V,IAAA,WACA,OAAAynB,EAAA1B,QAAA3I,GACA,UAAAoK,EAAAzkB,YAAA,wBAEA,IACA6qI,EADA9D,GAAA,EAEA,aAAA1sH,EAAA3d,KAAA,CACA,IAAAouI,EAAA93H,EAAA/V,IAAA,mBACA,IAAA6tI,EACA,UAAArmH,EAAAzkB,YAAA,sCAIA,GAFAgT,EAAA0D,MAAA4K,QAAAwpH,GAAAz6H,KAAAoQ,KAAAU,WAAA2pH,EAAA,IAAAA,EACAzwH,EAAArH,EAAA/V,IAAA,aACA,EAAAynB,EAAA1B,QAAA3I,GACA,UAAAoK,EAAAzkB,YAAA,wBAEA+mI,GAAA,EAEA,IAAAjkE,EAAA9vD,EAAA/V,IAAA,kBACA,GAAA6lE,EAAA,CACA,IAAAkB,EAAA,IAAA00D,EAAAqS,eACA9hF,EAAA09E,EAAAllH,OAAA,YACA,MAAAiD,EAAA1B,QAAAimC,GACA+a,EAAAgnE,OAAA/hF,EAAAvsD,WACS,MAAAgoB,EAAAnD,OAAA0nC,GACT+a,EAAAgnE,OAAA/hF,EAAA1tC,iBACS,MAAAmJ,EAAAxC,QAAA+mC,GAET,IADA,IAAAtnC,EAAAsnC,EAAAvnC,UACAtlB,EAAA,EAAA8V,EAAAyP,EAAA7Q,OAA2C1U,EAAA8V,EAAQ9V,IAAA,CACnD,IAAA+mD,EAAA8F,EAAAxnC,OAAAE,EAAAvlB,IACA,MAAAsoB,EAAA1B,QAAAmgC,GACA6gB,EAAAgnE,OAAA7nF,EAAAzmD,WACa,MAAAgoB,EAAAnD,OAAA4hC,GACb6gB,EAAAgnE,OAAA7nF,EAAA5nC,iBACa,GAAA7E,MAAA4K,QAAA6hC,GAAA,CAGb,IAFA,IAAA8nF,EAAA9nF,EAAAryC,OACAo6H,EAAA,IAAAx0H,MAAAu0H,GACA5gH,EAAA,EAA6BA,EAAA4gH,EAAgB5gH,IAAA,CAC7C,IAAA8gH,EAAAhoF,EAAA94B,IACA,EAAA3F,EAAA1B,QAAAmoH,GACAD,EAAA7gH,GAAA8gH,EAAAzuI,OACiB,EAAA+nB,EAAAzlB,OAAAmsI,KAAA,EAAAzmH,EAAAnD,OAAA4pH,MACjBD,EAAA7gH,GAAA8gH,EAAA5vH,YAGAyoD,EAAAgnE,OAAAE,EAAAx5H,SAIA,IAAAk1H,EAAA5zH,EAAA/V,IAAA,cAAA0pI,EAAA1pI,IAAA,aACA,MAAAynB,EAAArB,UAAAujH,GAAA,CACA,IAAAlqH,EAAAkqH,EAAAj2H,KAAAi2H,EACAiE,EAAAnuH,EAAA7J,OAAA,IAAAlB,WAAA+K,EAAA7J,cAAA,EAAA6J,EAAAiJ,cAAA,IAAAhU,WAAA+K,EAAA7L,MAAAgC,OAAA6J,EAAAlK,MAAAkK,EAAAjM,IAAAiM,EAAAlK,OACAwxD,EAAAgnE,OAAAH,QACS,EAAAnmH,EAAA1B,QAAA4jH,IACT5iE,EAAAgnE,OAAApE,EAAAlqI,MAEA,IAAA20E,EAAAr+D,EAAA/V,IAAA,WAAA0pI,EAAA1pI,IAAA,UACAo0E,IACAw5D,EAAA,IAAAl5H,WAAA,IAAAiB,YAAAy+D,GAAAx+D,QACAmxD,EAAAgnE,OAAAH,IAGA,OACA/nE,aACA9vD,OACA2zH,WACAI,YACA1sH,OAAA3d,KACAsnE,SAAAonE,YAAA,KAGAvL,cAAA,SAAAP,GACA,IAQA5wD,EARAqoD,EAAA1mH,KAEAs2H,EAAArH,EAAAqH,SACA3zH,EAAAssH,EAAAtsH,KACA+zH,EAAAzH,EAAAyH,UACAjkE,EAAAw8D,EAAAx8D,WACAzoD,EAAAilH,EAAAjlH,KACAgxH,EAAAtE,EAAA,UAEA,IAAAjkE,EAAA,CACA,aAAAzoD,EAIS,CACT,IAAAyvH,EAAA92H,EAAA/V,IAAA,YACA,OAAAynB,EAAA1B,QAAA8mH,GACA,UAAArlH,EAAAzkB,YAAA,8BAEA8pI,IAAAptI,KAAAkU,QAAA,aACA,IAAAm5H,EAAA15H,KAAA25H,mBAAAF,GACAO,EAAAP,EAAAz6G,MAAA,QACAqtB,GAAArsC,KAAA+5H,YAAAC,GAAAlS,EAAAwP,UAAA2D,MAAA,IAAAvB,EAAAO,UAAAnS,EAAAwP,UAAAwC,WAAA,OAAA9R,EAAAh/C,mBAAAgxD,GAAAlS,EAAAwP,UAAAC,SAAAzP,EAAAwP,UAAAG,aAUA,OATAp5D,GACAr0D,OACA3d,KAAAotI,EACAz4D,OAAA04D,EAAA14D,OACAkC,aAAAw2D,EAAAx2D,aACA72B,QACAssF,UAAA,EACAC,SAAAoC,GAEAh7H,KAAAq2H,sBAAA1zH,IAAA07D,GAAAzxD,KAAA,SAAAyxD,GAEA,OADAA,EAAA2C,OAAA0lD,EAAAkT,qBAAAF,EAAA14D,OAAA3C,GACA,IAAAypD,EAAAwH,KAAAmK,EAAA,KAAAp7D,KAvBA5L,EAAA,IAAAp+C,EAAAnE,KAAA,MACAuiD,EAAAzwD,IAAA,WAAAqS,EAAA1E,KAAA/iB,IAAAod,IACAyoD,EAAAzwD,IAAA,WAAAW,EAAAG,SAAA,aAyBA,IAAA61H,EAAAh2H,EAAA/V,IAAA,gBACAgsI,EAAAj2H,EAAA/V,IAAA,aAAAouI,EACA7N,EAAA16D,EAAA7lE,IAAA,YACAsuI,EAAAv4H,EAAA/V,IAAA,YAOA,IANA,EAAAwnB,EAAA1lB,UAAAy+H,KACAA,EAAA94G,EAAA1E,KAAA/iB,IAAAugI,KAEA,EAAA/4G,EAAA1lB,UAAAwsI,KACAA,EAAA7mH,EAAA1E,KAAA/iB,IAAAsuI,IAEA,UAAAlxH,EAAA,CACA,IAAAmxH,EAAAhO,KAAA9gI,KACA+uI,EAAAF,KAAA7uI,KACA8uI,IAAAC,KACA,EAAAhnH,EAAArlB,MAAA,sCAAAosI,EAAA,qDAAAC,EAAA,KACAD,GAAAC,GAAA,IAAAA,EAAA1qF,QAAAyqF,KACAhO,EAAA+N,IAKA,GADA/N,KAAA+N,IACA,EAAA7mH,EAAA1B,QAAAw6G,GACA,UAAA/4G,EAAAzkB,YAAA,qBAEA,IAoCA0rI,EApCAC,EAAA7oE,EAAA7lE,IAAA,oCACA,GAAA0uI,GACAA,EAAA34H,KAAA,CACA,IAAA2oC,EAAAgwF,EAAA34H,KAAA/V,IAAA,WACA0+C,IACAA,IAAAj/C,MAEA,IAAAkvI,EAAAD,EAAA34H,KAAA/V,IAAA,WACA4uI,EAAAF,EAAA34H,KAAA/V,IAAA,WACA6uI,EAAAH,EAAA34H,KAAA/V,IAAA,WA4BA,GAzBAyxE,GACAr0D,OACA3d,KAAA8gI,EAAA9gI,KACAi/C,UACA8yB,KAAAk9D,EACAC,UACAC,UACAC,UACAhO,WAAA6I,EAAA7I,WACAiJ,YACAgF,UAAAhF,EACAiF,YAAA,EACAh8D,WAAAh9D,EAAAG,SAAA,eAAAsR,EAAA7iB,qBACAonI,aAAA,EACAC,YAAAoC,EACAha,KAAAvuD,EAAA3vD,SAAA,YACAg9D,OAAArN,EAAA7lE,IAAA,UACAmzE,QAAAtN,EAAA7lE,IAAA,WACAgvI,QAAAnpE,EAAA7lE,IAAA,WACAivI,UAAAppE,EAAA7lE,IAAA,aACAy/C,MAAAomB,EAAA7lE,IAAA,SACAkvI,YAAArpE,EAAA7lE,IAAA,eACAygI,aAAA,GAGAqJ,EAAA,CACA,IAAAqF,EAAAzF,EAAA1pI,IAAA,aACA,EAAAynB,EAAA1B,QAAAopH,KACA19D,EAAA09D,cAAA1vI,MAEAgvI,EAAAxT,EAAAyQ,YAAA14H,QACAg5C,SAAAmjF,EACApT,iBAAA3oH,KAAA2oH,iBACA4P,QAAA,OACS3rH,KAAA,SAAAsrH,GACT75D,EAAA65D,OACA75D,EAAAi0D,SAAAj0D,EAAA65D,KAAA5F,gBAGA+I,EAAA1xH,QAAAC,aAAApY,GAEA,OAAA6pI,EAAAzuH,KAAA,WACA,OAAA85G,EAAA2P,sBAAA1zH,EAAA2zH,EAAAj4D,KACOzxD,KAAA,SAAAyxD,GAKP,OAJAqoD,EAAA0S,cAAAz2H,EAAA8vD,EAAA4L,GACA,UAAAr0D,IACAq0D,EAAAgvD,aAAA,GAEA,IAAAvF,EAAAwH,KAAAnC,EAAA9gI,KAAAivI,EAAAj9D,OAIA0gC,EA1hEA,GA4hEAwuB,EAAA,WACA,SAAAA,EAAAE,EAAA9uH,EAAAgE,GACA3C,KAAAytH,aACAztH,KAAArB,OACAqB,KAAA2C,OACA3C,KAAAg8H,YAAA,KACAh8H,KAAAi8H,MAAA,EA0DA,OAxDA1O,EAAAtgI,WACAmgB,KAAA,SAAAF,GACA,IAAAlN,KAAAi8H,KAAA,CAGA,IAAAC,EAAAl8H,KAAArB,KAAAw9H,aACAjvH,EAAAE,KAAA,aAAApN,KAAAytH,WAAA,OAAAyO,IACAl8H,KAAAi8H,MAAA,IAEA3O,cAAA,SAAAt+C,EAAAsvB,EAAA89B,EAAA1mD,GACA,IAAA11E,KAAArB,KAAA0uH,YACA,UAAAjvH,MAAA,yBAEA,GAAA4B,KAAAg8H,YACA,OAAAh8H,KAAAg8H,YAEA,IAAAK,EAAA7vI,OAAAoT,OAAAovE,EAAAr2B,SACA0jF,EAAA3kD,cAAA,EA8BA,IA7BA,IAAA4kD,EAAAttD,EAAAtmE,MAAA2zH,GACA5M,EAAAzvH,KAAArB,KACA49H,EAAA5yH,QAAAC,UACA4yH,EAAAx8H,KAAA2C,KAAA/V,IAAA,aACA6vI,EAAAz8H,KAAA2C,KAAA/V,IAAA,cAAA0xG,EACAo+B,EAAAF,EAAAnrH,UACAsrH,EAAAnwI,OAAAoT,OAAA,MAEAg9H,EAAA,WACA,IAAAh6H,EAAA85H,EAAA3wI,GACAwwI,IAAA3vH,KAAA,WACA,IAAAiwH,EAAAL,EAAA5vI,IAAAgW,GACA06B,EAAA,IAAAggE,EAAA5lE,aACA,OAAA4kG,EAAA5jD,iBACArsE,OAAAwwH,EACAnnD,OACA4oB,UAAAm+B,EACAn/F,iBACW1wB,KAAA,WACX+vH,EAAA/5H,GAAA06B,EAAA7F,QACA2kG,EAAAl/F,gBAAAI,EAAAV,gBACWtxB,MAAA,SAAAN,IACX,EAAAoJ,EAAA7mB,MAAA,wBAAAqV,EAAA,uBACA,IAAA06B,EAAA,IAAAggE,EAAA5lE,aACAilG,EAAA/5H,GAAA06B,EAAA7F,aAKA1rC,EAAA,EAAAc,EAAA6vI,EAAAj8H,OAA8C1U,EAAAc,IAAOd,EACrD6wI,IAKA,OAHA58H,KAAAg8H,YAAAO,EAAA3vH,KAAA,WACA6iH,EAAAkN,yBAEA38H,KAAAg8H,cAGAzO,EAhEA,GAkEAiD,EAAA,WACA,SAAAA,EAAA/F,GACAzqH,KAAA8vB,MAAA26F,EACAzqH,KAAA88H,cAkBA,OAhBAtM,EAAAvjI,WACAyL,KAAA,WACA,IAAAqkI,EAAA/8H,KAAA8vB,MACA9vB,KAAA88H,WAAA17H,KAAApB,KAAA8vB,OACA9vB,KAAA8vB,MAAAitG,EAAAr0H,SAEA/P,QAAA,WACA,IAAA4qG,EAAAvjG,KAAA88H,WAAAjtF,MACA0zD,IACAvjG,KAAA8vB,MAAAyzE,IAGA3qG,UAAA,SAAA+P,GACA3I,KAAA8vB,MAAA6jG,IAAAv/G,EAAAvkB,KAAA+I,UAAAoH,KAAA8vB,MAAA6jG,IAAAhrH,KAGA6nH,EArBA,GAuBAwB,EAAA,WACA,SAAAA,IACAhyH,KAAA2zH,IAAA,IAAAzuG,aAAA9Q,EAAA9iB,iBACA0O,KAAAmtH,SAAA,KACAntH,KAAAkxH,SAAA,EACAlxH,KAAArB,KAAA,KACAqB,KAAA2/D,WAAAvrD,EAAA7iB,qBACAyO,KAAA4zH,WAAAx/G,EAAA9iB,gBAAA4S,QACAlE,KAAA6zH,eAAAz/G,EAAA9iB,gBAAA4S,QACAlE,KAAA40H,YAAA,EACA50H,KAAA60H,YAAA,EACA70H,KAAAy1H,QAAA,EACAz1H,KAAAuzH,WAAA,EACAvzH,KAAAwzH,SAAA,EA6EA,OA3EAxB,EAAA/kI,WACAyN,cAAA,SAAAiK,EAAAnB,EAAArX,EAAAC,EAAA6S,EAAAwgB,GACA,IAAAvzB,EAAA8T,KAAA4zH,WACA1nI,EAAA,GAAAyY,EACAzY,EAAA,GAAAsX,EACAtX,EAAA,GAAAC,EACAD,EAAA,GAAAE,EACAF,EAAA,GAAA+S,EACA/S,EAAA,GAAAuzB,GAEAq2G,kBAAA,SAAAnxH,EAAAnB,EAAArX,EAAAC,EAAA6S,EAAAwgB,GACA,IAAAvzB,EAAA8T,KAAA6zH,eACA3nI,EAAA,GAAAyY,EACAzY,EAAA,GAAAsX,EACAtX,EAAA,GAAAC,EACAD,EAAA,GAAAE,EACAF,EAAA,GAAA+S,EACA/S,EAAA,GAAAuzB,GAEAy1G,oBAAA,SAAAjzH,EAAA4G,GACA,IAAA3c,EAAA8T,KAAA4zH,WACA1nI,EAAA,GAAAA,EAAA,GAAA+V,EAAA/V,EAAA,GAAA2c,EAAA3c,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAA+V,EAAA/V,EAAA,GAAA2c,EAAA3c,EAAA,IAEAypI,wBAAA,SAAA1zH,EAAA4G,GACA,IAAA3c,EAAA8T,KAAA6zH,eACA3nI,EAAA,GAAAA,EAAA,GAAA+V,EAAA/V,EAAA,GAAA2c,EAAA3c,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAA+V,EAAA/V,EAAA,GAAA2c,EAAA3c,EAAA,IAEA2pI,0BAAA,SAAAlxH,EAAAnB,EAAArX,EAAAC,EAAA6S,EAAAwgB,GACA,IAAA9gB,EAAAqB,KAAArB,KACA,IAAAA,EACA,YAEA,IAAAzS,EAAA8T,KAAA6zH,eACA,GAAAlvH,IAAAzY,EAAA,IAAAsX,IAAAtX,EAAA,IAAAC,IAAAD,EAAA,IAAAE,IAAAF,EAAA,GACA,YAEA,IAAA8wI,EAAA/9H,EAAA/S,EAAA,GACA+wI,EAAAx9G,EAAAvzB,EAAA,GACA,GAAAyS,EAAA2zH,UAAA,IAAA0K,IAAAr+H,EAAA2zH,UAAA,IAAA2K,EACA,YAEA,IAAAlI,EACAC,EACAkI,EAAAv4H,EAAAvY,EAAAoX,EAAArX,EAQA,OAPAwS,EAAA2zH,UACAyC,GAAAkI,EAAA9wI,EAAA+wI,EACAlI,EAAAiI,EAAAt4H,EAAAu4H,IAEAnI,EAAAiI,EAAA5wI,EAAA8wI,EACAlI,GAAAgI,EAAAx5H,EAAA05H,IAGA90H,MAAA2sH,EACA1sH,OAAA2sH,EACA3nI,MAAAsR,EAAA2zH,SAAA0C,EAAAD,IAGAoI,iBAAA,SAAAxJ,GACA,IAAAL,GAAAtzH,KAAAkxH,SAAAlxH,KAAAuzH,WAAA,IAAAvzH,KAAAkxH,SAAA,EAAAlxH,KAAAwzH,UACA,OAAAp/G,EAAAvkB,KAAA+I,UAAA+6H,EAAAv/G,EAAAvkB,KAAA+I,UAAAoH,KAAA4zH,WAAAN,KAEAsC,eAAA,WACA51H,KAAA21H,wBAAA,GAAA31H,KAAAy1H,SACAz1H,KAAA4zH,WAAA5zH,KAAA6zH,eAAA3vH,SAEAwE,MAAA,WACA,IAAAA,EAAAlc,OAAAoT,OAAAI,MAIA,OAHA0I,EAAAkrH,WAAA5zH,KAAA4zH,WAAA1vH,QACAwE,EAAAmrH,eAAA7zH,KAAA6zH,eAAA3vH,QACAwE,EAAAi3D,WAAA3/D,KAAA2/D,WAAAz7D,QACAwE,IAGAspH,EA1FA,GA4FA1B,EAAA,WACA,SAAAA,IACAtwH,KAAA2zH,IAAA,IAAAzuG,aAAA9Q,EAAA9iB,iBACA0O,KAAArB,KAAA,KACAqB,KAAA8tH,kBAAA15G,EAAApkB,kBAAAkC,KACA8N,KAAA+tH,eAAAtjF,EAAAxqB,WAAAmD,WAAAC,KACArjB,KAAAsxH,iBAAA7mF,EAAAxqB,WAAAmD,WAAAC,KAOA,OALAitG,EAAArjI,WACAyb,MAAA,WACA,OAAAlc,OAAAoT,OAAAI,QAGAswH,EAbA,GAeAI,EAAA,WACA,IAAA0M,GAAA,EAAAhpH,EAAAnlB,uBAAA,SAAA0oB,GACAA,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAA6G,aACAmlI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAA8G,WACAklI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAA+G,YACAilI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAgH,cACAglI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAiH,QACA+kI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAkH,mBACA8kI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAmH,YACA6kI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAoH,UACA4kI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAqH,KACA2kI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAsH,QACA0kI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAuH,UACAykI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAwH,OACAwkI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAyH,OACAukI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAA0H,QACAskI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAA2H,SACAqkI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAA4H,SACAokI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAA6H,UACAmkI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA8H,UACAkkI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAA+H,OACAikI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAgI,YACAgkI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAiI,KACA+jI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAiI,KACA+jI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAkI,OACA8jI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAmI,WACA6jI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAoI,aACA4jI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAqI,gBACA2jI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAsI,kBACA0jI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAuI,QACAyjI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAwI,KACAwjI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAyI,OACAujI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA0I,UACAsjI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA2I,QACAqjI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA4I,eACAojI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA6I,eACAmjI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA8I,UACAkjI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA+I,WACAijI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAgJ,QACAgjI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAiJ,qBACA+iI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAkJ,YACA8iI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAmJ,SACA6iI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAoJ,mBACA4iI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAqJ,cACA2iI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAsJ,SACA0iI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAuJ,SACAyiI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAwJ,eACAwiI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAyJ,iBACAuiI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAA0J,2BACAsiI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA2J,aACAqiI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA4J,sBACAoiI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA6J,oBACAmiI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA8J,kBACAkiI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA+J,eACAiiI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,QACAyU,GAAAhY,EAAA/iB,IAAAgK,gBACAgiI,QAAA,GACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAiK,aACA+hI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,QACAyU,GAAAhY,EAAA/iB,IAAAkK,cACA8hI,QAAA,GACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAmK,cACA6hI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAoK,YACA4hI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAqK,kBACA2hI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAsK,gBACA0hI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAuK,mBACAyhI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,MACAyU,GAAAhY,EAAA/iB,IAAAwK,iBACAwhI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAyK,YACAuhI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA0K,iBACAshI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA2K,eACAqhI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA4K,eACAohI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA6K,aACAmhI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA8K,UACAkhI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAA+K,eACAihI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,QACAyU,GAAAhY,EAAA/iB,IAAAgL,mBACAghI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,QACAyU,GAAAhY,EAAA/iB,IAAAiL,wBACA+gI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,QACAyU,GAAAhY,EAAA/iB,IAAAkL,iBACA8gI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAmL,YACA6gI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,OACAyU,GAAAhY,EAAA/iB,IAAAoL,UACA4gI,QAAA,EACAC,cAAA,GAEA3lH,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,WACAA,EAAA,YACAA,EAAA,eAEA,SAAA+4G,EAAArkH,EAAA+D,EAAA+7G,GACAnsH,KAAAu9H,MAAAH,IACAp9H,KAAAu0B,OAAA,IAAA+V,EAAA1c,OAAA,IAAA0c,EAAAxc,MAAAzhB,EAAArM,KAAAu9H,QAAA,EAAAntH,GACApQ,KAAAmsH,eACAnsH,KAAAw9H,oBA8EA,OA5EA9M,EAAAzjI,WACA4jI,uBACA,OAAA7wH,KAAAmsH,aAAA2Q,WAAAr8H,QAEAqnC,KAAA,SAAAiqC,GACA,IAAAppE,EAAAopE,EAAAppE,KACA,SACA,IAAA/W,EAAAoO,KAAAu0B,OAAAzF,SACA,MAAAza,EAAAzB,OAAAhhB,GAAA,CACA,IAAAme,EAAAne,EAAAme,IACA0tH,EAAAz9H,KAAAu9H,MAAAxtH,GACA,IAAA0tH,EAAA,EACA,EAAArpH,EAAA7mB,MAAA,oBAAAwiB,EAAA,KACA,SAEA,IAAAlF,EAAA4yH,EAAArxG,GACAixG,EAAAI,EAAAJ,QACAK,EAAA,OAAA/0H,IAAAlI,OAAA,EACA,GAAAg9H,EAAAH,aAsBWI,EAAAL,IACX,EAAAjpH,EAAArlB,MAAA,WAAA8b,EAAA,iBAAAwyH,EAAA,wBAAAK,EAAA,cAvBA,CACA,GAAAA,IAAAL,EAAA,CACA,IAAAG,EAAAx9H,KAAAw9H,iBACA,MAAAE,EAAAL,EACAG,EAAAp8H,KAAAuH,EAAAqN,SACA0nH,IAEA,MAAAA,EAAAL,GAAA,IAAAG,EAAA/8H,OACA,OAAAkI,IACAA,MAEAA,EAAApC,QAAAi3H,EAAA3tF,OACA6tF,IAGA,GAAAA,EAAAL,EAAA,EACA,EAAAjpH,EAAA7mB,MAAA,oBAAAsd,EAAA,cAAAwyH,EAAA,uBAAAK,EAAA,UACA,OAAA/0H,IACAA,EAAAlI,OAAA,GAEA,UAQA,OAHAT,KAAA29H,kBAAA9yH,EAAAlC,GACAopE,EAAAlnE,KACAknE,EAAAppE,QACA,EAEA,MAAA0L,EAAA3B,OAAA9gB,GACA,SAEA,UAAAA,IACA,OAAA+W,IACAA,MAEAA,EAAAvH,KAAAxP,GACA+W,EAAAlI,OAAA,IACA,UAAA2T,EAAAzkB,YAAA,wBAKAguI,kBAAA,SAAA9yH,EAAAlC,GACA,SAAAkC,GACA,KAAAuJ,EAAA/iB,IAAAqH,KACAsH,KAAAmsH,aAAAzzH,OACA,MACA,KAAA0b,EAAA/iB,IAAAsH,QACAqH,KAAAmsH,aAAAxzH,UACA,MACA,KAAAyb,EAAA/iB,IAAAuH,UACAoH,KAAAmsH,aAAAvzH,UAAA+P,GACA,SAIA+nH,EA5cA,GA8cAjlI,EAAAszG,oBAIA,SAAAvzG,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAA6sI,YAAA7sI,EAAA2sI,aAAA3sI,EAAAmyI,UAAApsI,EAEA,IAAA4iB,EAAAvoB,EAAA,GAEAwoB,EAAAxoB,EAAA,GAEAy+C,EAAAz+C,EAAA,IAEAkiC,EAAAliC,EAAA,GAEAgyI,GAAA,+xEACAD,EAAA,WACA,SAAAA,EAAAzF,GACAn4H,KAAA89H,8BACA99H,KAAA+9H,mBAAA,EACA/9H,KAAAqQ,QACArQ,KAAA3T,KAAA,GACA2T,KAAAsyH,UAAA,EACAtyH,KAAAu4H,QAAA,KACAv4H,KAAAm4H,cAyGA,OAvGAyF,EAAA3wI,WACA+wI,kBAAA,SAAAnxI,EAAAynE,EAAAD,GACAr0D,KAAA89H,gBAAAjxI,EAAA,GAAAuU,KAAAkzD,EAAAD,GACAr0D,KAAA+9H,sBAEAE,YAAA,SAAA3pE,EAAAD,EAAA6pE,GACA,MAAA5pE,GAAAD,EACAr0D,KAAAqQ,KAAAikD,KAAA4pE,KAGAC,WAAA,SAAA7pE,EAAAD,EAAA6pE,GACA,IAAAE,EAAAF,EAAAz9H,OAAA,EACA,MAAA6zD,GAAAD,EACAr0D,KAAAqQ,KAAAikD,KAAA4pE,EACAA,IAAAr2D,OAAA,EAAAu2D,GAAAz9H,OAAAC,aAAAs9H,EAAA38H,WAAA68H,GAAA,IAGAC,kBAAA,SAAA/pE,EAAAD,EAAAllC,GACA,IAAApjC,EAAA,EACA8V,EAAAstB,EAAA1uB,OACA,MAAA6zD,GAAAD,GAAAtoE,EAAA8V,EACA7B,KAAAqQ,KAAAikD,GAAAnlC,EAAApjC,OACAuoE,GAGAgqE,OAAA,SAAAx3H,EAAAy3H,GACAv+H,KAAAqQ,KAAAvJ,GAAAy3H,GAEA5+H,OAAA,SAAAI,GACA,OAAAC,KAAAqQ,KAAAtQ,IAEAy+H,SAAA,SAAAz+H,GACA,YAAAvO,IAAAwO,KAAAqQ,KAAAtQ,IAEAyR,QAAA,SAAAzK,GACA,IAAAwI,EAAAvP,KAAAqQ,KACA5P,EAAA8O,EAAA9O,OACA,GAAAA,GAAA,MACA,QAAA1U,EAAA,EAAuBA,EAAA0U,EAAY1U,SACnCyF,IAAA+d,EAAAxjB,IACAgb,EAAAhb,EAAAwjB,EAAAxjB,SAIA,QAAAs+C,KAAA96B,EACAxI,EAAAsjC,EAAA96B,EAAA86B,KAIAo0F,WAAA,SAAApxI,GACA,IAAAkiB,EAAAvP,KAAAqQ,KACA,GAAAd,EAAA9O,QAAA,MACA,OAAA8O,EAAAmhC,QAAArjD,GAEA,QAAA2rI,KAAAzpH,EACA,GAAAA,EAAAypH,KAAA3rI,EACA,SAAA2rI,EAGA,UAEAD,OAAA,WACA,OAAA/4H,KAAAqQ,MAEAquH,aAAA,SAAAp+H,EAAA8B,EAAAib,GAIA,IAHA,IAAAlxB,EAAA,EACA2xI,EAAA99H,KAAA89H,gBACAa,EAAA3+H,KAAA89H,gBAAAr9H,OACA5T,EAAA,EAAqBA,EAAA8xI,EAAwB9xI,IAAA,CAC7CV,MAAA,EAAAmU,EAAAiB,WAAAa,EAAAvV,MAAA,EAEA,IADA,IAAA+xI,EAAAd,EAAAjxI,GACA+rB,EAAA,EAAAqB,EAAA2kH,EAAAn+H,OAAmDmY,EAAAqB,GAAQ,CAC3D,IAAAq6C,EAAAsqE,EAAAhmH,KACAy7C,EAAAuqE,EAAAhmH,KACA,GAAAzsB,GAAAmoE,GAAAnoE,GAAAkoE,EAGA,OAFAh3C,EAAAw6G,SAAA1rI,OACAkxB,EAAA5c,OAAA5T,EAAA,IAKAwwB,EAAAw6G,SAAA,EACAx6G,EAAA5c,OAAA,GAGAA,aACA,OAAAT,KAAAqQ,KAAA5P,QAEAo+H,qBACA,kBAAA7+H,KAAA3T,MAAA,eAAA2T,KAAA3T,KACA,SAEA,WAAA2T,KAAAqQ,KAAA5P,OACA,SAEA,QAAA1U,EAAA,EAAqBA,EAAA,MAAaA,IAClC,GAAAiU,KAAAqQ,KAAAtkB,OACA,SAGA,WAGA6xI,EAjHA,GAmHAxF,EAAA,WACA,SAAAA,EAAA9F,EAAAzlI,GACA+wI,EAAA3xI,KAAA+T,MACAA,KAAAsyH,WACAtyH,KAAAg+H,kBAAAnxI,EAAA,SA+CA,OA7CAunB,EAAAvkB,KAAA8W,QAAAyxH,EAAAwF,MACAxF,EAAAnrI,WACA+wI,kBAAAJ,EAAA3wI,UAAA+wI,kBACAC,YAAA,SAAA3pE,EAAAD,EAAA6pE,IACA,EAAA9pH,EAAA9mB,aAAA,gCAEA6wI,WAAA,SAAA7pE,EAAAD,EAAA6pE,IACA,EAAA9pH,EAAA9mB,aAAA,+BAEA+wI,kBAAA,SAAA/pE,EAAAD,EAAAllC,IACA,EAAA/a,EAAA9mB,aAAA,sCAEAgxI,OAAA,SAAAx3H,EAAAy3H,IACA,EAAAnqH,EAAA9mB,aAAA,8BAEAqS,OAAA,SAAAI,GACA,OAAAjC,OAAAC,UAAAgC,OAAA,MAAAA,OAAAvO,GAEAgtI,SAAA,SAAAz+H,GACA,OAAAjC,OAAAC,UAAAgC,OAAA,OAEAyR,QAAA,SAAAzK,GACA,QAAAhb,EAAA,EAAqBA,GAAA,MAAaA,IAClCgb,EAAAhb,MAGA0yI,WAAA,SAAApxI,GACA,OAAAyQ,OAAAC,UAAA1Q,OAAA,MAAAA,GAAA,GAEA0rI,OAAA,WAEA,IADA,IAAAxpH,EAAA,IAAAlJ,MAAA,OACAta,EAAA,EAAqBA,GAAA,MAAaA,IAClCwjB,EAAAxjB,KAEA,OAAAwjB,GAGAmvH,aAAAd,EAAA3wI,UAAAyxI,aACAj+H,aACA,cAEAo+H,sBACA,EAAAzqH,EAAA9mB,aAAA,uCAGA8qI,EAnDA,GAqDA0G,EAAA,WACA,SAAAC,EAAAp6H,EAAA+J,GAEA,IADA,IAAA7hB,EAAA,EACAd,EAAA,EAAmBA,GAAA2iB,EAAW3iB,IAC9Bc,KAAA,EAAA8X,EAAA5Y,GAEA,OAAAc,IAAA,EAEA,SAAAmyI,EAAAr6H,EAAA+J,GACA,WAAAA,EACA/N,OAAAC,aAAA+D,EAAA,GAAAA,EAAA,IAEA,IAAA+J,EACA/N,OAAAC,aAAA+D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAhE,OAAAC,aAAAC,MAAA,KAAA8D,EAAAxD,SAAA,EAAAuN,EAAA,IAEA,SAAAuwH,EAAAt6H,EAAAnB,EAAAkL,GAEA,IADA,IAAAviB,EAAA,EACAJ,EAAA2iB,EAAsB3iB,GAAA,EAAQA,IAC9BI,GAAAwY,EAAA5Y,GAAAyX,EAAAzX,GACA4Y,EAAA5Y,GAAA,IAAAI,EACAA,IAAA,EAGA,SAAA+yI,EAAAv6H,EAAA+J,GAEA,IADA,IAAAviB,EAAA,EACAJ,EAAA2iB,EAAsB3iB,GAAA,GAAAI,EAAA,EAAiBJ,IACvCI,GAAAwY,EAAA5Y,GACA4Y,EAAA5Y,GAAA,IAAAI,EACAA,IAAA,EAGA,IAAAgzI,EAAA,GACAC,EAAA,GACA,SAAAC,EAAAt9H,GACA/B,KAAAwC,OAAAT,EACA/B,KAAA8B,IAAA,EACA9B,KAAAI,IAAA2B,EAAAtB,OACAT,KAAAmlB,OAAA,IAAA7jB,WAAA89H,GA0EA,SAAAE,EAAAv9H,EAAAm2H,EAAAvnE,GACA,WAAAhnD,QAAA,SAAAC,EAAAC,GACA,IAAAwC,EAAA,IAAAgzH,EAAAt9H,GACAy8D,EAAAnyD,EAAAkzH,WACArH,EAAA5F,YAAA,EAAA9zD,GACA,IAMAz+D,EACAyD,EAPA+0H,EAAA,KACAp2H,EAAA,IAAAb,WAAA69H,GACA/+H,EAAA,IAAAkB,WAAA69H,GACAp3D,EAAA,IAAAzmE,WAAA69H,GACAnG,EAAA,IAAA13H,WAAA69H,GACA9rE,EAAA,IAAA/xD,WAAA69H,GAGA,OAAA37H,EAAA6I,EAAAkzH,aAAA,GACA,IAAAv1H,EAAAxG,GAAA,EACA,OAAAwG,EAAA,CAWA,IAAAw1H,KAAA,GAAAh8H,GACAi8H,EAAA,GAAAj8H,EACA,GAAAi8H,EAAA,EAAAN,EACA,UAAA/gI,MAAA,wCAEA,IAEArS,EAFA2zI,EAAA,EACAC,EAAAtzH,EAAAuzH,aAEA,OAAA51H,GACA,OAKA,IAJAqC,EAAAwzH,QAAA19H,EAAAs9H,GACApzH,EAAAyzH,cAAA1/H,EAAAq/H,GACAR,EAAA7+H,EAAA+B,EAAAs9H,GACAvH,EAAA8F,kBAAAyB,EAAA,EAAAV,EAAA58H,EAAAs9H,GAAAV,EAAA3+H,EAAAq/H,IACA1zI,EAAA,EAAuBA,EAAA4zI,EAAmB5zI,IAC1CmzI,EAAA9+H,EAAAq/H,GACApzH,EAAAyzH,cAAA39H,EAAAs9H,GACAR,EAAA98H,EAAA/B,EAAAq/H,GACApzH,EAAAyzH,cAAA1/H,EAAAq/H,GACAR,EAAA7+H,EAAA+B,EAAAs9H,GACAvH,EAAA8F,kBAAAyB,EAAA,EAAAV,EAAA58H,EAAAs9H,GAAAV,EAAA3+H,EAAAq/H,IAEA,MACA,OAKA,IAJApzH,EAAAwzH,QAAA19H,EAAAs9H,GACApzH,EAAAyzH,cAAA1/H,EAAAq/H,GACAR,EAAA7+H,EAAA+B,EAAAs9H,GACApzH,EAAAuzH,aACA7zI,EAAA,EAAuBA,EAAA4zI,EAAmB5zI,IAC1CmzI,EAAA9+H,EAAAq/H,GACApzH,EAAAyzH,cAAA39H,EAAAs9H,GACAR,EAAA98H,EAAA/B,EAAAq/H,GACApzH,EAAAyzH,cAAA1/H,EAAAq/H,GACAR,EAAA7+H,EAAA+B,EAAAs9H,GACApzH,EAAAuzH,aAEA,MACA,OAIA,IAHAvzH,EAAAwzH,QAAA93D,EAAA03D,GACA1/H,EAAAsM,EAAAuzH,aACA1H,EAAAoG,OAAAS,EAAAh3D,EAAA03D,GAAA1/H,GACAhU,EAAA,EAAuBA,EAAA4zI,EAAmB5zI,IAC1CmzI,EAAAn3D,EAAA03D,GACAD,IACAnzH,EAAAyzH,cAAAzsE,EAAAosE,GACAR,EAAAl3D,EAAA1U,EAAAosE,IAEA1/H,EAAAsM,EAAA0zH,cAAAhgI,EAAA,GACAm4H,EAAAoG,OAAAS,EAAAh3D,EAAA03D,GAAA1/H,GAEA,MACA,OAMA,IALAsM,EAAAwzH,QAAA19H,EAAAs9H,GACApzH,EAAAyzH,cAAA1/H,EAAAq/H,GACAR,EAAA7+H,EAAA+B,EAAAs9H,GACA1/H,EAAAsM,EAAAuzH,aACA1H,EAAA+F,YAAAc,EAAA58H,EAAAs9H,GAAAV,EAAA3+H,EAAAq/H,GAAA1/H,GACAhU,EAAA,EAAuBA,EAAA4zI,EAAmB5zI,IAC1CmzI,EAAA9+H,EAAAq/H,GACAD,EAIAr9H,EAAAH,IAAA5B,IAHAiM,EAAAyzH,cAAA39H,EAAAs9H,GACAR,EAAA98H,EAAA/B,EAAAq/H,IAIApzH,EAAAyzH,cAAA1/H,EAAAq/H,GACAR,EAAA7+H,EAAA+B,EAAAs9H,GACA1/H,EAAAsM,EAAAuzH,aACA1H,EAAA+F,YAAAc,EAAA58H,EAAAs9H,GAAAV,EAAA3+H,EAAAq/H,GAAA1/H,GAEA,MACA,OAIA,IAHAsM,EAAAwzH,QAAA93D,EAAA23D,GACArzH,EAAAwzH,QAAA7G,EAAAyG,GACAvH,EAAAoG,OAAAS,EAAAh3D,EAAA23D,GAAAV,EAAAhG,EAAAyG,IACA1zI,EAAA,EAAuBA,EAAA4zI,EAAmB5zI,IAC1CmzI,EAAAn3D,EAAA23D,GACAF,IACAnzH,EAAAyzH,cAAAzsE,EAAAqsE,GACAT,EAAAl3D,EAAA1U,EAAAqsE,IAEAR,EAAAlG,EAAAyG,GACApzH,EAAA2zH,cAAA3sE,EAAAosE,GACAR,EAAAjG,EAAA3lE,EAAAosE,GACAvH,EAAAoG,OAAAS,EAAAh3D,EAAA23D,GAAAV,EAAAhG,EAAAyG,IAEA,MACA,OAMA,IALApzH,EAAAwzH,QAAA19H,EAAAu9H,GACArzH,EAAAyzH,cAAA1/H,EAAAs/H,GACAT,EAAA7+H,EAAA+B,EAAAu9H,GACArzH,EAAAwzH,QAAA7G,EAAAyG,GACAvH,EAAAiG,WAAAY,EAAA58H,EAAAu9H,GAAAX,EAAA3+H,EAAAs/H,GAAAV,EAAAhG,EAAAyG,IACA1zI,EAAA,EAAuBA,EAAA4zI,EAAmB5zI,IAC1CmzI,EAAA9+H,EAAAs/H,GACAF,EAIAr9H,EAAAH,IAAA5B,IAHAiM,EAAAyzH,cAAA39H,EAAAu9H,GACAT,EAAA98H,EAAA/B,EAAAs/H,IAIArzH,EAAAyzH,cAAA1/H,EAAAs/H,GACAT,EAAA7+H,EAAA+B,EAAAu9H,GACArzH,EAAAwzH,QAAA7G,EAAAyG,GACAvH,EAAAiG,WAAAY,EAAA58H,EAAAu9H,GAAAX,EAAA3+H,EAAAs/H,GAAAV,EAAAhG,EAAAyG,IAEA,MACA,QAEA,YADA51H,EAAA,IAAAzL,MAAA,oCAAA4L,UAtHA,UAAAxG,GACA,OACA6I,EAAA4zH,aACA,MACA,OACA1H,EAAAlsH,EAAA4zH,aACA,OAqHAr2H,EADA2uH,EACA5nE,EAAA4nE,GAGAL,KAGA,SAAA4G,KAEA,OA3NAO,EAAApyI,WACAsyI,SAAA,WACA,OAAAv/H,KAAA8B,KAAA9B,KAAAI,KACA,EAEAJ,KAAAwC,OAAAxC,KAAA8B,QAEA89H,WAAA,WACA,IACA5vF,EADAnjD,EAAA,EAEA,GACA,IAAA2W,EAAAxD,KAAAu/H,WACA,GAAA/7H,EAAA,EACA,UAAA4Q,EAAAzkB,YAAA,2BAEAqgD,IAAA,IAAAxsC,GACA3W,KAAA,MAAA2W,SACOwsC,GACP,OAAAnjD,GAEAkzI,WAAA,WACA,IAAAlzI,EAAAmT,KAAA4/H,aACA,SAAA/yI,QAAA,GAAAA,IAAA,GAEAgzI,QAAA,SAAA7tH,EAAAtD,GACAsD,EAAAhQ,IAAAhC,KAAAwC,OAAArB,SAAAnB,KAAA8B,IAAA9B,KAAA8B,IAAA4M,EAAA,IACA1O,KAAA8B,KAAA4M,EAAA,GAEAoxH,cAAA,SAAA9tH,EAAAtD,GACA,IAAAshC,EACAmuB,EAAAn+D,KAAAmlB,OACA+6G,EAAA,EACA,GACA,IAAA18H,EAAAxD,KAAAu/H,WACA,GAAA/7H,EAAA,EACA,UAAA4Q,EAAAzkB,YAAA,2BAEAqgD,IAAA,IAAAxsC,GACA26D,EAAA+hE,KAAA,IAAA18H,SACOwsC,GACP,IAAAjkD,EAAA2iB,EACAlM,EAAA,EACAgjD,EAAA,EACA,MAAAz5D,GAAA,GACA,MAAAy5D,EAAA,GAAA2Y,EAAA19D,OAAA,EACA+B,EAAA27D,IAAA+hE,IAAA16E,EAAAhjD,EACAgjD,GAAA,EAEAxzC,EAAAjmB,GAAA,IAAAyW,EACAzW,IACAyW,IAAA,EACAgjD,GAAA,IAGAw6E,cAAA,SAAAhuH,EAAAtD,GACA1O,KAAA8/H,cAAA9tH,EAAAtD,GAGA,IAFA,IAAAskB,EAAA,EAAAhhB,EAAAtD,GAAA,MACAviB,EAAA,EACAJ,EAAA,EAAqBA,GAAA2iB,EAAW3iB,IAChCI,GAAA,EAAAA,IAAA,EAAA6lB,EAAAjmB,GACAimB,EAAAjmB,GAAAI,GAAA,EAAA6mC,GAGAitG,WAAA,WAGA,IAFA,IAAAzoH,EAAAxX,KAAA4/H,aACAxyI,EAAA,GACArB,EAAA,EAAqBA,EAAAyrB,EAASzrB,IAC9BqB,GAAAuT,OAAAC,aAAAZ,KAAA4/H,cAEA,OAAAxyI,IAqJA0xI,EAAA7xI,WAAgC9B,QAAAm0I,GAChCR,EApQA,GAsQAxG,EAAA,WACA,SAAA6H,EAAA7/H,GAEA,IADA,IAAAqE,EAAA,EACA5Y,EAAA,EAAmBA,EAAAuU,EAAAG,OAAgB1U,IACnC4Y,KAAA,EAAArE,EAAAiB,WAAAxV,GAEA,OAAA4Y,IAAA,EAEA,SAAAy7H,EAAAxuI,GACA,OAAAwiB,EAAA1lB,UAAAkD,GACA,UAAAwiB,EAAAzkB,YAAA,oCAGA,SAAA0wI,EAAAzuI,GACA,IAAAkM,OAAAC,UAAAnM,GACA,UAAAwiB,EAAAzkB,YAAA,iCAGA,SAAA2wI,EAAApI,EAAA1pG,GACA,SACA,IAAA58B,EAAA48B,EAAAM,SACA,MAAAza,EAAA3B,OAAA9gB,GACA,MAEA,MAAAyiB,EAAAzB,OAAAhhB,EAAA,aACA,OAEAwuI,EAAAxuI,GACA,IAAAkV,EAAAq5H,EAAAvuI,GACAA,EAAA48B,EAAAM,SACAsxG,EAAAxuI,GACA,IAAA2sI,EAAA3sI,EACAsmI,EAAAoG,OAAAx3H,EAAAy3H,IAGA,SAAAgC,EAAArI,EAAA1pG,GACA,SACA,IAAA58B,EAAA48B,EAAAM,SACA,MAAAza,EAAA3B,OAAA9gB,GACA,MAEA,MAAAyiB,EAAAzB,OAAAhhB,EAAA,cACA,OAEAwuI,EAAAxuI,GACA,IAAA0iE,EAAA6rE,EAAAvuI,GACAA,EAAA48B,EAAAM,SACAsxG,EAAAxuI,GACA,IAAAyiE,EAAA8rE,EAAAvuI,GAEA,GADAA,EAAA48B,EAAAM,SACAhxB,OAAAC,UAAAnM,KAAA,EAAAwiB,EAAA1lB,UAAAkD,GAAA,CACA,IAAAssI,EAAApgI,OAAAC,UAAAnM,GAAA+O,OAAAC,aAAAhP,KACAsmI,EAAAiG,WAAA7pE,EAAAD,EAAA6pE,OACO,QAAA7pH,EAAAzB,OAAAhhB,EAAA,KASP,MARAA,EAAA48B,EAAAM,SACA,IAAAK,KACA,UAAA9a,EAAAzB,OAAAhhB,EAAA,UAAAyiB,EAAA3B,OAAA9gB,GACAu9B,EAAA/tB,KAAAxP,GACAA,EAAA48B,EAAAM,SAEAopG,EAAAmG,kBAAA/pE,EAAAD,EAAAllC,IAKA,UAAA/a,EAAAzkB,YAAA,qBAEA,SAAA6wI,EAAAtI,EAAA1pG,GACA,SACA,IAAA58B,EAAA48B,EAAAM,SACA,MAAAza,EAAA3B,OAAA9gB,GACA,MAEA,MAAAyiB,EAAAzB,OAAAhhB,EAAA,cACA,OAEAwuI,EAAAxuI,GACA,IAAAkV,EAAAq5H,EAAAvuI,GACAA,EAAA48B,EAAAM,SACAuxG,EAAAzuI,GACA,IAAA2sI,EAAA3sI,EACAsmI,EAAAoG,OAAAx3H,EAAAy3H,IAGA,SAAAkC,EAAAvI,EAAA1pG,GACA,SACA,IAAA58B,EAAA48B,EAAAM,SACA,MAAAza,EAAA3B,OAAA9gB,GACA,MAEA,MAAAyiB,EAAAzB,OAAAhhB,EAAA,eACA,OAEAwuI,EAAAxuI,GACA,IAAA0iE,EAAA6rE,EAAAvuI,GACAA,EAAA48B,EAAAM,SACAsxG,EAAAxuI,GACA,IAAAyiE,EAAA8rE,EAAAvuI,GACAA,EAAA48B,EAAAM,SACAuxG,EAAAzuI,GACA,IAAAssI,EAAAtsI,EACAsmI,EAAA+F,YAAA3pE,EAAAD,EAAA6pE,IAGA,SAAAwC,EAAAxI,EAAA1pG,GACA,SACA,IAAA58B,EAAA48B,EAAAM,SACA,MAAAza,EAAA3B,OAAA9gB,GACA,MAEA,MAAAyiB,EAAAzB,OAAAhhB,EAAA,qBACA,OAEA,OAAAwiB,EAAA1lB,UAAAkD,GACA,MAEA,IAAA0iE,EAAA6rE,EAAAvuI,GAEA,GADAA,EAAA48B,EAAAM,WACA,EAAA1a,EAAA1lB,UAAAkD,GACA,MAEA,IAAAyiE,EAAA8rE,EAAAvuI,GACAsmI,EAAA8F,kBAAApsI,EAAA6O,OAAA6zD,EAAAD,GAEA,UAAAjgD,EAAAzkB,YAAA,4BAEA,SAAAgxI,EAAAzI,EAAA1pG,GACA,IAAA58B,EAAA48B,EAAAM,SACAhxB,OAAAC,UAAAnM,KACAsmI,EAAA5F,WAAA1gI,GAGA,SAAAgvI,EAAA1I,EAAA1pG,GACA,IAAA58B,EAAA48B,EAAAM,UACA,EAAAza,EAAA1B,QAAA/gB,KAAA,EAAAwiB,EAAA1lB,UAAAkD,EAAAvF,QACA6rI,EAAA7rI,KAAAuF,EAAAvF,MAGA,SAAAw0I,EAAA3I,EAAA1pG,EAAAm6F,EAAA4P,GACA,IAAAuI,EACAC,EACAC,EAAA,QACA,IACA,IAAApvI,EAAA48B,EAAAM,SACA,MAAAza,EAAA3B,OAAA9gB,GACA,MACS,MAAAyiB,EAAA1B,QAAA/gB,GACT,UAAAA,EAAAvF,KACAs0I,EAAAzI,EAAA1pG,GACW,aAAA58B,EAAAvF,MACXu0I,EAAA1I,EAAA1pG,GAEAsyG,EAAAlvI,OACS,MAAAyiB,EAAAzB,OAAAhhB,GACT,OAAAA,EAAAme,KACA,cACA,MAAAixH,EACA,eACA,EAAA3sH,EAAA1B,QAAAmuH,KACAC,EAAAD,EAAAz0I,MAEA,MACA,0BACAq0I,EAAAxI,EAAA1pG,GACA,MACA,kBACA8xG,EAAApI,EAAA1pG,GACA,MACA,mBACAgyG,EAAAtI,EAAA1pG,GACA,MACA,mBACA+xG,EAAArI,EAAA1pG,GACA,MACA,oBACAiyG,EAAAvI,EAAA1pG,GACA,OAGO,MAAAjvB,GACP,GAAAA,aAAA6U,EAAA5jB,qBACA,MAAA+O,GAEA,EAAA6U,EAAA7mB,MAAA,sBAAAgS,GACA,SAMA,OAHAg5H,GAAAwI,IACAxI,EAAAwI,GAEAxI,EACA0I,EAAA/I,EAAAvP,EAAA4P,GAEA5uH,QAAAC,QAAAsuH,GAEA,SAAA+I,EAAA/I,EAAAvP,EAAA4P,GACA,OAAA2I,EAAA3I,EAAA5P,GAAA/7G,KAAA,SAAAu0H,GAEA,GADAjJ,EAAAK,QAAA4I,EACA,IAAAjJ,EAAA6F,mBAAA,CAEA,IADA,IAAAqD,EAAAlJ,EAAAK,QAAAuF,gBACA/xI,EAAA,EAAuBA,EAAAq1I,EAAA3gI,OAA+B1U,IACtDmsI,EAAA4F,gBAAA/xI,GAAAq1I,EAAAr1I,GAAAmY,QAEAg0H,EAAA6F,mBAAA7F,EAAAK,QAAAwF,mBAOA,OALA7F,EAAAK,QAAA/mH,QAAA,SAAA5O,EAAAvV,GACA6qI,EAAAsG,SAAA57H,IACAs1H,EAAAoG,OAAA17H,EAAAs1H,EAAAK,QAAA54H,OAAAiD,MAGAs1H,IAGA,SAAAgJ,EAAA70I,EAAAs8H,GACA,qBAAAt8H,EACAsd,QAAAC,QAAA,IAAAwuH,GAAA,MACK,eAAA/rI,EACLsd,QAAAC,QAAA,IAAAwuH,GAAA,MAEAyF,EAAA/0F,SAAAz8C,GAGAs8H,EAGAA,EAAAt8H,GAAAugB,KAAA,SAAA7K,GACA,IAAAs/H,EAAAt/H,EAAAs/H,SACAxY,EAAA9mH,EAAA8mH,gBACAqP,EAAA,IAAA0F,GAAA,GACA,GAAA/U,IAAAz0G,EAAAxjB,oBAAAmH,OACA,WAAA+mI,GAAA3zI,QAAAk2I,EAAAnJ,EAAA,SAAAK,GACA,OAAA0I,EAAA/I,EAAAvP,EAAA4P,KAGA,GAAA1P,IAAAz0G,EAAAxjB,oBAAAmB,KAAA,CACA,IAAAy8B,EAAA,IAAA8b,EAAAxc,MAAA,IAAAC,EAAApa,OAAA0tH,IACA,OAAAR,EAAA3I,EAAA1pG,EAAAm6F,EAAA,MAEA,OAAAh/G,QAAAE,OAAA,IAAAzL,MAAA,sEAfAuL,QAAAE,OAAA,IAAAzL,MAAA,+CAHAuL,QAAAE,OAAA,IAAAzL,MAAA,sBAAA/R,IAqBA,OACAuT,OAAA,SAAAmZ,GACA,IAAA6/B,EAAA7/B,EAAA6/B,SACA+vE,EAAA5vG,EAAA4vG,iBACA4P,EAAAx/G,EAAAw/G,QACA,MAAAlkH,EAAA1B,QAAAimC,GACA,OAAAsoF,EAAAtoF,EAAAvsD,KAAAs8H,GACO,MAAAt0G,EAAArB,UAAA4lC,GAAA,CACP,IAAAs/E,EAAA,IAAA0F,EACApvG,EAAA,IAAA8b,EAAAxc,MAAA8qB,GACA,OAAAioF,EAAA3I,EAAA1pG,EAAAm6F,EAAA4P,GAAA3rH,KAAA,SAAA00H,GACA,OAAAA,EAAAzC,eACAqC,EAAAI,EAAAj1I,KAAAs8H,GAEA2Y,IAGA,OAAA33H,QAAAE,OAAA,IAAAzL,MAAA,yBAlQA,GAsQA3S,EAAAmyI,OACAnyI,EAAA2sI,eACA3sI,EAAA6sI,eAIA,SAAA9sI,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAokI,YAAApkI,EAAA81I,sBAAA91I,EAAAitI,qBAAAjtI,EAAAssI,aAAAtsI,EAAA6rI,UAAA7rI,EAAA6jI,KAAA7jI,EAAA+hI,UAAA/hI,EAAA+1I,uBAAA/1I,EAAAg2I,yBAAAh2I,EAAAi2I,2BAAAlwI,EAEA,IAAA4iB,EAAAvoB,EAAA,GAEA81I,EAAA91I,EAAA,IAEAs8H,EAAAt8H,EAAA,IAEA4xE,EAAA5xE,EAAA,IAEAm8H,EAAAn8H,EAAA,IAEAk8H,EAAAl8H,EAAA,IAEA+1I,EAAA/1I,EAAA,KAEAkiC,EAAAliC,EAAA,GAEAg2I,EAAAh2I,EAAA,KAEA41I,EAAA,MACAD,EAAA,MACAM,GAAA,EACAC,EAAA,IACAL,GAAA,EACApK,GACAwC,WAAA,EACAmB,MAAA,EACA1D,SAAA,EACAyK,OAAA,EACAvK,YAAA,GACAwK,OAAA,GACAC,OAAA,MACAC,SAAA,OACAC,UAAA,QAEAC,GAAA,+zEACA,SAAAC,EAAAjkE,GACA,GAAAA,EAAAsB,YAGAtB,EAAAsB,WAAA,KAAAvrD,EAAA7iB,qBAAA,IAGA,IAAAkW,EAAA,KAAA42D,EAAAsB,WAAA,GACA25D,EAAAj7D,EAAA2C,OACA,QAAAstD,KAAAgL,EACAA,EAAAhL,IAAA7mH,EAEA42D,EAAA6E,cAAAz7D,GAEA,SAAA86H,EAAAlkE,EAAAmkE,GACA,IAAAnkE,EAAA25D,0BAGA35D,EAAAq5D,aAGA8K,IAAAnkE,EAAA+4D,mBAGA/4D,EAAAk4D,qBAAAmC,GAAA,CAGA,IAAAnC,KACAhtD,GAAA,EAAA4+C,EAAA5qF,oBACA,QAAAy7F,KAAAwJ,EAAA,CACA,IAAA1K,EAAA0K,EAAAxJ,GACAxvD,GAAA,EAAAu+C,EAAAz+C,oBAAAwuD,EAAAvuD,IACA,IAAAC,IACA+sD,EAAAyC,GAAAr4H,OAAAC,aAAA4oE,IAGAnL,EAAAk4D,UAAAkM,MAAAlM,IAEA,SAAA1G,EAAA7lH,EAAAshC,GACA,OAAAthC,GACA,YACA,iBAAAshC,EAAAl3B,EAAAtjB,SAAAqG,OAAAid,EAAAtjB,SAAAoG,MACA,mBACA,wBAAAo0C,EAAAl3B,EAAAtjB,SAAAuG,cAAA+c,EAAAtjB,SAAAsG,aACA,eACA,OAAAgd,EAAAtjB,SAAA2G,SACA,eACA,OAAA2c,EAAAtjB,SAAAwG,SACA,mBACA,OAAA8c,EAAAtjB,SAAAyG,aACA,cACA,OAAA6c,EAAAtjB,SAAA6G,QACA,YACA,OAAAyc,EAAAtjB,SAAA4G,MACA,QACA,OAAA0c,EAAAtjB,SAAA0F,SAGA,SAAAksI,EAAAr2I,EAAAk9E,GACA,QAAA/3E,IAAA+3E,EAAAl9E,GACA,OAAAA,EAEA,IAAAm9E,GAAA,EAAAu+C,EAAAz+C,oBAAAj9E,EAAAk9E,GACA,QAAAC,EACA,QAAA5mE,KAAA2mE,EACA,GAAAA,EAAA3mE,KAAA4mE,EACA,OAAA5mE,EAKA,OADA,EAAAwR,EAAArlB,MAAA,gDAAA1C,GACAA,EAEA,IAAAs2I,EAAA,WACA,SAAAA,EAAA1U,EAAAzkD,EAAA+kD,EAAAnmH,EAAAqsH,EAAAmO,EAAAn0I,EAAAo0I,GACA7iI,KAAAiuH,WACAjuH,KAAAwpE,UACAxpE,KAAAuuH,SACAvuH,KAAAoI,QACApI,KAAAy0H,UACAz0H,KAAA4iI,iBACA5iI,KAAAvR,UACAuR,KAAA6iI,WAKA,OAHAF,EAAA11I,UAAA61I,gBAAA,SAAA7U,EAAAzkD,EAAA+kD,EAAAnmH,EAAAqsH,EAAAmO,EAAAn0I,EAAAo0I,GACA,OAAA7iI,KAAAiuH,cAAAjuH,KAAAwpE,aAAAxpE,KAAAuuH,YAAAvuH,KAAAoI,WAAApI,KAAAy0H,aAAAz0H,KAAA4iI,oBAAA5iI,KAAAvR,aAAAuR,KAAA6iI,cAEAF,EAdA,GAgBA5K,EAAA,WACA,SAAAA,IACA,IAAAe,EAAA3uH,UAAA1J,OAAA,QAAAjP,IAAA2Y,UAAA,GAAAA,UAAA,MAEAnK,KAAAqQ,KAAAyoH,EAmCA,OAjCAf,EAAA9qI,WACAwT,aACA,OAAAT,KAAAqQ,KAAA5P,QAEA+Q,QAAA,SAAAzK,GACA,QAAAiyH,KAAAh5H,KAAAqQ,KACAtJ,EAAAiyH,EAAAh5H,KAAAqQ,KAAA2oH,GAAAz3H,WAAA,KAGAgQ,IAAA,SAAAxlB,GACA,YAAAyF,IAAAwO,KAAAqQ,KAAAtkB,IAEAa,IAAA,SAAAb,GACA,OAAAiU,KAAAqQ,KAAAtkB,IAEA0yI,WAAA,SAAApxI,GACA,IAAAkiB,EAAAvP,KAAAqQ,KACA,GAAAd,EAAA9O,QAAA,MACA,OAAA8O,EAAAmhC,QAAArjD,GAEA,QAAA2rI,KAAAzpH,EACA,GAAAA,EAAAypH,KAAA3rI,EACA,SAAA2rI,EAGA,UAEAyJ,MAAA,SAAAlzH,GACA,QAAAypH,KAAAzpH,EACAvP,KAAAqQ,KAAA2oH,GAAAzpH,EAAAypH,KAIAjB,EAvCA,GAyCAW,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACA54H,KAAA24H,YACA34H,KAAA44H,WA2BA,OAzBAF,EAAAzrI,WACAwT,aACA,OAAAT,KAAA44H,SAAA,EAAA54H,KAAA24H,WAEAnnH,QAAA,SAAAzK,GACA,QAAAhb,EAAAiU,KAAA24H,UAAA92H,EAAA7B,KAAA44H,SAAsD7sI,GAAA8V,EAAS9V,IAC/Dgb,EAAAhb,MAGAwlB,IAAA,SAAAxlB,GACA,OAAAiU,KAAA24H,WAAA5sI,MAAAiU,KAAA44H,UAEAhsI,IAAA,SAAAb,GACA,GAAAiU,KAAA24H,WAAA5sI,MAAAiU,KAAA44H,SACA,OAAAj4H,OAAAC,aAAA7U,IAIA0yI,WAAA,SAAAj6H,GACA,OAAA1G,OAAAC,UAAAyG,OAAAxE,KAAA24H,WAAAn0H,GAAAxE,KAAA44H,SAAAp0H,GAAA,GAEAi+H,MAAA,SAAAlzH,IACA,EAAA6E,EAAA9mB,aAAA,6BAGAorI,EA9BA,GAgCAqK,EAAA,WACA,SAAAC,EAAAviH,EAAAre,EAAA4P,GACAyO,EAAAre,GAAA4P,GAAA,MACAyO,EAAAre,EAAA,OAAA4P,EAEA,SAAAixH,EAAAxiH,EAAAre,EAAA4P,GACAyO,EAAAre,GAAA4P,GAAA,OACAyO,EAAAre,EAAA,GAAA4P,GAAA,OACAyO,EAAAre,EAAA,GAAA4P,GAAA,MACAyO,EAAAre,EAAA,OAAA4P,EAEA,SAAAkxH,EAAAziH,EAAAre,EAAAL,GACA,IAAAhW,EAAA8V,EACA,GAAAE,aAAAT,WACAmf,EAAAze,IAAAD,EAAAK,QACK,qBAAAL,EACL,IAAAhW,EAAA,EAAA8V,EAAAE,EAAAtB,OAAmC1U,EAAA8V,EAAQ9V,IAC3C00B,EAAAre,KAAA,IAAAL,EAAAR,WAAAxV,QAGA,IAAAA,EAAA,EAAA8V,EAAAE,EAAAtB,OAAmC1U,EAAA8V,EAAQ9V,IAC3C00B,EAAAre,KAAA,IAAAL,EAAAhW,GAIA,SAAAg3I,EAAAI,GACAnjI,KAAAmjI,OACAnjI,KAAAmlE,OAAA34E,OAAAoT,OAAA,MAEAmjI,EAAAK,gBAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,EACAn1I,EAAA,EACA,OAAAm1I,EAAAF,GAAAE,EACAA,IAAA,EACAn1I,IAEA,IAAAo1I,EAAAD,EAAAD,EACA,OACAn/G,MAAAq/G,EACA1wF,MAAA1kD,EACAq1I,WAAAH,EAAAD,EAAAG,IAGA,IAAAE,EAAA,GACAC,EAAA,GA4DA,OA3DAZ,EAAA91I,WACA22I,QAAA,WACA,IAAAT,EAAAnjI,KAAAmjI,KACAh+D,EAAAnlE,KAAAmlE,OACA0+D,EAAAr3I,OAAA8kB,KAAA6zD,GACA0+D,EAAAr+H,OACA,IACAzZ,EAAAiuB,EAAAy0B,EAAAx3B,EAAA6sH,EADAC,EAAAF,EAAApjI,OAEA2B,EAAAshI,EAAAK,EAAAJ,EACAK,GAAA5hI,GACA,IAAArW,EAAA,EAAiBA,EAAAg4I,EAAeh4I,IAAA,CAChCkrB,EAAAkuD,EAAA0+D,EAAA93I,IACA,IAAA+nE,GAAA78C,EAAAxW,OAAA,UACA2B,GAAA0xD,EACAkwE,EAAA5iI,KAAAgB,GAEA,IAAAg8D,EAAA,IAAA98D,WAAAc,GACA,IAAArW,EAAA,EAAiBA,EAAAg4I,EAAeh4I,IAChCkrB,EAAAkuD,EAAA0+D,EAAA93I,IACAm3I,EAAA9kE,EAAA4lE,EAAAj4I,GAAAkrB,GAEA,SAAAksH,IACAA,GAAA,EAAA/uH,EAAAxmB,UAAA,QAEAwwE,EAAA,OAAA+kE,EAAA5hI,WAAA,GACA68D,EAAA,OAAA+kE,EAAA5hI,WAAA,GACA68D,EAAA,OAAA+kE,EAAA5hI,WAAA,GACA68D,EAAA,OAAA+kE,EAAA5hI,WAAA,GACAyhI,EAAA5kE,EAAA,EAAA2lE,GACA,IAAAE,EAAAlB,EAAAK,gBAAAW,EAAA,IAKA,IAJAf,EAAA5kE,EAAA,EAAA6lE,EAAA9/G,OACA6+G,EAAA5kE,EAAA,EAAA6lE,EAAAnxF,OACAkwF,EAAA5kE,EAAA,GAAA6lE,EAAAR,YACArhI,EAAAshI,EACA33I,EAAA,EAAiBA,EAAAg4I,EAAeh4I,IAAA,CAChC+3I,EAAAD,EAAA93I,GACAqyE,EAAAh8D,GAAA,IAAA0hI,EAAAviI,WAAA,GACA68D,EAAAh8D,EAAA,OAAA0hI,EAAAviI,WAAA,GACA68D,EAAAh8D,EAAA,OAAA0hI,EAAAviI,WAAA,GACA68D,EAAAh8D,EAAA,OAAA0hI,EAAAviI,WAAA,GACA,IAAA2iI,EAAA,EACA,IAAAlqH,EAAAgqH,EAAAj4I,GAAA0iD,EAAAu1F,EAAAj4I,EAAA,GAA2DiuB,EAAAy0B,EAAQz0B,GAAA,GACnE,IAAAmqH,GAAA,EAAA/vH,EAAAnmB,YAAAmwE,EAAApkD,GACAkqH,IAAAC,IAAA,EAEAlB,EAAA7kE,EAAAh8D,EAAA,EAAA8hI,GACAjB,EAAA7kE,EAAAh8D,EAAA,EAAA4hI,EAAAj4I,IACAk3I,EAAA7kE,EAAAh8D,EAAA,GAAA+iE,EAAA2+D,GAAArjI,QACA2B,GAAAuhI,EAEA,OAAAvlE,GAEAgmE,SAAA,SAAAx3G,EAAA7qB,GACA,GAAA6qB,KAAA5sB,KAAAmlE,OACA,UAAA/mE,MAAA,SAAAwuB,EAAA,mBAEA5sB,KAAAmlE,OAAAv4C,GAAA7qB,IAGAghI,EAxGA,GA0GAxB,EAAA,IAAAnrH,YAAA,6KACAk5G,EAAA,WACA,SAAAA,EAAAjjI,EAAA+xE,EAAAC,GACA,IAAA26D,EACAh5H,KAAA3T,OACA2T,KAAAytH,WAAApvD,EAAAovD,WACAztH,KAAAqtH,YAAAhvD,EAAAgvD,YACArtH,KAAAqkI,SACArkI,KAAAskI,aAAA,EACAtkI,KAAAukI,WAAA/3I,OAAAoT,OAAA,MACAI,KAAA+5H,eAAA17D,EAAAhyB,MAAAirF,EAAA2D,OACAj7H,KAAAq3H,kBAAAh5D,EAAAhyB,MAAAirF,EAAAC,UACAv3H,KAAAg0H,eAAA31D,EAAAhyB,MAAAirF,EAAAwC,YACA,IAAA9vH,EAAAq0D,EAAAr0D,KACAshC,EAAA+yB,EAAA/yB,QAkBA,GAjBAtrC,KAAAgK,OACAhK,KAAAsrC,UACAtrC,KAAAqzH,aAAArzH,KAAAg0H,YAAA,YAAAh0H,KAAA+5H,YAAA,qBACA/5H,KAAAi3H,YAAA54D,EAAA44D,YACAj3H,KAAAghE,OAAA3C,EAAA2C,OACAhhE,KAAAkjE,aAAA7E,EAAA6E,aACAljE,KAAA02H,UAAAr4D,EAAAq4D,UACA12H,KAAA07H,UAAAr9D,EAAAq9D,UACA17H,KAAAk4H,KAAA75D,EAAA65D,KACAl4H,KAAA8/D,OAAAzB,EAAAyB,OAAAiiE,EACA/hI,KAAA+/D,QAAA1B,EAAA0B,QAAAgiE,EACA/hI,KAAA2/D,WAAAtB,EAAAsB,WACA3/D,KAAAghH,KAAA3iD,EAAA2iD,KACAhhH,KAAAo3H,gBAAA/4D,EAAA+4D,gBACAp3H,KAAAu2H,UAAAl4D,EAAAk4D,UACAv2H,KAAAi4H,kBAAA55D,EAAA45D,mBAAA,IAAAF,EACA/3H,KAAAwkI,cACA,UAAAnmE,EAAAr0D,KAAA,CAaA,GANAhK,KAAA+7H,YAAA19D,EAAA09D,YACA/7H,KAAAsyH,SAAAj0D,EAAAi0D,SACAtyH,KAAAsyH,WACAtyH,KAAAw5H,SAAAn7D,EAAAm7D,SACAx5H,KAAAq5H,gBAAAh7D,EAAAg7D,kBAEAj7D,KAAA7pD,QAKA,OAJA6pD,IACA,EAAAhqD,EAAA7mB,MAAA,0BAAAlB,EAAA,MAAA2T,KAAAytH,WAAA,UAEAztH,KAAAykI,uBAGA,WAAAn5F,IACA,UAAAthC,GAAA,YAAAA,EACA06H,EAAAtmE,GACA9yB,EAAA,WAEAthC,EAAA,QAEO26H,EAAAvmE,KACP9yB,EAAA,aAGA,kBAAAA,GAAA,iBAAAthC,IACAA,EAAA,gBAEA,iBAAAA,IAEAshC,EADAs5F,EAAAxmE,GACA,eACOumE,EAAAvmE,GACP,WAEA,iBAGA,aAAA9yB,GAAA,aAAAthC,IACAA,EAAA,YAEA,IACA,IAAAjI,EACA,OAAAiI,GACA,eACA,EAAAoK,EAAArlB,MAAA,iBAAA1C,EAAA,6BACA,YACA,mBACA2T,KAAA6kI,SAAA,gBACA,IAAAtmE,EAAA,WAAAjzB,GAAA,kBAAAA,EAAA,IAAAw5F,EAAA1mE,EAAAC,GAAA,IAAA0mE,EAAA14I,EAAA+xE,EAAAC,GACAikE,EAAAjkE,GACAt8D,EAAA/B,KAAAglI,QAAA34I,EAAAkyE,EAAAF,GACA,MACA,eACA,eACA,mBACAr+D,KAAA6kI,SAAA,gBACA9iI,EAAA/B,KAAAilI,eAAA54I,EAAA+xE,EAAAC,GACAr+D,KAAAklI,aACA5C,EAAAjkE,GACAr0D,EAAA,YAEA,MACA,QACA,UAAAoK,EAAAzkB,YAAA,QAAAqa,EAAA,sBAEK,MAAA/K,GACL,KAAAA,aAAAmV,EAAAzkB,aACA,MAAAsP,EAIA,OAFA,EAAAmV,EAAA7mB,MAAA0R,QACAe,KAAAykI,uBAGAzkI,KAAA+B,OACA/B,KAAA0vH,SAAAG,EAAA7lH,EAAAshC,GACAtrC,KAAA2/D,WAAAtB,EAAAsB,WACA3/D,KAAAghE,OAAA3C,EAAA2C,OACAhhE,KAAAkjE,aAAA7E,EAAA6E,aACAljE,KAAAu2H,UAAAl4D,EAAAk4D,UACAv2H,KAAA44C,SAAAylB,EAAAoG,aACAzkE,KAAAmlI,QAAA9mE,EAAA8mE,QACAnlI,KAAAolI,SAAA,MAvFA,CACA,IAAApM,EAAA,EAAwBA,EAAA,IAAgBA,IACxCh5H,KAAAwkI,WAAAxL,GAAAh5H,KAAAi3H,YAAA+B,IAAA36D,EAAA+4D,gBAAA4B,GAEAh5H,KAAA0vH,SAAAt7G,EAAAtjB,SAAA0G,OA2FA,SAAA6tI,EAAA3wH,EAAArK,GACA,OAAAqK,GAAA,GAAArK,EAEA,SAAAi7H,EAAA9kI,EAAAitB,EAAApgC,GACAmT,EAAAitB,EAAA,GAAApgC,EACAmT,EAAAitB,GAAApgC,IAAA,EAEA,SAAAk4I,EAAA7wH,EAAArK,GACA,IAAAhd,GAAAqnB,GAAA,GAAArK,EACA,aAAAhd,IAAA,MAAAA,EAEA,SAAAm4I,EAAA9wH,EAAArK,EAAAC,EAAAC,GACA,OAAAmK,GAAA,KAAArK,GAAA,KAAAC,GAAA,GAAAC,EAEA,SAAAk7H,EAAAp4I,GACA,OAAAsT,OAAAC,aAAAvT,GAAA,UAAAA,GAEA,SAAAq4I,EAAAr4I,GAEA,OADAA,IAAA,YAAAA,GAAA,aAAAA,EACAsT,OAAAC,aAAAvT,GAAA,UAAAA,GAEA,SAAAq3I,EAAAtmE,GACA,IAAAI,EAAAJ,EAAArpD,UAAA,GACA,kBAAAX,EAAAnmB,YAAAuwE,EAAA,GAEA,SAAAmnE,EAAAvnE,GACA,IAAAI,EAAAJ,EAAArpD,UAAA,GACA,kBAAAX,EAAA7kB,eAAAivE,GAEA,SAAAmmE,EAAAvmE,GACA,IAAAI,EAAAJ,EAAArpD,UAAA,GACA,kBAAAX,EAAA7kB,eAAAivE,GAEA,SAAAomE,EAAAxmE,GACA,IAAAI,EAAAJ,EAAArpD,UAAA,GACA,YAAAypD,EAAA,SAAAA,EAAA,IAGA,MAAAA,EAAA,QAAAA,EAAA,GAKA,SAAAonE,EAAAhtF,EAAA2wB,EAAA0tD,GAGA,IAFA,IACAztD,EADAg7D,KAEAz4I,EAAA,EAAA8V,EAAA+2C,EAAAn4C,OAAyC1U,EAAA8V,EAAQ9V,IACjDy9E,GAAA,EAAAu+C,EAAAz+C,oBAAA1wB,EAAA7sD,GAAAw9E,IACA,IAAAC,IACAg7D,EAAAz4I,GAAAy9E,GAGA,QAAAwvD,KAAA/B,EACAztD,GAAA,EAAAu+C,EAAAz+C,oBAAA2tD,EAAA+B,GAAAzvD,IACA,IAAAC,IACAg7D,GAAAxL,GAAAxvD,GAGA,OAAAg7D,EAEA,SAAAqB,EAAA9lI,GACA,IAAAhU,EAAA,EACAiuB,EAAAunH,EAAA9gI,OAAA,EACA,MAAA1U,EAAAiuB,EAAA,CACA,IAAA7tB,EAAAJ,EAAAiuB,EAAA,KACAja,EAAAwhI,EAAAp1I,GACA6tB,EAAA7tB,EAAA,EAEAJ,EAAAI,EAGA,UAAAJ,GAEA,SAAA+5I,EAAAC,EAAA1nE,EAAA2nE,GACA,IAAAzP,EAAAl4D,EAAAk4D,UACA0P,KAAA5nE,EAAAhyB,MAAAirF,EAAAC,UACA2O,EAAA7nE,EAAAk4D,qBAAAmC,EACAyN,EAAA35I,OAAAoT,OAAA,MACA4kI,KACA4B,KACAC,EAAA5E,EACA,QAAA6E,KAAAP,EAAA,CACAO,GAAA,EACA,IAAAC,EAAAR,EAAAO,GACA,IAAAN,EAAAO,GAAA,CAGA,IAAAC,EAAAF,EACAG,GAAA,EACA,IAAAP,GAAA3P,EAAAhlH,IAAA+0H,GAAA,CACAG,GAAA,EACA,IAAAj9D,EAAA+sD,EAAA3pI,IAAA45I,GACA,IAAAh9D,EAAA/oE,SACA+lI,EAAAh9D,EAAAjoE,WAAA,IAGA,QAAA/P,IAAA40I,EAAAI,IAAAX,EAAAW,IAAAP,IAAAQ,EACA,GACA,GAAAJ,EAAA7E,EAAA,EACA,EAAAptH,EAAA7mB,MAAA,8CACA,MAEAi5I,EAAAH,IACAvE,GAAA,QAAA0E,IACAA,EAAA,MACAH,EAAAG,EAAA,cAESh1I,IAAA40I,EAAAI,IAETL,EAAAK,GAAAD,EACA/B,EAAA8B,GAAAE,EACAJ,EAAAI,IAAA,GAEA,OACAhC,aACAuB,kBAAAI,EACAE,6BAGA,SAAAK,EAAA/Y,EAAAgZ,GACA,IAAAzvH,KACA,QAAA8hH,KAAArL,EACAA,EAAAqL,IAAA2N,GAGAzvH,EAAA9V,MACAolI,aAAA,EAAAxN,EACAuN,QAAA5Y,EAAAqL,KAGA,IAAA9hH,EAAAzW,QACAyW,EAAA9V,MACAolI,aAAA,EACAD,QAAA,IAGArvH,EAAA1R,KAAA,SAAAb,EAAAnB,GACA,OAAAmB,EAAA6hI,aAAAhjI,EAAAgjI,eAIA,IAFA,IAAA39F,KACApoC,EAAAyW,EAAAzW,OACA5T,EAAA,EAAmBA,EAAA4T,GAAY,CAC/B,IAAA0B,EAAA+U,EAAArqB,GAAA25I,aACAI,GAAA1vH,EAAArqB,GAAA05I,WACA15I,EACA,IAAAuT,EAAA+B,EACA,MAAAtV,EAAA4T,GAAAL,EAAA,IAAA8W,EAAArqB,GAAA25I,aAIA,GAHAI,EAAAxlI,KAAA8V,EAAArqB,GAAA05I,WACAnmI,IACAvT,EACA,QAAAuT,EACA,MAGAyoC,EAAAznC,MAAAe,EAAA/B,EAAAwmI,IAEA,OAAA/9F,EAEA,SAAAg+F,EAAAlZ,EAAAgZ,GACA,IAGA56I,EAAA8V,EAAAmY,EAAAy0B,EAHA5F,EAAA69F,EAAA/Y,EAAAgZ,GACA5C,EAAAl7F,IAAApoC,OAAA,gBACAq4H,EAAA,OAAA2M,EAAA1B,GAAA,YAAA3vH,EAAAxmB,UAAA,IAAAm2I,GAEA,IAAAh4I,EAAA88C,EAAApoC,OAAA,EAA+B1U,GAAA,IAAQA,EACvC,GAAA88C,EAAA98C,GAAA,UACA,MAGA,IAAA+6I,EAAA/6I,EAAA,EACA88C,EAAA98C,GAAA,kBAAA88C,EAAA98C,GAAA,KACA88C,EAAA98C,GAAA,UAEA,IASAo4B,EAAAhiB,EAAA/B,EAAA8W,EATA6vH,EAAAl+F,EAAA98C,GAAA,aACAi7I,EAAAF,EAAAC,EACA9C,EAAAlB,EAAAK,gBAAA4D,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACA7kE,EAAA,EAEA,IAAAz2E,EAAA,EAAA8V,EAAAilI,EAA+B/6I,EAAA8V,EAAQ9V,IAAA,CACvCo4B,EAAA0kB,EAAA98C,GACAoW,EAAAgiB,EAAA,GACA/jB,EAAA+jB,EAAA,GACA8iH,GAAAxB,EAAAtjI,GACA+kI,GAAAzB,EAAArlI,GACA8W,EAAAiN,EAAA,GACA,IAAAmjH,GAAA,EACA,IAAAttH,EAAA,EAAAy0B,EAAAv3B,EAAAzW,OAAoCuZ,EAAAy0B,IAAQz0B,EAC5C,GAAA9C,EAAA8C,KAAA9C,EAAA8C,EAAA,MACAstH,GAAA,EACA,MAGA,GAAAA,EAQO,CACP,IAAAC,EAAArwH,EAAA,GACAiwH,GAAA1B,EAAA8B,EAAAplI,EAAA,OACAilI,GAAA3B,EAAA,OAXA,CACA,IAAArjI,EAAA,GAAA4kI,EAAAj7I,GAAA,EAAAy2E,EAIA,IAHAA,GAAApiE,EAAA+B,EAAA,EACAglI,GAAA1B,EAAA,GACA2B,GAAA3B,EAAArjI,GACA4X,EAAA,EAAAy0B,EAAAv3B,EAAAzW,OAAsCuZ,EAAAy0B,IAAQz0B,EAC9CqtH,GAAA5B,EAAAvuH,EAAA8C,KAQA+sH,EAAA,IACAG,GAAA,KACAD,GAAA,KACAE,GAAA,MACAC,GAAA,QAEA,IAAAI,EAAA,OAAA/B,EAAA,EAAAuB,GAAAvB,EAAAxB,EAAA9/G,OAAAshH,EAAAxB,EAAAnxF,OAAA2yF,EAAAxB,EAAAR,YAAAyD,EAAA,OAAAD,EAAAE,EAAAC,EAAAC,EACAI,EAAA,GACAC,EAAA,GACA,GAAA3D,EAAA,GAGA,IAFAjL,GAAA,aAAA1kH,EAAAxmB,UAAA,IAAAm2I,EAAA,EAAAyD,EAAA/mI,QACAgnI,EAAA,GACA17I,EAAA,EAAA8V,EAAAgnC,EAAApoC,OAAqC1U,EAAA8V,EAAQ9V,IAAA,CAC7Co4B,EAAA0kB,EAAA98C,GACAoW,EAAAgiB,EAAA,GACAjN,EAAAiN,EAAA,GACA,IAAApkB,EAAAmX,EAAA,GACA,IAAA8C,EAAA,EAAAy0B,EAAAv3B,EAAAzW,OAAsCuZ,EAAAy0B,IAAQz0B,EAC9C9C,EAAA8C,KAAA9C,EAAA8C,EAAA,OACA5Z,EAAA+jB,EAAA,GAAAnK,EAAA,EACAytH,IAAA,EAAArzH,EAAAxmB,UAAAuU,IAAA,EAAAiS,EAAAxmB,UAAAwS,IAAA,EAAAgU,EAAAxmB,UAAAmS,GACAoC,EAAA/B,EAAA,EACAL,EAAAmX,EAAA8C,IAGAytH,IAAA,EAAArzH,EAAAxmB,UAAAuU,IAAA,EAAAiS,EAAAxmB,UAAAu2B,EAAA,OAAA/P,EAAAxmB,UAAAmS,GAEA2nI,EAAA,cAAAtzH,EAAAxmB,UAAA65I,EAAAhnI,OAAA,kBAAA2T,EAAAxmB,UAAA65I,EAAAhnI,OAAA,IAEA,OAAAq4H,EAAA,MAAA2M,EAAA+B,EAAA/mI,OAAA,GAAA+mI,EAAAE,EAAAD,EAEA,SAAAE,EAAAC,GACA,IAAAv7H,EAAA,IAAA0hB,EAAApa,OAAAi0H,EAAA7lI,MACAyc,EAAAnS,EAAAoI,YACApI,EAAA4G,SAAA,IACA,IAAA40H,EAAAx7H,EAAAoI,YACA,GAAA+J,EAAA,OAAAqpH,EACA,SAEA,IAAAlP,EAAAtsH,EAAAoI,YACAmkH,EAAAvsH,EAAAoI,YACA,GAAAkkH,EAAAC,EACA,SAEAvsH,EAAA4G,SAAA,GACA,IAAA60H,EAAAz7H,EAAAoI,YACA,WAAAqzH,IAGAF,EAAA7lI,KAAA,GAAA6lI,EAAA7lI,KAAA,MACA,GAEA,SAAAgmI,EAAA1pE,EAAA2pE,EAAAC,GACAA,MACAC,WAAA,EACAC,KAAA,EACAC,KAAA,EACAtoE,OAAA,EACAC,QAAA,GAEA,IAAAsoE,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,KACAC,EAAA,EACA,GAAAV,EACA,QAAAjoI,KAAAioI,EAAA,CACAjoI,GAAA,GACA0oI,EAAA1oI,IAAA0oI,KACAA,EAAA1oI,GAEA2oI,EAAA3oI,IACA2oI,EAAA3oI,GAEA,IAAAomC,GAAA,EAAA4hF,EAAAl+C,oBAAA9pE,GACA,GAAAomC,EAAA,GACAkiG,GAAA,GAAAliG,OACS,GAAAA,EAAA,GACTmiG,GAAA,GAAAniG,EAAA,QACS,GAAAA,EAAA,GACToiG,GAAA,GAAApiG,EAAA,OACS,MAAAA,EAAA,KAGT,UAAA/xB,EAAAzkB,YAAA,6DAFA64I,GAAA,GAAAriG,EAAA,SAMAsiG,EAAA,EACAC,EAAA,IAEA,IAAA1nB,EAAA3iD,EAAA2iD,OAAA,SACAknB,EAAAD,EAAAC,YAAA,GAAA7pE,EAAAsB,YAAAvrD,EAAA7iB,sBAAA,GACAkW,EAAA42D,EAAA2B,aAAA,EAAAkoE,EAAAnG,EACA4G,EAAAV,EAAAnoE,QAAA9+D,KAAA4pB,MAAAnjB,GAAA42D,EAAAyB,QAAAkhD,EAAA,KACA4nB,EAAAX,EAAAloE,SAAA/+D,KAAA4pB,MAAAnjB,GAAA42D,EAAA0B,SAAAihD,EAAA,KACA4nB,EAAA,GAAAvqE,EAAA0B,QAAA,GAAAihD,EAAA,OACA4nB,MAEA,IAAAC,EAAAZ,EAAAE,MAAAQ,EACAG,GAAAb,EAAAG,OAAAQ,EACA,4DAAAjoI,OAAAC,aAAAy9D,EAAAs9D,WAAA,uBAAAvnH,EAAAxmB,UAAAy6I,IAAA,EAAAj0H,EAAAxmB,UAAA06I,IAAA,EAAAl0H,EAAAxmB,UAAA26I,IAAA,EAAAn0H,EAAAxmB,UAAA46I,GAAA,OAAA/C,EAAApnE,EAAAy9D,YAAA,KAAA2J,EAAAgD,GAAApqE,EAAAs6D,WAAA8M,EAAAiD,GAAArqE,EAAAu6D,UAAA6M,EAAAkD,GAAAlD,EAAAmD,GAAA,MAAAnD,EAAAoD,GAAApD,EAAAqD,GAAA,mBAAArD,EAAApnE,EAAAu9D,SAAA6J,EAAApnE,EAAAw9D,WAAA4J,EAAA,GAAAA,EAAAgD,GAAApqE,EAAAs6D,WAAA,MAEA,SAAAoQ,EAAA1qE,GACA,IAAA2qE,EAAAhoI,KAAAkgB,MAAAm9C,EAAAy9D,YAAA96H,KAAAulB,IAAA,OACA,mBAAAnS,EAAAxmB,UAAAo7I,GAAA,cAAA50H,EAAAxmB,UAAAywE,EAAAs9D,YAAA,mCAEA,SAAAsN,EAAA58I,EAAAkzC,GACAA,IACAA,WAEA,IAEAxzC,EAAA8V,EAAAmY,EAAAy0B,EAAAnuC,EAFA4+D,GAAA3/B,EAAA,0BAAAA,EAAA,OAAAlzC,EAAAkzC,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,OAAAlzC,EAAAkzC,EAAA,sBAAAA,EAAA,UAAAA,EAAA,iBAAAA,EAAA,iBAAAA,EAAA,kBACA2pG,KAEA,IAAAn9I,EAAA,EAAA8V,EAAAq9D,EAAAz+D,OAAoC1U,EAAA8V,EAAQ9V,IAAA,CAC5CuU,EAAAi/B,EAAA,GAAAxzC,IAAAmzE,EAAAnzE,GACA,IAAAo9I,KACA,IAAAnvH,EAAA,EAAAy0B,EAAAnuC,EAAAG,OAAkCuZ,EAAAy0B,EAAQz0B,IAC1CmvH,EAAA/nI,KAAAqkI,EAAAnlI,EAAAiB,WAAAyY,KAEAkvH,EAAA9nI,KAAA+nI,EAAA9nI,KAAA,KAEA,IAAA8rC,GAAA+xB,EAAAgqE,GACAE,GAAA,aACAC,GAAA,cACAC,GAAA,cACAC,EAAArqE,EAAAz+D,OAAA2oI,EAAA3oI,OACA+oI,EAAA,OAAA/D,EAAA8D,GAAA9D,EAAA,GAAA8D,EAAA,GACAE,EAAA,EACA,IAAA19I,EAAA,EAAA8V,EAAAunI,EAAA3oI,OAAsC1U,EAAA8V,EAAQ9V,IAAA,CAC9C,IAAA29I,EAAAv8F,EAAAphD,GACA,IAAAiuB,EAAA,EAAAy0B,EAAAi7F,EAAAjpI,OAAmCuZ,EAAAy0B,EAAQz0B,IAAA,CAC3C1Z,EAAAopI,EAAA1vH,GACA,IAAA2vH,EAAAP,EAAAr9I,GAAAs9I,EAAAt9I,GAAAu9I,EAAAv9I,GAAA05I,EAAAzrH,GAAAyrH,EAAAnlI,EAAAG,QAAAglI,EAAAgE,GACAD,GAAAG,EACAF,GAAAnpI,EAAAG,QAIA,OADA+oI,GAAAtqE,EAAA79D,KAAA,IAAA6nI,EAAA7nI,KAAA,IACAmoI,EAo1CA,OAxrDAla,EAAAC,UAAA,WACA,IAAAqa,EAAA,EACA,kBACA,OAAAjpI,OAAAipI,MAHA,GAsWAta,EAAAriI,WACAZ,KAAA,KACAsS,KAAA,KACAkmI,SAAA,KACAjsF,SAAA,KACAs1E,eACA,IAAAA,EAAA0T,EAAAiI,oBAAAjqI,OAAAI,KAAA0hI,GACA,SAAAttH,EAAAvmB,QAAAmS,KAAA,WAAAkuH,IAEAiO,WAAA,WACA,IAAAp6H,KACA,QAAAhW,KAAAiU,KACAA,KAAA9S,eAAAnB,KACAgW,EAAAhW,GAAAiU,KAAAjU,IAGA,OAAAgW,GAEA0iI,qBAAA,WACA,IAGAzL,EAAAxvD,EAHA99D,EAAA1L,KAEAA,KAAAskI,aAAA,EAEA,IAAAj4I,EAAA2T,KAAA3T,KACA2d,EAAAhK,KAAAgK,KACAshC,EAAAtrC,KAAAsrC,QACA6hF,EAAA9gI,EAAAkU,QAAA,aACA25H,GAAA,EAAAlS,EAAA7+C,iBACA2gE,GAAA,EAAA9hB,EAAA9+C,oBACA6gE,IAAA7P,EAAA/M,OAAA2c,EAAA3c,KAAA+M,EAAA4P,EAAA3c,KAMA,GALAA,EAAA+M,EAAA/M,IAAA2c,EAAA3c,MACAntH,KAAA0sC,MAAA,IAAAygF,EAAA5xC,OAAA,UACAv7E,KAAA2sC,QAAA,IAAAwgF,EAAA5xC,OAAA,mBAAA4xC,EAAA5xC,OAAA,YACAv7E,KAAAi5C,OAAA,IAAA5sD,EAAAkvF,OAAA,UACAv7E,KAAAgqI,UAAAx9I,OAAA8kB,KAAAtR,KAAAghE,QAAAvgE,OAAA,EACAspI,GAAA,iBAAA//H,GAAA,IAAAhK,KAAA+7H,YAAArrF,QAAA,cACA,IAAAu5F,GAAA,EAAAjiB,EAAAj/C,+BACAx5D,KACA,IAAAypH,KAAAiR,EACA16H,GAAAypH,GAAAiR,EAAAjR,GAEA,mBAAA56F,KAAA/xC,GAAA,CACA,IAAA69I,GAAA,EAAAliB,EAAAl/C,wCACA,IAAAkwD,KAAAkR,EACA36H,GAAAypH,GAAAkR,EAAAlR,QAES,cAAA56F,KAAA/xC,GAAA,CACT,IAAA89I,GAAA,EAAAniB,EAAAn/C,qCACA,IAAAmwD,KAAAmR,EACA56H,GAAAypH,GAAAmR,EAAAnR,GAGA,IAAAkN,EAAAlmI,KAAAu2H,qBAAAmC,EACAwN,GACAlmI,KAAAu2H,UAAA/kH,QAAA,SAAAwnH,EAAAoR,GACA76H,GAAAypH,GAAAoR,IAGApqI,KAAAwkI,WAAAj1H,EACAvP,KAAAu2H,UAAA,IAAAwB,EAAAxoH,QACO,aAAA6uB,KAAA+uF,GACPntH,KAAAwkI,WAAAoB,EAAAnoE,EAAAzxC,mBAAA,EAAAm8F,EAAA5qF,oBAAAv9B,KAAAi3H,kBACO,eAAA74F,KAAA+uF,GACP,aAAA/uF,KAAA/xC,KACA,EAAA+nB,EAAA7mB,MAAA,8DAEAyS,KAAAwkI,WAAAoB,EAAAnoE,EAAAxxC,sBAAA,EAAAk8F,EAAA3qF,4BAAAx9B,KAAAi3H,kBACO,GAAA8S,EACP/pI,KAAAwkI,WAAAoB,EAAA5lI,KAAAo3H,iBAAA,EAAAjP,EAAA5qF,oBAAAv9B,KAAAi3H,iBACO,CACP,IAAA1tD,GAAA,EAAA4+C,EAAA5qF,oBACAv9B,KAAAu2H,UAAA/kH,QAAA,SAAAwnH,EAAAoR,GACA,IAAA1+H,EAAAgrH,UAAA,CACA,IAAAoB,EAAApsH,EAAAurH,YAAA+B,IAAAttH,EAAA0rH,gBAAA4B,GACAxvD,GAAA,EAAAu+C,EAAAz+C,oBAAAwuD,EAAAvuD,IACA,IAAAC,IACA4gE,EAAA5gE,GAGA99D,EAAA84H,WAAAxL,GAAAoR,IAGApqI,KAAAytH,WAAAN,EAAAnuG,MAAA,QACAhf,KAAAolI,SAAA,EACAplI,KAAA0vH,SAAAG,EAAA7lH,EAAAshC,IAEA25F,eAAA,SAAA54I,EAAAsS,EAAA0/D,GACA,IAAAgsE,GAAA,mGACA,SAAAC,EAAAlsE,EAAA2lE,GACA,IAAA5+D,EAAA34E,OAAAoT,OAAA,MACAulE,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACA,QAAAp5E,EAAA,EAAuBA,EAAAg4I,EAAeh4I,IAAA,CACtC,IAAAkrB,EAAAszH,EAAA5rI,GACA0rI,EAAAvhG,SAAA7xB,EAAA2V,OAGA,IAAA3V,EAAAxW,SAGA0kE,EAAAluD,EAAA2V,KAAA3V,IAEA,OAAAkuD,EAEA,SAAAolE,EAAAnsE,GACA,IAAAxxC,GAAA,EAAAxY,EAAA7kB,eAAA6uE,EAAAnrD,SAAA,IACAixH,EAAA9lE,EAAAzpD,aAAA,EACAvS,EAAAg8D,EAAAzpD,aAAA,EACAlU,EAAA29D,EAAAzpD,aAAA,EACA61H,EAAApsE,EAAAt8D,IACAs8D,EAAAt8D,IAAAs8D,EAAAj8D,MAAAi8D,EAAAj8D,MAAA,EACAi8D,EAAAppD,KAAA5S,GACA,IAAAL,EAAAq8D,EAAAnrD,SAAAxS,GAMA,OALA29D,EAAAt8D,IAAA0oI,EACA,SAAA59G,IACA7qB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,MACAA,EAAA,UAGA6qB,MACAs3G,WACAzjI,SACA2B,SACAL,QAGA,SAAA0oI,EAAAC,GACA,OACAlsH,SAAA,EAAApK,EAAA7kB,eAAAm7I,EAAAz3H,SAAA,IACA8wH,UAAA2G,EAAAj2H,YACA+uH,YAAAkH,EAAAj2H,YACAk2H,cAAAD,EAAAj2H,YACAgvH,WAAAiH,EAAAj2H,aAGA,SAAAm2H,EAAAC,GACA,IAAAC,GAAA,EAAA12H,EAAA7kB,eAAAs7I,EAAA53H,SAAA,KACA,EAAAmB,EAAA5kB,QAAA,SAAAs7I,EAAA,uCAKA,IAJA,IAAAC,EAAAF,EAAAp2H,YACAu2H,EAAAH,EAAAp2H,YACAw2H,EAAAJ,EAAAl2H,aAAA,EACAu2H,KACAn/I,EAAA,EAAuBA,EAAAk/I,EAAcl/I,IACrCm/I,EAAA9pI,KAAAypI,EAAAl2H,aAAA,GAEA,IAAA6pD,GACAssE,SACAC,eACAC,eACAC,WACAC,eAEA,OAAAH,GACA,OACA,OAAAvsE,EACA,OAIA,OAHAA,EAAA2sE,QAAAN,EAAAl2H,aAAA,EACA6pD,EAAA4sE,WAAAP,EAAAl2H,aAAA,EACA6pD,EAAA6sE,WAAAR,EAAAl2H,aAAA,EACA6pD,EAEA,UAAApqD,EAAAzkB,YAAA,6CAAAo7I,EAAA,KAEA,SAAAO,EAAAT,EAAA1d,GAKA,IAJA,IAAAoe,EAAAX,EAAAC,GACAI,EAAAM,EAAAN,SACAC,EAAAK,EAAAL,YAEAn/I,EAAA,EAAuBA,EAAAk/I,EAAcl/I,IAAA,CACrC8+I,EAAA/oI,KAAA+oI,EAAA1oI,OAAA,GAAA+oI,EAAAn/I,GACA,IAAAy/I,EAAAf,EAAAI,GACAY,EAAAnB,EAAAO,EAAAW,EAAAzH,WACA,IAAA0H,EAAA,QACA,UAAAr3H,EAAAzkB,YAAA,yDAGA,IADA,IAAA65I,EAAAkC,EAAAD,EAAA,SACAzxH,EAAA,EAAAy0B,EAAA+6F,EAAA/oI,OAAgDuZ,EAAAy0B,EAAQz0B,IACxD,QAAApB,EAAA,EAAAqB,EAAAuvH,EAAAxvH,GAAAvZ,OAAqDmY,EAAAqB,EAAQrB,IAAA,CAC7D,IAAA+yH,EAAAnC,EAAAxvH,GAAApB,GACA,GAAA+yH,KAAAprI,QAAA,YAAA4sH,EACA,OACA3uD,OAAAgtE,EACArmE,OAAAsmE,IAMA,UAAAr3H,EAAAzkB,YAAA,yCAAAw9H,EAAA,WAEA,SAAAye,EAAA9S,EAAAn6H,EAAA04H,EAAAK,GACA,IAAAoB,EAEA,OADA,EAAA1kH,EAAA7mB,MAAA,6BAEAs+I,YAAA,EACAC,YAAA,EACAC,YACAC,cAAA,GAGA,IAAAv9B,EACAtsG,GAAAxD,EAAAwD,MAAAxD,EAAAwD,MAAA,GAAA22H,EAAA12H,OACAzD,EAAAmD,IAAAK,EACAxD,EAAA8V,YAIA,IAHA,IACAw3H,EADAlI,EAAAplI,EAAA8V,YAEAy3H,GAAA,EACAngJ,EAAA,EAAuBA,EAAAg4I,EAAeh4I,IAAA,CACtC,IAAA8/I,EAAAltI,EAAA8V,YACAq3H,EAAAntI,EAAA8V,YACArS,EAAAzD,EAAAgW,aAAA,EACAw3H,GAAA,EACA,KAAAF,KAAAJ,gBAAAI,EAAAH,kBAGA,IAAAD,GAAA,IAAAC,EACAK,GAAA,EACW,IAAAN,GAAA,IAAAC,EACXK,GAAA,EACW,IAAAN,GAAA,IAAAC,IAAApU,GAAAuU,EAKA5U,GAAA,IAAAwU,GAAA,IAAAC,IACXK,GAAA,EACAD,GAAA,IANAC,GAAA,EACA9U,IACA6U,GAAA,IAMAC,IACAF,GACAJ,aACAC,aACA1pI,WAGA8pI,GACA,MAMA,GAHAD,IACAttI,EAAAmD,IAAAK,EAAA8pI,EAAA7pI,SAEA6pI,IAAA,IAAAttI,EAAAkW,WAEA,OADA,EAAAT,EAAA7mB,MAAA,2CAEAs+I,YAAA,EACAC,YAAA,EACAC,YACAC,cAAA,GAGA,IAAA7nE,EAAAxlE,EAAA8V,YACA9V,EAAA8V,YACA9V,EAAA8V,YACA,IAEAuF,EAAAusH,EAFAyF,GAAA,EACAD,KAEA,OAAA5nE,EAAA,CACA,IAAAnqD,EAAA,EAAqBA,EAAA,IAASA,IAAA,CAC9B,IAAAyT,EAAA9uB,EAAA6V,UACAiZ,GAGAs+G,EAAA3qI,MACA43H,SAAAh/G,EACAusH,QAAA94G,IAGAu+G,GAAA,OACS,OAAA7nE,EAAA,CACT,IAAA6iE,EAAAroI,EAAA8V,aAAA,EACA9V,EAAAsU,SAAA,GACA,IAAAm5H,EACA59B,KACA,IAAA49B,EAAA,EAA4BA,EAAApF,EAAqBoF,IACjD59B,EAAAptG,MAA2BhB,IAAAzB,EAAA8V,cAG3B,IADA9V,EAAA8V,YACA23H,EAAA,EAA4BA,EAAApF,EAAqBoF,IACjD59B,EAAA49B,GAAAjqI,MAAAxD,EAAA8V,YAEA,IAAA23H,EAAA,EAA4BA,EAAApF,EAAqBoF,IACjD59B,EAAA49B,GAAA9kF,MAAA3oD,EAAA8V,YAEA,IAAA43H,EAAA,EACA,IAAAD,EAAA,EAA4BA,EAAApF,EAAqBoF,IAAA,CACjD39B,EAAAD,EAAA49B,GACA,IAAAE,EAAA3tI,EAAA8V,YACA,GAAA63H,EAAA,CAIA,IAAAC,GAAAD,GAAA,IAAAtF,EAAAoF,GACA39B,EAAA89B,cACAF,EAAArrI,KAAAqD,IAAAgoI,EAAAE,EAAA99B,EAAAruG,IAAAquG,EAAAtsG,MAAA,QALAssG,EAAA89B,aAAA,EAOA,IAAA5qE,KACA,IAAA3nD,EAAA,EAAqBA,EAAAqyH,EAAkBryH,IACvC2nD,EAAAvgE,KAAAzC,EAAA8V,aAEA,IAAA23H,EAAA,EAA4BA,EAAApF,EAAqBoF,IAAA,CACjD39B,EAAAD,EAAA49B,GACAjqI,EAAAssG,EAAAtsG,MACA,IAAA/B,EAAAquG,EAAAruG,IACAknD,EAAAmnD,EAAAnnD,MAEA,IADAilF,EAAA99B,EAAA89B,YACAvyH,EAAA7X,EAA2B6X,GAAA5Z,EAAU4Z,IACrC,QAAAA,IAGAusH,EAAAgG,EAAA,EAAAvyH,EAAA2nD,EAAA4qE,EAAAvyH,EAAA7X,GACAokI,IAAAj/E,EAAA,MACAykF,EAAA3qI,MACA43H,SAAAh/G,EACAusH,kBAIS,QAAApiE,EAaT,OADA,EAAA/vD,EAAA7mB,MAAA,sCAAA42E,IAEA0nE,YAAA,EACAC,YAAA,EACAC,YACAC,cAAA,GAhBA,IAAA33B,EAAA11G,EAAA8V,YACAo+B,EAAAl0C,EAAA8V,YACA,IAAAuF,EAAA,EAAqBA,EAAA64B,EAAgB74B,IAAA,CACrCusH,EAAA5nI,EAAA8V,YACA,IAAAukH,EAAA3kB,EAAAr6F,EACA+xH,EAAA3qI,MACA43H,WACAuN,aAeA,IAHAwF,EAAAvmI,KAAA,SAAAb,EAAAnB,GACA,OAAAmB,EAAAq0H,SAAAx1H,EAAAw1H,WAEAjtI,EAAA,EAAmBA,EAAAggJ,EAAAtrI,OAAqB1U,IACxCggJ,EAAAhgJ,EAAA,GAAAitI,WAAA+S,EAAAhgJ,GAAAitI,WACA+S,EAAA7xG,OAAAnuC,EAAA,GACAA,KAGA,OACA8/I,WAAAI,EAAAJ,WACAC,WAAAG,EAAAH,WACAC,WACAC,gBAGA,SAAAQ,EAAA7tI,EAAA6/D,EAAAk7D,EAAAiN,GACA,GAAAnoE,EAAA,CAMA7/D,EAAAmD,KAAAnD,EAAAwD,MAAAxD,EAAAwD,MAAA,GAAAq8D,EAAAp8D,OACAzD,EAAAmD,KAAA08D,EAAA/9D,OAAA,EACA,IAAAgsI,EAAA9tI,EAAA8V,YACAg4H,EAAA9F,KACA,EAAAvyH,EAAArlB,MAAA,qBAAA09I,EAAA,+CAAA9F,EAAA,KACA8F,EAAA9F,EACAnoE,EAAAz8D,KAAA,WAAA0qI,IAAA,EACAjuE,EAAAz8D,KAAA,QAAA0qI,GAEA,IAAAC,EAAA/F,EAAA8F,EACAE,EAAAD,GAAAhT,EAAAj5H,OAAA,EAAAgsI,GAAA,GACA,GAAAE,EAAA,GACA,IAAAt/G,EAAA,IAAA/rB,WAAAo4H,EAAAj5H,OAAA,EAAAksI,GACAt/G,EAAArrB,IAAA03H,EAAA33H,MACA23H,EAAA33H,KAAAsrB,QAnBAqsG,IACAA,EAAA33H,KAAA,MAqBA,SAAA6qI,EAAAtxH,EAAAuxH,EAAAC,EAAArsH,EAAA04E,EAAA4zC,GACA,IAAAC,GACAvsI,OAAA,EACAwsI,mBAAA,GAEA,GAAAH,EAAAD,GAAA,GACA,OAAAG,EAEA,IAAAE,EAAA5xH,EAAAna,SAAA0rI,EAAAC,GACAK,EAAA5H,EAAA2H,EAAA,GAAAA,EAAA,IACA,GAAAC,EAAA,EAKA,OAJAA,GAAA,EACA7H,EAAA4H,EAAA,EAAAC,GACA1sH,EAAAze,IAAAkrI,EAAA/zC,GACA6zC,EAAAvsI,OAAAysI,EAAAzsI,OACAusI,EAEA,IAAAjhJ,EACAiuB,EAAA,GACAozH,EAAA,EACA,IAAArhJ,EAAA,EAAmBA,EAAAohJ,EAAmBphJ,IAAA,CACtC,IAAAshJ,EAAAH,EAAAlzH,IAAA,EAAAkzH,EAAAlzH,EAAA,GACAozH,EAAAC,EAAA,EACArzH,GAAA,EAEA,IAAAszH,EAAAtzH,EACAuzH,EAAAL,EAAAlzH,IAAA,EAAAkzH,EAAAlzH,EAAA,GACAgzH,EAAAC,mBAAAM,EACAvzH,GAAA,EAAAuzH,EACA,IAAAC,EAAAxzH,EACAyzH,EAAA,EACA,IAAA1hJ,EAAA,EAAmBA,EAAAqhJ,EAAgBrhJ,IAAA,CACnC,IAAA41H,EAAAurB,EAAAlzH,KACA,IAAA2nG,IACAurB,EAAAlzH,EAAA,MAAA2nG,GAEA,IAAA+rB,GAAA,EAAA/rB,EAAA,KAAAA,EAAA,QAAAA,EAAA,KAAAA,EAAA,KAEA,GADA8rB,GAAAC,EACA,EAAA/rB,EAAA,CACA,IAAAgsB,EAAAT,EAAAlzH,KACAjuB,GAAA4hJ,EACAF,GAAAE,EAAAD,GAGA,OAAAD,EACA,OAAAT,EAEA,IAAAY,EAAA5zH,EAAAyzH,EACA,OAAAG,EAAAV,EAAAzsI,OACAusI,GAEAD,GAAAQ,EAAA,GACA9sH,EAAAze,IAAAkrI,EAAA/rI,SAAA,EAAAmsI,GAAAn0C,GACA14E,EAAAze,KAAA,KAAAm3F,EAAAm0C,GACA7sH,EAAAze,IAAAkrI,EAAA/rI,SAAAqsI,EAAAI,GAAAz0C,EAAAm0C,EAAA,GACAM,GAAAL,EACAL,EAAAzsI,OAAAmtI,EAAA,IACAA,IAAA,MAEAZ,EAAAvsI,OAAAmtI,EACAZ,GAEAE,EAAAzsI,OAAAmtI,EAAA,GACAA,IAAA,KACAntH,EAAAze,IAAAkrI,EAAA/rI,SAAA,EAAAysI,GAAAz0C,GACA6zC,EAAAvsI,OAAAmtI,EACAZ,IAEAvsH,EAAAze,IAAAkrI,EAAA/zC,GACA6zC,EAAAvsI,OAAAysI,EAAAzsI,OACAusI,GAEA,SAAAa,EAAA1iF,EAAAw7E,EAAAmH,GACA,IAAA/rI,EAAAopD,EAAAppD,KACAyc,EAAAgnH,EAAAzjI,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAyc,GAAA,UACA,EAAApK,EAAArlB,MAAA,oDAAAyvB,GACAzc,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAEA,IAAAgsI,EAAA1I,EAAAtjI,EAAA,IAAAA,EAAA,KACA,GAAAgsI,EAAA,GAAAA,EAAA,IACA,EAAA35H,EAAArlB,MAAA,6DAAAg/I,GACA,IAAAC,EAAArH,EAAA,EACA,GAAAmH,IAAAE,GAAA,EACAjsI,EAAA,MACAA,EAAA,UACW,IAAA+rI,IAAAE,GAAA,EAIX,UAAA55H,EAAAzkB,YAAA,mCAAAo+I,GAHAhsI,EAAA,MACAA,EAAA,QAMA,SAAAksI,EAAAC,EAAAhB,EAAAvG,EAAAwH,EAAApB,EAAAqB,EAAAC,GACA,IAAAC,EAAAC,EAAAC,EACAL,GACAG,EAAA,EACAC,EAAA,SAAAxsI,EAAAK,GACA,OAAAL,EAAAK,IAAA,GAAAL,EAAAK,EAAA,OAAAL,EAAAK,EAAA,MAAAL,EAAAK,EAAA,IAEAosI,EAAA,SAAAzsI,EAAAK,EAAA/U,GACA0U,EAAAK,GAAA/U,IAAA,OACA0U,EAAAK,EAAA,GAAA/U,GAAA,OACA0U,EAAAK,EAAA,GAAA/U,GAAA,MACA0U,EAAAK,EAAA,OAAA/U,KAGAihJ,EAAA,EACAC,EAAA,SAAAxsI,EAAAK,GACA,OAAAL,EAAAK,IAAA,EAAAL,EAAAK,EAAA,OAEAosI,EAAA,SAAAzsI,EAAAK,EAAA/U,GACA0U,EAAAK,GAAA/U,GAAA,MACA0U,EAAAK,EAAA,GAAA/U,GAAA,QAGA,IAAAohJ,EAAAP,EAAAnsI,KACA2sI,EAAAJ,GAAA,EAAA3H,GACA8H,EAAAhuI,SAAAiuI,IACAD,EAAA,IAAAntI,WAAAotI,GACAD,EAAAzsI,IAAAksI,EAAAnsI,KAAAZ,SAAA,EAAAutI,IACAR,EAAAnsI,KAAA0sI,GAEA,IAOA1iJ,EAAAiuB,EAPA20H,EAAAzB,EAAAnrI,KACA6sI,EAAAD,EAAAluI,OACAouI,EAAA,IAAAvtI,WAAAstI,GACA93B,EAAAy3B,EAAAE,EAAA,GACAK,EAAA,EACA9I,EAAAx5I,OAAAoT,OAAA,MACA4uI,EAAAC,EAAA,EAAAK,GAEA,IAAAC,EAAAX,EAAAzH,EAAA,EAAAA,EACA,IAAA56I,EAAA,EAAAiuB,EAAAs0H,EAAiCviJ,EAAAgjJ,EAAehjJ,IAAAiuB,GAAAs0H,EAAA,CAChD,IAAAzzB,EAAA0zB,EAAAE,EAAAz0H,GACA,IAAA6gG,IACAA,EAAA/D,GAEA+D,EAAA+zB,MAAA,QAAA/zB,IACAA,EAAA+zB,GAEA/zB,EAAA+zB,IACA93B,EAAA+D,GAEA,IAAAmyB,EAAAJ,EAAA+B,EAAA73B,EAAA+D,EAAAg0B,EAAAC,EAAA/B,GACA92H,EAAA+2H,EAAAvsI,OACA,IAAAwV,IACA+vH,EAAAj6I,IAAA,GAEAihJ,EAAAC,mBAAAoB,IACAA,EAAArB,EAAAC,oBAEA6B,GAAA74H,EACAu4H,EAAAC,EAAAz0H,EAAA80H,GACAh4B,EAAA+D,EAEA,OAAAi0B,EAAA,CACA,IAAAE,EAAA,IAAA1tI,YAAA,mCACA,IAAAvV,EAAA,EAAAiuB,EAAAs0H,EAAmCviJ,EAAA46I,EAAe56I,IAAAiuB,GAAAs0H,EAClDE,EAAAC,EAAAz0H,EAAAg1H,EAAAvuI,QAEAysI,EAAAnrI,KAAAitI,OACS,GAAAZ,EAAA,CACT,IAAAa,EAAAV,EAAAE,EAAAH,GACAO,EAAApuI,OAAAwuI,EAAAH,EACA5B,EAAAnrI,KAAA8sI,EAAA1tI,SAAA,EAAA8tI,EAAAH,IAEA5B,EAAAnrI,KAAA,IAAAT,WAAA2tI,EAAAH,GACA5B,EAAAnrI,KAAAC,IAAA6sI,EAAA1tI,SAAA,EAAA2tI,KAEA5B,EAAAnrI,KAAAC,IAAA6sI,EAAA1tI,SAAA,EAAA8tI,GAAAH,GACAN,EAAAN,EAAAnsI,KAAA0sI,EAAAhuI,OAAA6tI,EAAAQ,EAAAG,QAEA/B,EAAAnrI,KAAA8sI,EAAA1tI,SAAA,EAAA2tI,GAEA,OACA9I,gBACAqI,yBAGA,SAAAa,EAAAC,EAAA9wE,EAAA+wE,GACA,IAAAjtI,GAAAxD,EAAAwD,MAAAxD,EAAAwD,MAAA,GAAAgtI,EAAA/sI,OACAzD,EAAAmD,IAAAK,EACA,IAIAktI,EAJA5uI,EAAA0uI,EAAA1uI,OACAL,EAAA+B,EAAA1B,EACA+d,EAAA7f,EAAAgW,WACAhW,EAAAsU,SAAA,IAEA,IACAlnB,EADA22E,GAAA,EAEA,OAAAlkD,GACA,WACA6wH,EAAAhN,EACA,MACA,YACA,IAAAsE,EAAAhoI,EAAA8V,YACA,GAAAkyH,IAAAyI,EAAA,CACA1sE,GAAA,EACA,MAEA,IAAA4sE,KACA,IAAAvjJ,EAAA,EAAuBA,EAAA46I,IAAe56I,EAAA,CACtC,IAAA0hC,EAAA9uB,EAAA8V,YACA,GAAAgZ,GAAA,OACAi1C,GAAA,EACA,MAEA4sE,EAAAluI,KAAAqsB,GAEA,IAAAi1C,EACA,MAEA,IAAA6sE,KACAzuI,KACA,MAAAnC,EAAAmD,IAAA1B,EAAA,CACA,IAAAovI,EAAA7wI,EAAA6V,UAEA,IADA1T,EAAAL,OAAA+uI,EACAzjJ,EAAA,EAAyBA,EAAAyjJ,IAAkBzjJ,EAC3C+U,EAAA/U,GAAA4U,OAAAC,aAAAjC,EAAA6V,WAEA+6H,EAAAnuI,KAAAN,EAAAO,KAAA,KAGA,IADAguI,KACAtjJ,EAAA,EAAuBA,EAAA46I,IAAe56I,EAAA,CACtC,IAAAiuB,EAAAs1H,EAAAvjJ,GACAiuB,EAAA,IACAq1H,EAAAjuI,KAAAihI,EAAAroH,IAGAq1H,EAAAjuI,KAAAmuI,EAAAv1H,EAAA,MAEA,MACA,YACA,MACA,SACA,EAAA5F,EAAA7mB,MAAA,0CAAAixB,GACAkkD,GAAA,EACArE,EAAA+4D,kBACAiY,EAAAhxE,EAAA+4D,iBAEA,MAGA,OADA/4D,EAAAgxE,aACA3sE,EAEA,SAAAgpE,EAAAlC,GACA,IAAArnI,GAAAxD,EAAAwD,MAAAxD,EAAAwD,MAAA,GAAAqnI,EAAApnI,OACAzD,EAAAmD,IAAAK,EACA,IAAAgrC,UACA1sC,EAAA+oI,EAAA/oI,OACAL,EAAA+B,EAAA1B,EACA0jE,EAAAxlE,EAAA8V,YACAg7H,EAAA,EACA,OAAAtrE,GAAA1jE,EAAAgvI,EACA,OAAAtiG,EAEA,IAIAphD,EAAA8V,EAJA6tI,EAAA/wI,EAAA8V,YACAk7H,EAAAhxI,EAAA8V,YACAm7H,KACAC,EAAA,GAEA,IAAA9jJ,EAAA,EAAmBA,EAAA2jJ,GAAA/wI,EAAAmD,IAAA+tI,GAAAzvI,EAAwDrU,IAAA,CAC3E,IAAAuX,GACAwsI,SAAAnxI,EAAA8V,YACAmkC,SAAAj6C,EAAA8V,YACAs7H,SAAApxI,EAAA8V,YACApoB,KAAAsS,EAAA8V,YACAhU,OAAA9B,EAAA8V,YACArS,OAAAzD,EAAA8V,cAEA,IAAAnR,EAAAwsI,UAAA,IAAAxsI,EAAAs1C,UAAA,IAAAt1C,EAAAysI,UAAA,IAAAzsI,EAAAwsI,UAAA,IAAAxsI,EAAAs1C,UAAA,OAAAt1C,EAAAysI,WACAH,EAAAxuI,KAAAkC,GAGA,IAAAvX,EAAA,EAAA8V,EAAA+tI,EAAAnvI,OAAwC1U,EAAA8V,EAAQ9V,IAAA,CAChD,IAAAikJ,EAAAJ,EAAA7jJ,GACA,KAAAikJ,EAAAvvI,QAAA,IAGA,IAAAqB,EAAAK,EAAAwtI,EAAAK,EAAA5tI,OACA,KAAAN,EAAAkuI,EAAAvvI,OAAAL,GAAA,CAGAzB,EAAAmD,MACA,IAAA48D,EAAAsxE,EAAA3jJ,KACA,GAAA2jJ,EAAAp3F,SAAA,CAEA,IADA,IAAAt4C,EAAA,GACA0Z,EAAA,EAAAy0B,EAAAuhG,EAAAvvI,OAA+CuZ,EAAAy0B,EAAQz0B,GAAA,EACvD1Z,GAAAK,OAAAC,aAAAjC,EAAA8V,aAEA04B,EAAA,GAAAuxB,GAAAp+D,OAEA6sC,EAAA,GAAAuxB,IAAA,EAAAtqD,EAAA7kB,eAAAoP,EAAAsU,SAAA+8H,EAAAvvI,WAGA,OAAA0sC,EAEA,IAAA8iG,GAAA,6YACA,SAAAC,EAAAj5H,EAAAk5H,GAiBA,IAhBA,IAEAn2H,EACAntB,EACA2W,EACA4sI,EACA51H,EANAzY,EAAAkV,EAAAlV,KACAhW,EAAA,EAMAskJ,EAAA,EACAC,EAAA,EACAnyE,KACAoyE,KACAC,KACAC,EAAAN,EAAAM,4BACAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACA/uI,EAAAE,EAAAtB,OAAkC1U,EAAA8V,GAAQ,CAC1C,IAAA0uE,EAAAxuE,EAAAhW,KACA,QAAAwkF,EAEA,GADA1jF,EAAAkV,EAAAhW,KACA2kJ,GAAAE,EACA7kJ,GAAAc,OAEA,IAAAmtB,EAAA,EAAyBA,EAAAntB,EAAOmtB,IAChCmkD,EAAA/8D,KAAAW,EAAAhW,WAGW,QAAAwkF,EAEX,GADA1jF,EAAAkV,EAAAhW,KACA2kJ,GAAAE,EACA7kJ,GAAA,EAAAc,OAEA,IAAAmtB,EAAA,EAAyBA,EAAAntB,EAAOmtB,IAChCxW,EAAAzB,EAAAhW,KACAoyE,EAAA/8D,KAAAoC,GAAA,EAAAzB,EAAAhW,WAGW,cAAAwkF,GAEX,GADA1jF,EAAA0jF,EAAA,MACAmgE,GAAAE,EACA7kJ,GAAAc,OAEA,IAAAmtB,EAAA,EAAyBA,EAAAntB,EAAOmtB,IAChCmkD,EAAA/8D,KAAAW,EAAAhW,WAGW,cAAAwkF,GAEX,GADA1jF,EAAA0jF,EAAA,MACAmgE,GAAAE,EACA7kJ,GAAA,EAAAc,OAEA,IAAAmtB,EAAA,EAAyBA,EAAAntB,EAAOmtB,IAChCxW,EAAAzB,EAAAhW,KACAoyE,EAAA/8D,KAAAoC,GAAA,EAAAzB,EAAAhW,WAGW,QAAAwkF,GAAAkgE,EAuBA,QAAAlgE,GAAAkgE,GAYA,QAAAlgE,EACX,GAAAmgE,EACAA,GAAA,EACAL,EAAAtkJ,MACa,CAEb,GADAyuB,EAAA+1H,EAAA1gG,OACAr1B,EAGA,OAFA,EAAApG,EAAA7mB,MAAA,2BACA4iJ,EAAApD,YAAA,GAGAqD,EAAAI,EAAA3gG,MACA9tC,EAAAyY,EAAAzY,KACAhW,EAAAyuB,EAAAzuB,EACAokJ,EAAAU,qBAAAT,GAAAjyE,EAAA19D,OAAA+Z,EAAAs2H,cAEW,SAAAvgE,GACXmgE,GAAAE,MACA,EAAAx8H,EAAA7mB,MAAA,gCACAkjJ,GAAA,GAEAC,GAAA,EACAJ,EAAAvkJ,OACW,QAAAwkF,IACXogE,OACW,QAAApgE,EACXqgE,EAAAD,OACW,QAAApgE,EACXqgE,IAAAD,IACAC,EAAA,KAEAD,OACW,QAAApgE,IACXmgE,IAAAE,EAAA,CACA,IAAAxuI,EAAA+7D,IAAA19D,OAAA,GACA2B,EAAA,IACArW,GAAAqW,EAAA,SA/CAsuI,GAAAE,MACA,EAAAx8H,EAAA7mB,MAAA,gCACAkjJ,GAAA,GAEAC,GAAA,EACAJ,EAAAvkJ,EACAqkJ,EAAAjyE,EAAAtuB,MACAsgG,EAAAY,iBAAAX,IACAruI,OACAhW,UAhCA,IAAA2kJ,IAAAE,EAGA,GAFAR,EAAAjyE,IAAA19D,OAAA,GACA0vI,EAAAa,cAAAZ,IAAA,EACAA,KAAAD,EAAAU,qBACA1yE,EAAA19D,QAAA0vI,EAAAU,qBAAAT,QACe,GAAAA,KAAAD,EAAAY,mBAAAP,EAAA1nG,SAAAsnG,GAAA,CAQf,GAPAG,EAAAnvI,MACAW,OACAhW,IACA+kJ,SAAA3yE,EAAA19D,OAAA,IAEA+vI,EAAApvI,KAAAgvI,GACA51H,EAAA21H,EAAAY,iBAAAX,IACA51H,EAGA,OAFA,EAAApG,EAAA7mB,MAAA,uCACA4iJ,EAAApD,YAAA,GAGAhrI,EAAAyY,EAAAzY,KACAhW,EAAAyuB,EAAAzuB,EAuDA,IAAA2kJ,IAAAE,EAAA,CACA,IAAA3yE,EAAAsS,GAAA,IAAA0/D,EAAA1/D,MAAA,KAAAA,GAAA,OAAAA,GAAA,SACAA,GAAA,KAAAA,GAAA,MACA1jF,EAAAsxE,EAAAtuB,MACA1a,MAAAtoC,KACAoxE,EAAA,GAAApxE,IAGA,MAAAoxE,EAAA,GAAAE,EAAA19D,OAAA,EACA09D,EAAAtuB,MACAouB,IAEA,MAAAA,EAAA,EACAE,EAAA/8D,KAAAmgE,KACAtD,KAIAkyE,EAAAM,8BACA,IAAAx7F,GAAAlzC,GACAhW,EAAAgW,EAAAtB,QACAw0C,EAAA7zC,KAAA,IAAAE,WAAAvV,EAAAgW,EAAAtB,SAEA6vI,EAAAD,KACA,EAAAj8H,EAAA7mB,MAAA,6CACA0nD,EAAA7zC,KAAA,IAAAE,YAAA,UAEA2vI,EAAAh6H,EAAAg+B,GAEA,SAAAi8F,EAAAf,EAAAgB,GACA,IAAAhB,EAAAM,4BAAA,CAGA,GAAAN,EAAAY,iBAAAtwI,OAAA0wI,EAGA,OAFA,EAAA/8H,EAAA7mB,MAAA,iDACA4iJ,EAAApD,YAAA,GAGA,QAAA/yH,EAAA,EAAAy0B,EAAA0hG,EAAAa,cAAAvwI,OAA4DuZ,EAAAy0B,EAAQz0B,IAAA,CACpE,GAAAA,EAAAm3H,EAGA,OAFA,EAAA/8H,EAAA7mB,MAAA,4BAAAysB,QACAm2H,EAAApD,YAAA,GAGA,GAAAoD,EAAAa,cAAAh3H,KAAAm2H,EAAAY,iBAAA/2H,GAGA,OAFA,EAAA5F,EAAA7mB,MAAA,2BAAAysB,QACAm2H,EAAApD,YAAA,KAKA,SAAAkE,EAAAh6H,EAAAg+B,GACA,GAAAA,EAAAx0C,OAAA,GACA,IACAuZ,EAAAy0B,EADAx4B,EAAA,EAEA,IAAA+D,EAAA,EAAAy0B,EAAAwG,EAAAx0C,OAA0CuZ,EAAAy0B,EAAQz0B,IAClD/D,GAAAg/B,EAAAj7B,GAAAvZ,OAEAwV,IAAA,KACA,IAAAvQ,EAAA,IAAApE,WAAA2U,GACAnU,EAAA,EACA,IAAAkY,EAAA,EAAAy0B,EAAAwG,EAAAx0C,OAA0CuZ,EAAAy0B,EAAQz0B,IAClDtU,EAAA1D,IAAAizC,EAAAj7B,GAAAlY,GACAA,GAAAmzC,EAAAj7B,GAAAvZ,OAEAwW,EAAAlV,KAAA2D,EACAuR,EAAAxW,OAAAwV,GAGA,SAAAm7H,EAAAC,EAAAC,EAAAC,EAAAJ,GACA,IAAAhB,GACAY,oBACAC,iBACAH,wBACAJ,6BAAA,EACA1D,YAAA,GAWA,GATAsE,GACAnB,EAAAmB,EAAAlB,GAEAmB,GACApB,EAAAoB,EAAAnB,GAEAkB,GACAH,EAAAf,EAAAgB,GAEAI,GAAA,EAAAA,EAAA9wI,OAAA,CACA,IAAA+wI,EAAA,IAAAlwI,WAAAiwI,EAAA9wI,OAAA,GACA+wI,EAAAxvI,IAAAuvI,EAAAxvI,MACAwvI,EAAAxvI,KAAAyvI,EAEA,OAAArB,EAAApD,WAEApuI,EAAA,IAAAovB,EAAApa,OAAA,IAAArS,WAAA3C,EAAAsU,aACA,IAAAurD,OAAA,EACA2G,OAAA,EACA,GAAAwgE,EAAAhnI,GAAA,CACA,IAAA8yI,EAAAnG,EAAA3sI,EAAAqB,KAAA3T,MACAmyE,EAAAizE,EAAAjzE,OACA2G,EAAAssE,EAAAtsE,YAEA3G,EAAAisE,EAAA9rI,GACAwmE,EAAAmlE,EAAA3rI,EAAA6/D,EAAAulE,WAEA,IAAAxlE,OAAA,EACAmzE,OAAA,EACAC,GAAAxsE,EAAA,QACA,GAAAwsE,EAaO,CACP,IAAAxsE,EAAA,QACA,UAAA/wD,EAAAzkB,YAAA,sCAEAw1E,EAAA,WACA,EAAA/wD,EAAA7mB,MAAA,4DACA43E,EAAA,SACAv4C,IAAA,OACA7qB,KAAA,IAAAT,WAAA,KAGAtB,KAAAklI,YAAA,MAxBA,CACA,YAAA1mE,EAAAhgD,WAAA6/C,EAAAq4D,YAAAr4D,EAAA04D,eAAA5xD,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,QAIA,OAHAusE,EAAA,IAAA3jH,EAAApa,OAAAwxD,EAAA,QAAApjE,MACAw8D,EAAA,IAAAumE,EAAA4M,EAAArzE,GACAikE,EAAAjkE,GACAr+D,KAAAglI,QAAA34I,EAAAkyE,EAAAF,UAEA8G,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,QACAnlE,KAAAklI,YAAA,EAcA,IAAA//D,EAAA,QACA,UAAA/wD,EAAAzkB,YAAA,sCAEAgP,EAAAmD,KAAAnD,EAAAwD,OAAA,GAAAgjE,EAAA,QAAA/iE,OACA,IAAAoc,EAAA7f,EAAAgW,WACAgyH,EAAAhoI,EAAA8V,YACA08H,EAAA,EACA9C,EAAA,EACA,GAAA7vH,GAAA,OAAA2mD,EAAA,QAAA1kE,QAAA,IACA9B,EAAAmD,KAAA,EACA,IAAA8vI,EAAAjzI,EAAA8V,YACAm9H,EAAA,IACAzsE,EAAA,QAAApjE,KAAA,MACAojE,EAAA,QAAApjE,KAAA,OAEApD,EAAAmD,KAAA,EACAqvI,EAAAxyI,EAAA8V,YACA9V,EAAAmD,KAAA,EACAusI,EAAA1vI,EAAA8V,YAEA,IAAA25H,IAAA,EACA,iBAAA/vE,EAAAr0D,MAAAq0D,EAAAk4D,WAAAl4D,EAAAk4D,UAAA3pI,IAAA,UACAwhJ,IAAA,EACAzH,IACAxhE,EAAA,QAAApjE,KAAA,GAAA4kI,GAAA,EACAxhE,EAAA,QAAApjE,KAAA,OAAA4kI,GAEA,IAAAoG,GAAAqE,EAAAjsE,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAgsE,GAOA,GANApE,YACA5nE,EAAA,eACAA,EAAA,eACAA,EAAA,SAEAqnE,EAAA7tI,EAAAwmE,EAAA,QAAAA,EAAA,QAAAwhE,IACAxhE,EAAA,QACA,UAAA/wD,EAAAzkB,YAAA,sCAEAk+I,EAAA1oE,EAAA,QAAAwhE,EAAAgL,EAAAxsE,EAAA,QAAA1kE,OAAA,GACA,IAAAulI,GAAAx5I,OAAAoT,OAAA,MACA,GAAA+xI,EAAA,CACA,IAAAxD,GAAA9I,EAAAlgE,EAAA,QAAApjE,KAAA,IAAAojE,EAAA,QAAApjE,KAAA,KACA8vI,GAAA5D,EAAA9oE,EAAA,QAAAA,EAAA,QAAAwhE,EAAAwH,GAAApB,GAAAqB,GAAAC,GACArI,GAAA6L,GAAA7L,cACAxnH,GAAA,OAAA2mD,EAAA,QAAA1kE,QAAA,KACA0kE,EAAA,QAAApjE,KAAA,IAAA8vI,GAAAxD,uBAAA,EACAlpE,EAAA,QAAApjE,KAAA,QAAA8vI,GAAAxD,uBAGA,IAAAlpE,EAAA,QACA,UAAA/wD,EAAAzkB,YAAA,sCAEA,IAAAw1E,EAAA,QAAApjE,KAAA,SAAAojE,EAAA,QAAApjE,KAAA,MACAojE,EAAA,QAAApjE,KAAA,QACAojE,EAAA,QAAApjE,KAAA,SAEA,IAAA+vI,IACA5J,WAAA7C,EAAAlgE,EAAA,QAAApjE,KAAA,IAAAojE,EAAA,QAAApjE,KAAA,KACAomI,KAAA9C,EAAAlgE,EAAA,QAAApjE,KAAA,IAAAojE,EAAA,QAAApjE,KAAA,KACAqmI,KAAA7C,EAAApgE,EAAA,QAAApjE,KAAA,IAAAojE,EAAA,QAAApjE,KAAA,KACA+9D,OAAAulE,EAAAlgE,EAAA,QAAApjE,KAAA,GAAAojE,EAAA,QAAApjE,KAAA,IACAg+D,QAAAwlE,EAAApgE,EAAA,QAAApjE,KAAA,GAAAojE,EAAA,QAAApjE,KAAA,KAIA,GAFA/B,KAAA8/D,OAAAgyE,GAAAhyE,OAAAgyE,GAAA5J,WACAloI,KAAA+/D,QAAA+xE,GAAA/xE,QAAA+xE,GAAA5J,WACA/iE,EAAA,SACA,IAAAzC,GAAAwsE,EAAA/pE,EAAA,QAAA9G,EAAAsoE,GACAjkE,KACAyC,EAAA,cAGA,IACA6zD,GADA+M,MAEA,SAAAgM,GAAAxL,GACA,OAAAP,GAAAO,GAEA,GAAAloE,EAAAq4D,UAAA,CACA,IAAAK,GAAA14D,EAAA04D,gBACAib,GAAA,IAAAjb,GAAAt2H,OACA49D,EAAA65D,KAAA1mH,QAAA,SAAAwnH,EAAAr1D,GACA,GAAAA,EAAA,MACA,UAAAvvD,EAAAzkB,YAAA,6BAEA,IAAA42I,GAAA,EACAyL,GACAzL,EAAA5iE,OACWnyE,IAAAulI,GAAApzD,KACX4iE,EAAAxP,GAAApzD,IAEA4iE,GAAA,GAAAA,EAAAI,GAAAoL,GAAAxL,KACAR,GAAA/M,GAAAuN,MAGA6H,KAAA4D,IAAAjM,GAAA,KACAA,GAAA,GAAAY,EAAA,OAEO,CACP,IAAAsL,GAAArG,EAAAzmE,EAAA,QAAAxmE,EAAAqB,KAAAq3H,eAAAh5D,EAAAq5D,aACAwa,GAAAD,GAAApG,WACAsG,GAAAF,GAAAnG,WACAsG,GAAAH,GAAAlG,SACAsG,GAAAD,GAAA3xI,OACA,GAAA49D,EAAAq5D,cAAA,IAAAwa,IAAA,IAAAC,IAAA,IAAAD,IAAA,IAAAC,MAAA,IAAAD,KAAA,IAAAC,KAAA,EAAA10E,EAAAvxC,aAAAmyC,EAAA64D,kBAAA,CACA,IAAAzyD,MACA,qBAAApG,EAAA64D,kBAAA,oBAAA74D,EAAA64D,mBACAzyD,IAAA,EAAAhH,EAAAvxC,aAAAmyC,EAAA64D,mBAEA,IAAA3tD,IAAA,EAAA4+C,EAAA5qF,oBACA,IAAAy7F,GAAA,EAA4BA,GAAA,IAAgBA,KAAA,CAC5C,IAAAlB,GAAAwa,GAQA,GANAxa,GADA93H,KAAAi3H,aAAA+B,MAAAh5H,KAAAi3H,YACAj3H,KAAAi3H,YAAA+B,IACaA,MAAAv0D,IAAA,KAAAA,GAAAu0D,IACbv0D,GAAAu0D,IAEAv7D,EAAA3xC,iBAAAktG,IAEAlB,GAAA,CAIA,IAAAya,GADAD,GAAA5P,EAAA5K,GAAAvuD,IAEA,IAAA2oE,IAAA,IAAAC,GACAI,GAAAhpE,GAAA+oE,IACa,IAAAJ,IAAA,IAAAC,KACbI,GAAA90E,EAAA5xC,iBAAA6kB,QAAA4hG,KAGA,IADA,IAAA3gH,IAAA,EACA5lC,GAAA,EAA2BA,GAAAsmJ,KAAwBtmJ,GACnD,GAAAqmJ,GAAArmJ,IAAAitI,WAAAuZ,GAAA,CAGAxM,GAAA/M,IAAAoZ,GAAArmJ,IAAAw6I,QACA50G,IAAA,EACA,MAEA,IAAAA,IAAA0sC,EAAAgxE,WAAA,CACA,IAAA9I,GAAAloE,EAAAgxE,WAAA3+F,QAAAonF,KACA,IAAAyO,IAAA+L,KAAAxa,KACAyO,GAAAloE,EAAAgxE,WAAA3+F,QAAA4hG,KAEA/L,GAAA,GAAAwL,GAAAxL,MACAR,GAAA/M,IAAAuN,YAIS,OAAA2L,IAAA,IAAAC,GACT,QAAA9nG,GAAA,EAA0BA,GAAAgoG,KAAyBhoG,GACnD07F,GAAAqM,GAAA/nG,IAAA2uF,UAAAoZ,GAAA/nG,IAAAk8F,aAGA,QAAAhvF,GAAA,EAA2BA,GAAA86F,KAA0B96F,GACrDyhF,GAAAoZ,GAAA76F,IAAAyhF,SACA,IAAAkZ,IAAAlZ,IAAA,OAAAA,IAAA,QACAA,IAAA,KAEA+M,GAAA/M,IAAAoZ,GAAA76F,IAAAgvF,QAIA,IAAAR,GAAAtlI,SACAslI,GAAA,MAEA,IAAAyM,GAAA1M,EAAAC,GAAA1nE,EAAA2nE,IAkBA,GAjBAhmI,KAAAwkI,WAAAgO,GAAAhO,WACAr/D,EAAA,SACAv4C,IAAA,OACA7qB,KAAA8kI,EAAA2L,GAAAzM,kBAAAY,IAEAxhE,EAAA,SAAAwiE,EAAAxiE,EAAA,WACAA,EAAA,SACAv4C,IAAA,OACA7qB,KAAAgmI,EAAA1pE,EAAAm0E,GAAAzM,kBAAA+L,MAGA3sE,EAAA,UACAA,EAAA,SACAv4C,IAAA,OACA7qB,KAAAgnI,EAAA1qE,MAGAszE,EACA,IACAD,EAAA,IAAA3jH,EAAApa,OAAAwxD,EAAA,QAAApjE,MACA,IAAAwyB,GAAA,IAAAotG,EAAArkE,UAAAo0E,EAAArzE,EAAAqjE,GACAnjE,EAAAhqC,GAAA7R,QACA,IAAA+vH,GAAA,IAAA9Q,EAAA7kE,YAAAyB,GACA4G,EAAA,QAAApjE,KAAA0wI,GAAAhsE,UACS,MAAAxnE,IACT,EAAAmV,EAAA7mB,MAAA,0BAAA8wE,EAAAovD,YAGA,GAAAtoD,EAAA,QAKO,CACP,IAAAutE,GAAAhH,EAAAvmE,EAAA,SACAA,EAAA,QAAApjE,KAAAknI,EAAA58I,EAAAqmJ,SANAvtE,EAAA,SACAv4C,IAAA,OACA7qB,KAAAknI,EAAAjpI,KAAA3T,OAMA,IAAAsmJ,GAAA,IAAA5P,EAAAvkE,EAAAhgD,SACA,QAAAo0H,MAAAztE,EACAwtE,GAAAvO,SAAAwO,GAAAztE,EAAAytE,IAAA7wI,MAEA,OAAA4wI,GAAA/O,WAEAoB,QAAA,SAAA7X,EAAAxuH,EAAA0/D,GACAA,EAAAs9D,YAAA,EACAt9D,EAAAmkE,iBACAD,EAAAlkE,IAAAmkE,iBAEA,IAAAh9C,EAAA7mF,EAAAk0I,gBAAAx0E,GACAm0E,EAAA1M,EAAAtgD,EAAAnnB,EAAA7xE,OAAAoT,OAAA,OACAI,KAAAwkI,WAAAgO,EAAAhO,WACA,IAAAmC,EAAAhoI,EAAAgoI,UACA,SAAAmM,EAAA/M,EAAAQ,GACA,IAAAwM,EAAA,KACA,QAAA/Z,KAAA+M,EACAQ,IAAAR,EAAA/M,KACA+Z,IACAA,MAEAA,EAAA3xI,KAAA,EAAA43H,IAGA,OAAA+Z,EAEA,SAAAC,EAAAjN,EAAAQ,GACA,QAAAvN,KAAA+M,EACA,GAAAQ,IAAAR,EAAA/M,GACA,SAAAA,EAIA,OADAwZ,EAAAzM,kBAAAyM,EAAAnM,2BAAAE,EACAiM,EAAAnM,4BAEA,IAAAtlE,EAAApiE,EAAAoiE,MACA,GAAA2gE,GAAA3gE,KAAAtgE,OAAA,CACA,IAAA+iB,EAAA66C,EAAAsB,YAAAvrD,EAAA7iB,qBACAquE,EAAAjhE,EAAAs0I,aACA9N,EAAA34I,OAAAoT,OAAA,MACA,QAAA2mI,KAAAxlE,EAAA,CACAwlE,GAAA,EACA,IAAAhkE,EAAAxB,EAAAwlE,GACA2M,EAAAz1E,EAAA3xC,iBAAAy2C,EAAA,IACA4wE,EAAA11E,EAAA3xC,iBAAAy2C,EAAA,IACA6wE,EAAAxzE,EAAAlvB,QAAAwiG,GACAG,EAAAzzE,EAAAlvB,QAAAyiG,GACA,KAAAC,EAAA,GAAAC,EAAA,IAGA,IAAAC,GACArxI,EAAAsgE,EAAA,GAAA/+C,EAAA,GAAA++C,EAAA,GAAA/+C,EAAA,GAAAA,EAAA,GACA3a,EAAA05D,EAAA,GAAA/+C,EAAA,GAAA++C,EAAA,GAAA/+C,EAAA,GAAAA,EAAA,IAEAuvH,EAAAD,EAAAttD,EAAA+gD,GACA,GAAAwM,EAGA,QAAAhnJ,EAAA,EAAA8V,EAAAkxI,EAAAtyI,OAAgD1U,EAAA8V,EAAQ9V,IAAA,CACxD,IAAAitI,EAAA+Z,EAAAhnJ,GACAg6I,EAAAyM,EAAAzM,kBACAwN,EAAAP,EAAAjN,EAAAqN,GACAI,EAAAR,EAAAjN,EAAAsN,GACAlO,EAAAnM,IACAua,mBACAC,qBACAF,kBAIAj1E,EAAA8mE,UAEA,IAAA+C,EAAA,GAAA7pE,EAAAsB,YAAAvrD,EAAA7iB,sBAAA,GACAohJ,EAAA,IAAA5P,EAAA,QAyBA,OAxBA4P,EAAAvO,SAAA,OAAAzlI,EAAAoD,MACA4wI,EAAAvO,SAAA,OAAA2D,EAAA1pE,EAAAm0E,EAAAzM,oBACA4M,EAAAvO,SAAA,OAAAyC,EAAA2L,EAAAzM,kBAAAY,IACAgM,EAAAvO,SAAA,wCAAAsB,EAAAwC,GAAA,iCAAAxC,EAAArnE,EAAA0B,SAAA,KAAA2lE,EAAArnE,EAAAyB,QAAA2lE,EAAApnE,EAAAy9D,YAAA,wBACA6W,EAAAvO,SAAA,iBAAAsB,EAAArnE,EAAAyB,QAAA4lE,EAAArnE,EAAA0B,SAAA,qBAAA2lE,EAAArnE,EAAAw9D,WAAA6J,EAAA1kI,KAAAyyI,IAAAp1E,EAAAy9D,aAAAz9D,EAAAu9D,SAAA,2BAAA6J,EAAAkB,IACAgM,EAAAvO,SAAA,kBAIA,IAHA,IAAA4D,EAAArpI,EAAAqpI,YACA0L,EAAA/0I,EAAA4/D,IAAA5/D,EAAA4/D,IAAAyC,OAAA,KACA2yE,EAAA,WACA5nJ,EAAA,EAAA8V,EAAA8kI,EAAuC56I,EAAA8V,EAAQ9V,IAAA,CAC/C,IAAAqc,EAAA,EACA,GAAA4/H,EAAA,CACA,IAAAplE,EAAAolE,EAAAj8I,EAAA,GACAqc,EAAA,UAAAw6D,IAAAx6D,MAAA,OACWsrI,IACXtrI,EAAApH,KAAAkB,KAAAwxI,EAAA3nJ,IAAA,IAEA4nJ,GAAAlO,EAAAr9H,GAAAq9H,EAAA,GAEA,OAAAkO,EAdA,IAgBAhB,EAAAvO,SAAA,iBAAAqB,EAAAkB,IACAgM,EAAAvO,SAAA,OAAA6E,EAAA9b,IACAwlB,EAAAvO,SAAA,OAAA2E,EAAA1qE,IACAs0E,EAAA/O,WAEAlR,iBACA,oBAAA1yH,KACA,OAAAA,KAAA4zI,aAIA,IAFA,IACAxrI,EADAyrI,GAAA,+BAEA9nJ,EAAA,EAAA8V,EAAAgyI,EAAApzI,OAA4D1U,EAAA8V,EAAQ9V,IAAA,CACpE,IAAA+rI,EAAA+b,EAAA9nJ,GACA,GAAA+rI,KAAA93H,KAAAghE,OAAA,CACA54D,EAAApI,KAAAghE,OAAA82D,GACA,MAEA,IAAAvuD,GAAA,EAAA4+C,EAAA5qF,oBACAm3F,EAAAnrD,EAAAuuD,GACAD,EAAA,EAaA,GAZA73H,KAAA02H,WACA12H,KAAAk4H,KAAAsG,SAAA9J,KACAmD,EAAA73H,KAAAk4H,KAAAv4H,OAAA+0H,KAGAmD,GAAA73H,KAAAu2H,YACAsB,EAAA73H,KAAAu2H,UAAAkI,WAAA/J,IAEAmD,GAAA,IACAA,EAAAnD,GAEAtsH,EAAApI,KAAAghE,OAAA62D,GACAzvH,EACA,MAKA,OAFAA,KAAApI,KAAAkjE,aACAljE,KAAA4zI,aAAAxrI,EACAA,GAEA0rI,YAAA,SAAAjc,EAAAppI,GACA,IAAA+3I,EAAAp+H,EAAAw6H,EACAmR,EAAAlc,EACA73H,KAAAk4H,MAAAl4H,KAAAk4H,KAAAsG,SAAA3G,KACAkc,EAAA/zI,KAAAk4H,KAAAv4H,OAAAk4H,IAEAzvH,EAAApI,KAAAghE,OAAA+yE,GACA3rI,GAAA,EAAAgM,EAAAzlB,OAAAyZ,KAAApI,KAAAkjE,aACA,IAAAuxD,EAAAz0H,KAAAw5H,UAAAx5H,KAAAw5H,SAAAua,GACAvqE,EAAAxpE,KAAAu2H,UAAA3pI,IAAAirI,IAAA73H,KAAAi4H,kBAAArrI,IAAAirI,MACA,kBAAAruD,IACAA,EAAA7oE,OAAAC,aAAA4oE,IAEA,IAAAq5D,EAAAhL,KAAA73H,KAAAwkI,WACAgC,EAAAxmI,KAAAwkI,WAAA3M,MACA73H,KAAAskI,cACAkC,GAAA,EAAAze,EAAA1+C,yBAAAm9D,IAEAxmI,KAAAqtH,cACAuV,EAAA4D,GAEA,IAAAjY,EAAA,KACA,GAAAvuH,KAAAmlI,SAAAnlI,KAAAmlI,QAAAtN,GAAA,CACAgL,GAAA,EACA,IAAAtgE,EAAAviE,KAAAmlI,QAAAtN,GACA2O,EAAAjkE,EAAAgxE,iBACAhlB,GACAN,SAAAttH,OAAAC,aAAA2hE,EAAAixE,oBACApxI,OAAAmgE,EAAA+wE,cAGA,IAAArlB,EAAAttH,OAAAC,aAAA4lI,GACAlY,EAAAtuH,KAAAukI,WAAA1M,GAKA,OAJAvJ,KAAAwU,gBAAA7U,EAAAzkD,EAAA+kD,EAAAnmH,EAAAqsH,EAAAmO,EAAAn0I,EAAAo0I,KACAvU,EAAA,IAAAqU,EAAA1U,EAAAzkD,EAAA+kD,EAAAnmH,EAAAqsH,EAAAmO,EAAAn0I,EAAAo0I,GACA7iI,KAAAukI,WAAA1M,GAAAvJ,GAEAA,GAEAV,cAAA,SAAA3jD,GACA,IACA0jD,EAAAW,EAAAuJ,EADAmc,EAAAh0I,KAAAg0I,WAEA,GAAAA,IACArmB,EAAAqmB,EAAA/pE,GACA0jD,GACA,OAAAA,EAGAqmB,IACAA,EAAAh0I,KAAAg0I,WAAAxnJ,OAAAoT,OAAA,OAEA+tH,KACA,IAEA9rH,EAFAoyI,EAAAhqE,EACAl+E,EAAA,EAEA,GAAAiU,KAAAk4H,KAAA,CACA,IAAA/rI,EAAAK,OAAAoT,OAAA,MACA,MAAA7T,EAAAk+E,EAAAxpE,OAAA,CACAT,KAAAk4H,KAAAwG,aAAAz0D,EAAAl+E,EAAAI,GACA0rI,EAAA1rI,EAAA0rI,SACA,IAAAp3H,EAAAtU,EAAAsU,OACA1U,GAAA0U,EACA,IAAAhS,EAAA,IAAAgS,GAAA,KAAAwpE,EAAA1oE,WAAAxV,EAAA,GACAuiI,EAAAtuH,KAAA8zI,YAAAjc,EAAAppI,GACAk/H,EAAAvsH,KAAAktH,SAGA,IAAAviI,EAAA,EAAA8V,EAAAooE,EAAAxpE,OAAsC1U,EAAA8V,IAAQ9V,EAC9C8rI,EAAA5tD,EAAA1oE,WAAAxV,GACAuiI,EAAAtuH,KAAA8zI,YAAAjc,EAAA,KAAAA,GACAlK,EAAAvsH,KAAAktH,GAGA,OAAA0lB,EAAAC,GAAAtmB,IAGA2B,EAhzDA,GAkzDA9B,EAAA,WACA,SAAAA,EAAAhhH,GACAxM,KAAAwM,QACAxM,KAAAytH,WAAA,eACAztH,KAAAolI,SAAA,EAUA,OARA5X,EAAAvgI,WACA2gI,cAAA,WACA,UAEAuO,WAAA,WACA,OAAc3vH,MAAAxM,KAAAwM,SAGdghH,EAdA,GAgBA,SAAA0mB,EAAA71E,EAAAmkE,EAAA6M,GACA,IACA9I,EAAAvN,EAAAv0D,EADAshE,EAAAv5I,OAAAoT,OAAA,MAEAy3H,KAAAh5D,EAAAhyB,MAAAirF,EAAAC,UACA,GAAAl5D,EAAA64D,iBAEA,IADAzyD,GAAA,EAAAhH,EAAAvxC,aAAAmyC,EAAA64D,kBACA8B,EAAA,EAAsBA,EAAAv0D,EAAAhkE,OAAgCu4H,IACtDuN,EAAA8I,EAAA3+F,QAAA+zB,EAAAu0D,IAEA+M,EAAA/M,GADAuN,GAAA,EACAA,EAEA,OAGG,GAAAlP,EACH,IAAA2B,KAAAwJ,EACAuD,EAAA/M,GAAAwJ,EAAAxJ,QAIA,IADAv0D,EAAAhH,EAAA3xC,iBACAktG,EAAA,EAAsBA,EAAAv0D,EAAAhkE,OAAgCu4H,IACtDuN,EAAA8I,EAAA3+F,QAAA+zB,EAAAu0D,IAEA+M,EAAA/M,GADAuN,GAAA,EACAA,EAEA,EAIA,IACAh9D,EADA0tD,EAAA54D,EAAA44D,YAEA,GAAAA,EACA,IAAA+B,KAAA/B,EAAA,CACA,IAAAa,EAAAb,EAAA+B,GAEA,GADAuN,EAAA8I,EAAA3+F,QAAAonF,IACA,IAAAyO,EAAA,CACAh9D,IACAA,GAAA,EAAA4+C,EAAA5qF,qBAEA,IAAA+0G,EAAA5P,EAAA5K,EAAAvuD,GACA+oE,IAAAxa,IACAyO,EAAA8I,EAAA3+F,QAAA4hG,IAIAvM,EAAA/M,GADAuN,GAAA,EACAA,EAEA,EAIA,OAAAR,EAEA,IAAAhB,EAAA,WACA,SAAAoP,EAAAC,EAAAC,EAAAC,GACA,IAIAt6H,EAJAu6H,EAAAH,EAAA3zI,OACA+zI,EAAAH,EAAA5zI,OACAoxB,EAAA0iH,EAAAC,EACAzoJ,EAAAuoJ,EAEA3iH,GAAA,EACA,MAAA5lC,EAAA8lC,EAAA,CACA7X,EAAA,EACA,MAAAA,EAAAw6H,GAAAJ,EAAAroJ,EAAAiuB,KAAAq6H,EAAAr6H,GACAA,IAEA,GAAAA,GAAAw6H,EAAA,CACAzoJ,GAAAiuB,EACA,MAAAjuB,EAAAwoJ,IAAA,EAAAngI,EAAA3lB,SAAA2lJ,EAAAroJ,IACAA,IAEA4lC,GAAA,EACA,MAEA5lC,IAEA,OACA4lC,QACAlxB,OAAA1U,GAGA,SAAA0oJ,EAAApoI,EAAAqoI,GACA,IAEAC,EAAAC,EAAAC,EAFAC,GAAA,oBACAC,EAAA1oI,EAAAvK,IAEA,IACA6yI,EAAAtoI,EAAA4G,SAAAyhI,GACAE,EAAAD,EAAAl0I,OACK,MAAAlB,GACL,GAAAA,aAAA6U,EAAA5jB,qBACA,MAAA+O,EAGA,GAAAq1I,IAAAF,IACAG,EAAAV,EAAAQ,EAAAG,EAAAJ,EAAA,EAAAI,EAAAr0I,QACAo0I,EAAAljH,OAAAkjH,EAAAp0I,SAAAi0I,GACA,OACAroI,OAAA,IAAA0hB,EAAApa,OAAAghI,GACAl0I,OAAAi0I,IAIA,EAAAtgI,EAAA7mB,MAAA,kEACA8e,EAAAvK,IAAAizI,EACA,IACAC,EADAC,EAAA,KAEA,SACA,IAAArjH,EAAAvlB,EAAA0I,UAAAkgI,GAEA,GADAJ,EAAAV,EAAAviH,EAAAkjH,EAAA,GACA,IAAAD,EAAAp0I,OACA,MAGA,GADA4L,EAAAvK,KAAA+yI,EAAAp0I,OACAo0I,EAAAljH,MAAA,CACAqjH,EAAA3oI,EAAAvK,IAAAizI,EACA,OAIA,OADA1oI,EAAAvK,IAAAizI,EACAC,GAEA3oI,OAAA,IAAA0hB,EAAApa,OAAAtH,EAAA4G,SAAA+hI,IACAv0I,OAAAu0I,KAGA,EAAA5gI,EAAA7mB,MAAA,uEAEA8e,OAAA,IAAA0hB,EAAApa,OAAAtH,EAAA4G,SAAAyhI,IACAj0I,OAAAi0I,IAGA,SAAAQ,EAAA7oI,EAAAqoI,GACA,IAAAS,EAAA9oI,EAAA4G,WACA,OACA5G,OAAA,IAAA0hB,EAAApa,OAAAwhI,GACA10I,OAAA00I,EAAA10I,QAGA,SAAAskI,EAAA14I,EAAA+xE,EAAAC,GACA,IAAA+2E,EAAA,EACAC,EAAAh3E,EAAAk9D,QACA+Z,EAAAj3E,EAAAm9D,QACA+Z,EAAAn3E,EAAArpD,UAAAqgI,GACAI,EAAA,MAAAD,EAAA,QAAAA,EAAA,GACAC,IACAp3E,EAAAppD,KAAAogI,GACAC,EAAAE,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEA,IAAAE,EAAAhB,EAAAr2E,EAAAi3E,GACAK,EAAA,IAAA7T,EAAA8T,YAAAF,EAAAppI,QAAA,EAAAq1H,GACAgU,EAAAE,kBAAAv3E,GACAm3E,IACAD,EAAAn3E,EAAAnrD,SAAAmiI,GACAE,EAAAC,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEA,IAAAM,EAAAX,EAAA92E,EAAAk3E,GACAQ,EAAA,IAAAjU,EAAA8T,YAAAE,EAAAxpI,QAAA,EAAAq1H,GACA3/H,EAAA+zI,EAAAC,qBACA,QAAAhnJ,KAAAgT,EAAAs8D,WACAA,EAAAtvE,GAAAgT,EAAAs8D,WAAAtvE,GAEA,IAAAi5I,EAAAjmI,EAAAimI,YACAgO,EAAAh2I,KAAAi2I,oBAAAjO,GACAz/D,EAAAvoE,KAAAk2I,cAAAn0I,EAAAwmE,OACAvoE,KAAAgoI,cACAhoI,KAAA+B,KAAA/B,KAAAm2I,KAAA9pJ,EAAA2pJ,EAAAh2I,KAAAgoI,YAAAz/D,EAAAlK,GACAr+D,KAAA+gE,MAAA/gE,KAAAo2I,SAAAr0I,EAAAimI,aAgJA,OA9IAjD,EAAA93I,WACA05I,gBACA,OAAA3mI,KAAAgoI,YAAAvnI,OAAA,GAEAwyI,WAAA,WAGA,IAFA,IAAArzE,GAAA,WACAooE,EAAAhoI,KAAAgoI,YACAzB,EAAA,EAA2BA,EAAAyB,EAAAvnI,OAA8B8lI,IACzD3mE,EAAAx+D,KAAA4mI,EAAAzB,GAAAzO,WAEA,OAAAl4D,GAEAizE,gBAAA,SAAAx0E,GACA,IAEAkoE,EAFAyB,EAAAhoI,KAAAgoI,YACAqH,GAAA,WAEA,IAAA9I,EAAA,EAAuBA,EAAAyB,EAAAvnI,OAA8B8lI,IACrD8I,EAAAjuI,KAAA4mI,EAAAzB,GAAAzO,WAEA,IAAAl/E,EAAAylB,EAAAmkE,gBACA,GAAA5pF,EAAA,CACA,IAAA4pF,EAAAh2I,OAAAoT,OAAA,MACA,QAAAo5H,KAAApgF,EACA2tF,EAAA8I,EAAA3+F,QAAAkI,EAAAogF,IACAuN,GAAA,IACA/D,EAAAxJ,GAAAuN,GAIA,OAAA2N,EAAA71E,EAAAmkE,EAAA6M,IAEA+G,SAAA,SAAApO,GACA,IAAAj8I,EAAA8V,EACAsjI,KACA,IAAAp5I,EAAA,EAAA8V,EAAAmmI,EAAAvnI,OAA0C1U,EAAA8V,EAAQ9V,IAAA,CAClD,IAAA62E,EAAAolE,EAAAj8I,GACA62E,EAAAL,OACA4iE,EAAAp5I,EAAA,GAAA62E,EAAAL,MAGA,OAAA4iE,GAEA8Q,oBAAA,SAAAI,GAEA,IADA,IAAAL,KACAjqJ,EAAA,EAAA8V,EAAAw0I,EAAA51I,OAAmD1U,EAAA8V,EAAQ9V,IAC3DiqJ,EAAA50I,KAAAi1I,EAAAtqJ,GAAA62E,YAEA,OAAAozE,GAEAE,cAAA,SAAAI,GACA,IAAA9zE,EAAA,EACA/gD,EAAA60H,EAAA71I,OAEA+hE,EADA/gD,EAAA,KACA,IACOA,EAAA,MACP,KAEA,MAEA,IACA11B,EADAwqJ,KAEA,IAAAxqJ,EAAA,EAAiBA,EAAAy2E,EAAUz2E,IAC3BwqJ,EAAAn1I,MAAA,KAEA,IAAArV,EAAA,EAAiBA,EAAA01B,EAAW11B,IAC5BwqJ,EAAAn1I,KAAAk1I,EAAAvqJ,IAEA,OAAAwqJ,GAEAJ,KAAA,SAAA9pJ,EAAAshI,EAAAqa,EAAAz/D,EAAAlK,GACA,IAAAE,EAAA,IAAAojE,EAAAtkE,IACAkB,EAAAC,OAAA,IAAAmjE,EAAAvkE,UAAA,SACAmB,EAAApxB,OAAA9gD,GACA,IAAA+oD,EAAA,IAAAusF,EAAA3kE,WACA5nB,EAAAuwB,UAAA,eACAvwB,EAAAuwB,UAAA,cACAvwB,EAAAuwB,UAAA,gBACAvwB,EAAAuwB,UAAA,kBACAvwB,EAAAuwB,UAAA,cACAvwB,EAAAuwB,UAAA,iBACAvwB,EAAAuwB,UAAA,aAAAtH,EAAAsB,YACAvqB,EAAAuwB,UAAA,WAAAtH,EAAA2iD,MACA5rE,EAAAuwB,UAAA,gBACAvwB,EAAAuwB,UAAA,oBACAvwB,EAAAuwB,UAAA,gBACApH,EAAAnpB,UACA,IAAA8pB,EAAA,IAAAyiE,EAAAxkE,WACA+B,EAAAlK,IAAA,gBACAkK,EAAAlK,IAAA,uBACAkK,EAAAlK,IAAA3oE,GACA6yE,EAAAlK,IAAA3oE,GACA6yE,EAAAlK,IAAA,UACAuJ,EAAAW,UACAX,EAAAO,gBAAA,IAAA6iE,EAAAzkE,SACA,IAEAnxE,EAAA8V,EAFA4f,EAAAksG,EAAAltH,OACA+1I,GAAA,GAEA,IAAAzqJ,EAAA,EAAiBA,EAAA01B,EAAW11B,IAAA,CAC5B,IAAA0hC,EAAAk0G,EAAApkE,mBAAA7sB,QAAAs3F,EAAAj8I,GAAA+rI,YACA,IAAArqG,IACAA,EAAA,GAEA+oH,EAAAp1I,KAAAqsB,GAAA,UAAAA,GAEA8wC,EAAAqB,QAAA,IAAA+hE,EAAA1kE,YAAA,OAAAu5E,GACA,IAAAC,EAAA,IAAA9U,EAAAzkE,SAEA,IADAu5E,EAAAzhF,KAAA,SACAjpE,EAAA,EAAiBA,EAAA01B,EAAW11B,IAAA,CAC5B,IAAAuiI,EAAAX,EAAA5hI,GACA,IAAAuiI,EAAA7tH,OAIAg2I,EAAAzhF,IAAAs5D,GAHAmoB,EAAAzhF,KAAA,SAKAuJ,EAAAoC,YAAA81E,EACA,IAAA51E,EAAA,IAAA8gE,EAAA5kE,eACA8D,EAAA8E,UAAA,cACA,IAAAw7B,GAAA,qLACA,IAAAp1G,EAAA,EAAA8V,EAAAs/F,EAAA1gG,OAAqC1U,EAAA8V,EAAQ9V,IAAA,CAC7C,IAAA2qJ,EAAAv1C,EAAAp1G,GACA,GAAA2qJ,KAAAr4E,EAAAs4E,YAAA,CAGA,IAAAtpJ,EAAAgxE,EAAAs4E,YAAAD,GACA,GAAArwI,MAAA4K,QAAA5jB,GACA,QAAA2sB,EAAA3sB,EAAAoT,OAAA,EAAwCuZ,EAAA,EAAOA,IAC/C3sB,EAAA2sB,IAAA3sB,EAAA2sB,EAAA,GAGA6mD,EAAA8E,UAAA+wE,EAAArpJ,IAEAkxE,EAAAnpB,QAAAyrB,cACA,IAAA+1E,EAAA,IAAAjV,EAAAzkE,SACA,IAAAnxE,EAAA,EAAA8V,EAAA0mE,EAAA9nE,OAAoC1U,EAAA8V,EAAQ9V,IAC5C6qJ,EAAA5hF,IAAAuT,EAAAx8E,IAEA80E,EAAAC,WAAA81E,EACA,IAAAnE,EAAA,IAAA9Q,EAAA7kE,YAAAyB,GACA,OAAAk0E,EAAAhsE,YAGAs+D,EAjQA,GAmQAD,EAAA,WACA,SAAAA,EAAA1mE,EAAAC,GACAr+D,KAAAq+D,aACA,IAAA9pC,EAAA,IAAAotG,EAAArkE,UAAAc,EAAAC,EAAAqjE,GACA1hI,KAAAu+D,IAAAhqC,EAAA7R,QACA,IAAA+vH,EAAA,IAAA9Q,EAAA7kE,YAAA98D,KAAAu+D,KACAv+D,KAAA+gE,MAAA/gE,KAAAu+D,IAAAwC,MACA,IACA/gE,KAAA+B,KAAA0wI,EAAAhsE,UACK,MAAAxnE,IACL,EAAAmV,EAAA7mB,MAAA,0BAAA8wE,EAAAovD,YACAztH,KAAA+B,KAAAq8D,GAoCA,OAjCA0mE,EAAA73I,WACA05I,gBACA,OAAA3mI,KAAAu+D,IAAAoC,YAAAl/C,OAEAwxH,WAAA,WACA,OAAAjzI,KAAAu+D,IAAAqB,iBAEAizE,gBAAA,WACA,IAGA9M,EACAQ,EAJAhoE,EAAAv+D,KAAAu+D,IACAF,EAAAr+D,KAAAq+D,WACAw4E,EAAAt4E,EAAAqB,gBAGA,GAAAvB,EAAAq4D,UAAA,CAEA,GADAqP,EAAAv5I,OAAAoT,OAAA,MACA2+D,EAAAe,UACA,IAAAinE,EAAA,EAA2BA,EAAAsQ,EAAAp2I,OAA2B8lI,IAAA,CACtD,IAAA5iE,EAAAkzE,EAAAtQ,GACAvN,EAAA36D,EAAA65D,KAAAuG,WAAA96D,GACAoiE,EAAA/M,GAAAuN,OAGA,IAAAA,EAAA,EAA2BA,EAAAhoE,EAAAoC,YAAAl/C,MAAiC8kH,IAC5DR,EAAAQ,KAGA,OAAAR,EAEA,IAAAntF,EAAA2lB,EAAA3lB,SAAA2lB,EAAA3lB,kBAAA,KAEA,OADAmtF,EAAAmO,EAAA71E,EAAAzlB,EAAAi+F,GACA9Q,IAGAjB,EA/CA,IAiDA,WACA,qBAAA9iD,WAAA,UAAA5jD,KAAA4jD,UAAA80D,aACArrJ,EAAAi2I,yBAAA,IAFA,GAKA,WACA,qBAAA1/C,WAAA,kBAAA5jD,KAAA4jD,UAAA80D,aACAhV,GAAA,GAFA,GAKAr2I,EAAAi2I,wBACAj2I,EAAAg2I,2BACAh2I,EAAA+1I,yBACA/1I,EAAA+hI,YACA/hI,EAAA6jI,OACA7jI,EAAA6rI,YACA7rI,EAAAssI,eACAtsI,EAAAitI,uBACAjtI,EAAA81I,wBACA91I,EAAAokI,eAIA,SAAArkI,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA,IAAAy2E,GAAA,wgEACAE,GAAA,urEACAE,GAAA,+qCACAz4E,EAAAq4E,kBACAr4E,EAAAu4E,gBACAv4E,EAAAy4E,uBAIA,SAAA14E,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAo+I,yBAAAr4I,EAEA,IAAA4iB,EAAAvoB,EAAA,GAEA81I,EAAA91I,EAAA,IAEAs8H,EAAAt8H,EAAA,IAEA4xE,EAAA5xE,EAAA,IAEAkiC,EAAAliC,EAAA,GAEAg+I,EAAA,WACA,SAAAkN,EAAAh1I,EAAAK,GACA,OAAAL,EAAAK,IAAA,GAAAL,EAAAK,EAAA,OAAAL,EAAAK,EAAA,MAAAL,EAAAK,EAAA,GAEA,SAAA40I,EAAAj1I,EAAAK,GACA,OAAAL,EAAAK,IAAA,EAAAL,EAAAK,EAAA,GAEA,SAAA60I,EAAAl1I,EAAAI,EAAA/B,GACA,IAEAyoC,EAAA17C,EAAApB,EAFAqW,EAAA,IAAA40I,EAAAj1I,EAAAI,EAAA,GAAA40I,EAAAh1I,EAAAI,EAAA,GAAA40I,EAAAh1I,EAAAI,EAAA,IACAgiE,EAAA6yE,EAAAj1I,EAAAI,EAAAC,GAEA,OAAA+hE,EAAA,CACA6yE,EAAAj1I,EAAAI,EAAAC,EAAA,GACA,IAAA4kI,EAAAgQ,EAAAj1I,EAAAI,EAAAC,EAAA,MAGA,IAFAjV,EAAAgV,EAAAC,EAAA,GACAymC,KACA98C,EAAA,EAAiBA,EAAAi7I,EAAcj7I,IAAAoB,GAAA,EAC/B07C,EAAA98C,IAAqBqU,IAAA42I,EAAAj1I,EAAA5U,IAGrB,IADAA,GAAA,EACApB,EAAA,EAAiBA,EAAAi7I,EAAcj7I,IAAAoB,GAAA,EAC/B07C,EAAA98C,GAAAoW,MAAA60I,EAAAj1I,EAAA5U,GAEA,IAAApB,EAAA,EAAiBA,EAAAi7I,EAAcj7I,IAAAoB,GAAA,EAC/B07C,EAAA98C,GAAAmrJ,QAAAF,EAAAj1I,EAAA5U,GAEA,IAAApB,EAAA,EAAiBA,EAAAi7I,EAAcj7I,IAAAoB,GAAA,GAC/B,IAAAgqJ,EAAAH,EAAAj1I,EAAA5U,GACA,OAAAgqJ,EAAA,CAGAtuG,EAAA98C,GAAAkmD,OACA,QAAAj4B,EAAA,EAAAy0B,EAAA5F,EAAA98C,GAAAqU,IAAAyoC,EAAA98C,GAAAoW,MAAA,EAAiE6X,EAAAy0B,EAAQz0B,IACzE6uB,EAAA98C,GAAAkmD,IAAAj4B,GAAAg9H,EAAAj1I,EAAA5U,EAAAgqJ,GACAA,GAAA,GAGA,OAAAtuG,EACK,QAAAs7B,EAAA,CACL4yE,EAAAh1I,EAAAI,EAAAC,EAAA,GACA,IAAAg1I,EAAAL,EAAAh1I,EAAAI,EAAAC,EAAA,IAGA,IAFAjV,EAAAgV,EAAAC,EAAA,GACAymC,KACA98C,EAAA,EAAiBA,EAAAqrJ,EAAYrrJ,IAC7B88C,EAAAznC,MACAe,MAAA40I,EAAAh1I,EAAA5U,GACAiT,IAAA22I,EAAAh1I,EAAA5U,EAAA,GACA+pJ,QAAAH,EAAAh1I,EAAA5U,EAAA,GAAA4pJ,EAAAh1I,EAAA5U,KAEAA,GAAA,GAEA,OAAA07C,EAEA,UAAAz0B,EAAAzkB,YAAA,qBAAAw0E,GAEA,SAAAkzE,EAAAt1I,EAAAI,EAAA/B,EAAAk+D,GACA,IAAAD,KACA9pC,EAAA,IAAAotG,EAAArkE,UAAA,IAAAvvC,EAAApa,OAAA5R,EAAAI,EAAA/B,EAAA+B,GAAAk8D,EAAAC,GACAC,EAAAhqC,EAAA7R,QACA,OACAirG,OAAApvD,EAAAoC,YAAAsE,QACAsD,MAAAhK,EAAAnpB,QAAAyrB,aAAAtC,EAAAnpB,QAAAyrB,YAAAC,YAAAvC,EAAAnpB,QAAAyrB,YAAAC,WAAAmE,QACAqyE,OAAA/4E,EAAAO,iBAAAP,EAAAO,gBAAAmG,QACAsyE,aAAAh5E,EAAAe,UACAgB,SAAA/B,EAAA+B,SACAF,QAAA7B,EAAA6B,SAGA,SAAAo3E,EAAAtK,EAAAgB,EAAAC,GACA,IAAAG,EAAAC,EACAJ,GACAG,EAAA,EACAC,EAAA,SAAAxsI,EAAAK,GACA,OAAAL,EAAAK,IAAA,GAAAL,EAAAK,EAAA,OAAAL,EAAAK,EAAA,MAAAL,EAAAK,EAAA,MAGAksI,EAAA,EACAC,EAAA,SAAAxsI,EAAAK,GACA,OAAAL,EAAAK,IAAA,EAAAL,EAAAK,EAAA,QAKA,IAFA,IAAAurH,KACA7W,EAAAy3B,EAAAL,EAAA,GACAl0H,EAAAs0H,EAA0Bt0H,EAAAk0H,EAAAztI,OAAiBuZ,GAAAs0H,EAAA,CAC3C,IAAAzzB,EAAA0zB,EAAAL,EAAAl0H,GACA2zG,EAAAvsH,KAAA8rI,EAAA/rI,SAAA21G,EAAA+D,IACA/D,EAAA+D,EAEA,OAAA8S,EAEA,SAAA8pB,EAAA5uG,EAAA2gC,GACA,IAAAzpE,EAAAypE,EAAAjoE,WAAA,GACAsjE,EAAA,EACA74E,EAAA,EACAsX,EAAAulC,EAAApoC,OAAA,EACA,MAAAzU,EAAAsX,EAAA,CACA,IAAAnX,EAAAH,EAAAsX,EAAA,KACAvD,EAAA8oC,EAAA18C,GAAAgW,MACAmB,EAAAnX,EAAA,EAEAH,EAAAG,EAMA,OAHA08C,EAAA78C,GAAAmW,OAAApC,MAAA8oC,EAAA78C,GAAAoU,MACAykE,EAAAh8B,EAAA78C,GAAAkrJ,SAAAruG,EAAA78C,GAAAimD,IAAApJ,EAAA78C,GAAAimD,IAAAlyC,EAAA8oC,EAAA78C,GAAAmW,OAAApC,GAAA,QAGAi5H,SAAAj5H,EACAwmI,QAAA1hE,GAGA,SAAA6yE,EAAA33I,EAAA43I,EAAAh5I,GACA,SAAA9F,EAAAoJ,EAAA4G,GACA8uI,EAAAv2I,MACA2O,IAAA,SACApH,MAAA1G,EAAA4G,KAGA,SAAA/P,EAAAmJ,EAAA4G,GACA8uI,EAAAv2I,MACA2O,IAAA,SACApH,MAAA1G,EAAA4G,KAGA,SAAA+uI,EAAAC,EAAAC,EAAA71I,EAAA4G,GACA8uI,EAAAv2I,MACA2O,IAAA,mBACApH,MAAAkvI,EAAAC,EAAA71I,EAAA4G,KAGA,IAEAwjC,EAFAtgD,EAAA,EACAgsJ,GAAAh4I,EAAAhU,IAAA,GAAAgU,EAAAhU,EAAA,YAEAkW,EAAA,EACA4G,EAAA,EAEA,GADA9c,GAAA,GACAgsJ,EAAA,EACA,GACA1rG,EAAAtsC,EAAAhU,IAAA,EAAAgU,EAAAhU,EAAA,GACA,IAEAykF,EAAAC,EAFA3K,EAAA/lE,EAAAhU,EAAA,MAAAgU,EAAAhU,EAAA,GACAA,GAAA,EAEA,EAAAsgD,GACAmkC,GAAAzwE,EAAAhU,IAAA,GAAAgU,EAAAhU,EAAA,YACA0kF,GAAA1wE,EAAAhU,EAAA,OAAAgU,EAAAhU,EAAA,YACAA,GAAA,IAEAykF,EAAAzwE,EAAAhU,KACA0kF,EAAA1wE,EAAAhU,MAEA,EAAAsgD,GACApqC,EAAAuuE,EACA3nE,EAAA4nE,IAEAxuE,EAAA,EACA4G,EAAA,GAEA,IAAA20G,EAAA,EACAC,EAAA,EACAu6B,EAAA,EACAC,EAAA,EACA,EAAA5rG,GACAmxE,EAAAC,GAAA19G,EAAAhU,IAAA,GAAAgU,EAAAhU,EAAA,mBACAA,GAAA,GACS,GAAAsgD,GACTmxE,GAAAz9G,EAAAhU,IAAA,GAAAgU,EAAAhU,EAAA,mBACA0xH,GAAA19G,EAAAhU,EAAA,OAAAgU,EAAAhU,EAAA,mBACAA,GAAA,GACS,IAAAsgD,IACTmxE,GAAAz9G,EAAAhU,IAAA,GAAAgU,EAAAhU,EAAA,mBACAisJ,GAAAj4I,EAAAhU,EAAA,OAAAgU,EAAAhU,EAAA,mBACAksJ,GAAAl4I,EAAAhU,EAAA,OAAAgU,EAAAhU,EAAA,mBACA0xH,GAAA19G,EAAAhU,EAAA,OAAAgU,EAAAhU,EAAA,mBACAA,GAAA,GAEA,IAAAmsJ,EAAAv5I,EAAAgvH,OAAA7nD,GACAoyE,IACAP,EAAAv2I,MAAqB2O,IAAA,SACrB4nI,EAAAv2I,MACA2O,IAAA,YACApH,MAAA60G,EAAAw6B,EAAAC,EAAAx6B,EAAAx7G,EAAA4G,KAEA6uI,EAAAQ,EAAAP,EAAAh5I,GACAg5I,EAAAv2I,MAAqB2O,IAAA,mBAEd,GAAAs8B,OACF,CACL,IACAryB,EAAAy0B,EADA0pG,KAEA,IAAAn+H,EAAA,EAAiBA,EAAA+9H,EAAsB/9H,IACvCm+H,EAAA/2I,KAAArB,EAAAhU,IAAA,EAAAgU,EAAAhU,EAAA,IACAA,GAAA,EAEA,IAAAqsJ,EAAAr4I,EAAAhU,IAAA,EAAAgU,EAAAhU,EAAA,GACAA,GAAA,EAAAqsJ,EACA,IAAAC,EAAAF,IAAA13I,OAAA,KACA63I,KACA,MAAAA,EAAA73I,OAAA43I,EAAA,CACAhsG,EAAAtsC,EAAAhU,KACA,IAAA4hJ,EAAA,EACA,EAAAthG,IACAshG,GAAA5tI,EAAAhU,MAEA,MAAA4hJ,KAAA,EACA2K,EAAAl3I,MAAuBirC,UAGvB,IAAAryB,EAAA,EAAiBA,EAAAq+H,EAAoBr+H,IAAA,CACrC,UAAAs+H,EAAAt+H,GAAAqyB,OACA,OACApqC,IAAAlC,EAAAhU,IAAA,GAAAgU,EAAAhU,EAAA,YACAA,GAAA,EACA,MACA,OACAkW,GAAAlC,EAAAhU,KACA,MACA,QACAkW,GAAAlC,EAAAhU,KACA,MAEAusJ,EAAAt+H,GAAA/X,IAEA,IAAA+X,EAAA,EAAiBA,EAAAq+H,EAAoBr+H,IAAA,CACrC,UAAAs+H,EAAAt+H,GAAAqyB,OACA,OACAxjC,IAAA9I,EAAAhU,IAAA,GAAAgU,EAAAhU,EAAA,YACAA,GAAA,EACA,MACA,OACA8c,GAAA9I,EAAAhU,KACA,MACA,QACA8c,GAAA9I,EAAAhU,KACA,MAEAusJ,EAAAt+H,GAAAnR,IAEA,IAAA0vI,EAAA,EACA,IAAAxsJ,EAAA,EAAiBA,EAAAgsJ,EAAsBhsJ,IAAA,CACvC,IAAAshJ,EAAA8K,EAAApsJ,GACAysJ,EAAAF,EAAAp0I,MAAAq0I,EAAAlL,EAAA,GACA,KAAAmL,EAAA,GAAAnsG,MACAmsG,EAAAp3I,KAAAo3I,EAAA,SACS,KAAAA,IAAA/3I,OAAA,GAAA4rC,MACTmsG,EAAAjyI,QAAAiyI,IAAA/3I,OAAA,QACS,CACT,IAAAtT,GACAk/C,MAAA,EACApqC,GAAAu2I,EAAA,GAAAv2I,EAAAu2I,IAAA/3I,OAAA,GAAAwB,GAAA,EACA4G,GAAA2vI,EAAA,GAAA3vI,EAAA2vI,IAAA/3I,OAAA,GAAAoI,GAAA,GAEA2vI,EAAAjyI,QAAApZ,GACAqrJ,EAAAp3I,KAAAjU,GAGA,IADA0L,EAAA2/I,EAAA,GAAAv2I,EAAAu2I,EAAA,GAAA3vI,GACAmR,EAAA,EAAAy0B,EAAA+pG,EAAA/3I,OAAwCuZ,EAAAy0B,EAAQz0B,IAChD,EAAAw+H,EAAAx+H,GAAAqyB,MACAvzC,EAAA0/I,EAAAx+H,GAAA/X,EAAAu2I,EAAAx+H,GAAAnR,GACW,EAAA2vI,EAAAx+H,EAAA,GAAAqyB,OACXurG,EAAAY,EAAAx+H,GAAA/X,EAAAu2I,EAAAx+H,GAAAnR,EAAA2vI,EAAAx+H,EAAA,GAAA/X,EAAAu2I,EAAAx+H,EAAA,GAAAnR,GACAmR,KAEA49H,EAAAY,EAAAx+H,GAAA/X,EAAAu2I,EAAAx+H,GAAAnR,GAAA2vI,EAAAx+H,GAAA/X,EAAAu2I,EAAAx+H,EAAA,GAAA/X,GAAA,GAAAu2I,EAAAx+H,GAAAnR,EAAA2vI,EAAAx+H,EAAA,GAAAnR,GAAA,GAGA0vI,EAAAlL,EAAA,IAIA,SAAAoL,EAAA14I,EAAA43I,EAAAh5I,EAAA4nI,GACA,IAAApoE,KACAl8D,EAAA,EACA4G,EAAA,EACA6vI,EAAA,EACA,SAAA7/I,EAAAoJ,EAAA4G,GACA8uI,EAAAv2I,MACA2O,IAAA,SACApH,MAAA1G,EAAA4G,KAGA,SAAA/P,EAAAmJ,EAAA4G,GACA8uI,EAAAv2I,MACA2O,IAAA,SACApH,MAAA1G,EAAA4G,KAGA,SAAA8vI,EAAAh8F,EAAAK,EAAAtpB,EAAA02B,EAAAnoD,EAAA4G,GACA8uI,EAAAv2I,MACA2O,IAAA,gBACApH,MAAAg0C,EAAAK,EAAAtpB,EAAA02B,EAAAnoD,EAAA4G,KAGA,SAAA6Z,EAAA3iB,GACA,IAAAhU,EAAA,EACA,MAAAA,EAAAgU,EAAAU,OAAA,CACA,IAEAo3I,EAAAe,EAAAd,EAAAe,EAAA77F,EAAAoN,EAAA0uF,EAAAjsJ,EAAAksJ,EAFAC,GAAA,EACAx0I,EAAAzE,EAAAhU,KAEA,OAAAyY,GACA,OACAk0I,GAAAv6E,EAAA19D,QAAA,EACAu4I,GAAA,EACA,MACA,OACAN,GAAAv6E,EAAA19D,QAAA,EACAu4I,GAAA,EACA,MACA,OACAnwI,GAAAs1D,EAAAtuB,MACAh3C,EAAAoJ,EAAA4G,GACAmwI,GAAA,EACA,MACA,OACA,MAAA76E,EAAA19D,OAAA,EACAwB,GAAAk8D,EAAAnoD,QACAnN,GAAAs1D,EAAAnoD,QACAld,EAAAmJ,EAAA4G,GAEA,MACA,OACA,MAAAs1D,EAAA19D,OAAA,GAGA,GAFAwB,GAAAk8D,EAAAnoD,QACAld,EAAAmJ,EAAA4G,GACA,IAAAs1D,EAAA19D,OACA,MAEAoI,GAAAs1D,EAAAnoD,QACAld,EAAAmJ,EAAA4G,GAEA,MACA,OACA,MAAAs1D,EAAA19D,OAAA,GAGA,GAFAoI,GAAAs1D,EAAAnoD,QACAld,EAAAmJ,EAAA4G,GACA,IAAAs1D,EAAA19D,OACA,MAEAwB,GAAAk8D,EAAAnoD,QACAld,EAAAmJ,EAAA4G,GAEA,MACA,OACA,MAAAs1D,EAAA19D,OAAA,EACAo3I,EAAA51I,EAAAk8D,EAAAnoD,QACA8hI,EAAAjvI,EAAAs1D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACAnN,EAAAgwI,EAAA16E,EAAAnoD,QACA2iI,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GAEA,MACA,QAGA,GAFAhc,EAAAsxE,EAAAtuB,MACAkpG,EAAA,KACAp6I,EAAA44I,aAAA,CACA,IAAAx0E,EAAApkE,EAAA2hE,SAAA0C,WAAAujE,GACA,GAAAxjE,GAAA,GAAAA,EAAApkE,EAAAyhE,QAAA3/D,OAAA,CACA,IAAA0/D,EAAAxhE,EAAAyhE,QAAA2C,GACAwF,OAAA,EAIA,GAHApI,EAAAU,aAAAV,EAAAU,YAAAC,aACAyH,EAAApI,EAAAU,YAAAC,WAAAmE,SAEAsD,EAAA,CACA,IAAA0wE,EAAA1wE,EAAA9nE,OACA5T,GAAAosJ,EAAA,SAAAA,EAAA,iBACAF,EAAAxwE,EAAA17E,SAGA,EAAAunB,EAAA7mB,MAAA,0CAGAwrJ,EAAAp6I,EAAA4pE,MAAA17E,EAAA8R,EAAAu6I,WAEAH,GACAr2H,EAAAq2H,GAEA,MACA,QACA,OACA,QAEA,OADAv0I,EAAAzE,EAAAhU,KACAyY,GACA,QACAqzI,EAAA51I,EAAAk8D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACAgnC,EAAAn0C,EAAAs1D,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACA2iI,EAAAd,EAAAhvI,EAAA+vI,EAAA57F,EAAA/6C,EAAA+6C,GACA66F,EAAA51I,EAAAk8D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACA2iI,EAAAd,EAAA76F,EAAA47F,EAAA/vI,EAAA5G,EAAA4G,GACA,MACA,QACAgvI,EAAA51I,EAAAk8D,EAAAnoD,QACA8hI,EAAAjvI,EAAAs1D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACAnN,EAAAgwI,EAAA16E,EAAAnoD,QACA2iI,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GACAgvI,EAAA51I,EAAAk8D,EAAAnoD,QACA8hI,EAAAjvI,EAAAs1D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACAnN,EAAAgwI,EAAA16E,EAAAnoD,QACA2iI,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GACAs1D,EAAAtuB,MACA,MACA,QACAgoG,EAAA51I,EAAAk8D,EAAAnoD,QACAgnC,EAAAn0C,EAAAs1D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACAo0C,EAAApN,EAAAmhB,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACA2iI,EAAAd,EAAA76F,EAAA47F,EAAAxuF,EAAAnoD,EAAAmoD,GACAytF,EAAA51I,EAAAk8D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACA8iI,EAAA1uF,EAAA+T,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACA2iI,EAAAd,EAAAztF,EAAAwuF,EAAAE,EAAA72I,EAAA4G,GACA,MACA,QACA,IAAA2zC,EAAAv6C,EACA46C,EAAAh0C,EACAgvI,EAAA51I,EAAAk8D,EAAAnoD,QACA8hI,EAAAjvI,EAAAs1D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACAnN,EAAAgwI,EAAA16E,EAAAnoD,QACA2iI,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GACAgvI,EAAA51I,EAAAk8D,EAAAnoD,QACA8hI,EAAAjvI,EAAAs1D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACA/T,EAAA22I,EACA/vI,EAAAgwI,EACA73I,KAAAwH,IAAAvG,EAAAu6C,GAAAx7C,KAAAwH,IAAAK,EAAAg0C,GACA56C,GAAAk8D,EAAAnoD,QAEAnN,GAAAs1D,EAAAnoD,QAEA2iI,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GACA,MACA,QACA,UAAAuL,EAAAzkB,YAAA,wBAAA6U,GAEA,MACA,QACA,GAAA25D,EAAA19D,QAAA,GACA,IAAA04I,EAAAh7E,EAAAtuB,MACAupG,EAAAj7E,EAAAtuB,MACAhnC,EAAAs1D,EAAAtuB,MACA5tC,EAAAk8D,EAAAtuB,MACA8nG,EAAAv2I,MAAyB2O,IAAA,SACzB4nI,EAAAv2I,MACA2O,IAAA,YACApH,MAAA1G,EAAA4G,KAEA,IAAAiwH,EAAA2e,EAAA94I,EAAAm6H,KAAAn4H,OAAAC,aAAAjC,EAAA06I,aAAA57E,EAAA3xC,iBAAAqtH,MACAV,EAAA95I,EAAAgvH,OAAAmL,EAAAyN,SAAAoR,EAAAh5I,EAAAm6H,EAAAyN,SACAoR,EAAAv2I,MAAyB2O,IAAA,YACzB+oH,EAAA2e,EAAA94I,EAAAm6H,KAAAn4H,OAAAC,aAAAjC,EAAA06I,aAAA57E,EAAA3xC,iBAAAstH,MACAX,EAAA95I,EAAAgvH,OAAAmL,EAAAyN,SAAAoR,EAAAh5I,EAAAm6H,EAAAyN,SAEA,OACA,QACAmS,GAAAv6E,EAAA19D,QAAA,EACAu4I,GAAA,EACA,MACA,QACAN,GAAAv6E,EAAA19D,QAAA,EACA1U,GAAA2sJ,EAAA,KACAM,GAAA,EACA,MACA,QACAN,GAAAv6E,EAAA19D,QAAA,EACA1U,GAAA2sJ,EAAA,KACAM,GAAA,EACA,MACA,QACAnwI,GAAAs1D,EAAAtuB,MACA5tC,GAAAk8D,EAAAtuB,MACAh3C,EAAAoJ,EAAA4G,GACAmwI,GAAA,EACA,MACA,QACA/2I,GAAAk8D,EAAAtuB,MACAh3C,EAAAoJ,EAAA4G,GACAmwI,GAAA,EACA,MACA,QACAN,GAAAv6E,EAAA19D,QAAA,EACAu4I,GAAA,EACA,MACA,QACA,MAAA76E,EAAA19D,OAAA,EACAo3I,EAAA51I,EAAAk8D,EAAAnoD,QACA8hI,EAAAjvI,EAAAs1D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACAnN,EAAAgwI,EAAA16E,EAAAnoD,QACA2iI,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GAEA5G,GAAAk8D,EAAAnoD,QACAnN,GAAAs1D,EAAAnoD,QACAld,EAAAmJ,EAAA4G,GACA,MACA,QACA,MAAAs1D,EAAA19D,OAAA,EACAwB,GAAAk8D,EAAAnoD,QACAnN,GAAAs1D,EAAAnoD,QACAld,EAAAmJ,EAAA4G,GAEAgvI,EAAA51I,EAAAk8D,EAAAnoD,QACA8hI,EAAAjvI,EAAAs1D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACAnN,EAAAgwI,EAAA16E,EAAAnoD,QACA2iI,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GACA,MACA,QACAs1D,EAAA19D,OAAA,IACAwB,GAAAk8D,EAAAnoD,SAEA,MAAAmoD,EAAA19D,OAAA,EACAo3I,EAAA51I,EACA61I,EAAAjvI,EAAAs1D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACA/T,EAAA22I,EACA/vI,EAAAgwI,EAAA16E,EAAAnoD,QACA2iI,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GAEA,MACA,QACAs1D,EAAA19D,OAAA,IACAoI,GAAAs1D,EAAAnoD,SAEA,MAAAmoD,EAAA19D,OAAA,EACAo3I,EAAA51I,EAAAk8D,EAAAnoD,QACA8hI,EAAAjvI,EACA+vI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACAnN,EAAAgwI,EACAF,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GAEA,MACA,QACAs1D,EAAA/8D,MAAArB,EAAAhU,IAAA,GAAAgU,EAAAhU,EAAA,aACAA,GAAA,EACA,MACA,QACAc,EAAAsxE,EAAAtuB,MAAAlxC,EAAA26I,WACAP,EAAAp6I,EAAA24I,OAAAzqJ,GACAksJ,GACAr2H,EAAAq2H,GAEA,MACA,QACA,MAAA56E,EAAA19D,OAAA,GAQA,GAPAo3I,EAAA51I,EACA61I,EAAAjvI,EAAAs1D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACAnN,EAAAgwI,GAAA,IAAA16E,EAAA19D,OAAA09D,EAAAnoD,QAAA,GACA2iI,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GACA,IAAAs1D,EAAA19D,OACA,MAEAo3I,EAAA51I,EAAAk8D,EAAAnoD,QACA8hI,EAAAjvI,EACA+vI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACAnN,EAAAgwI,EAAA16E,EAAAnoD,QACA/T,EAAA22I,GAAA,IAAAz6E,EAAA19D,OAAA09D,EAAAnoD,QAAA,GACA2iI,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GAEA,MACA,QACA,MAAAs1D,EAAA19D,OAAA,GAQA,GAPAo3I,EAAA51I,EAAAk8D,EAAAnoD,QACA8hI,EAAAjvI,EACA+vI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACAnN,EAAAgwI,EAAA16E,EAAAnoD,QACA/T,EAAA22I,GAAA,IAAAz6E,EAAA19D,OAAA09D,EAAAnoD,QAAA,GACA2iI,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GACA,IAAAs1D,EAAA19D,OACA,MAEAo3I,EAAA51I,EACA61I,EAAAjvI,EAAAs1D,EAAAnoD,QACA4iI,EAAAf,EAAA15E,EAAAnoD,QACA6iI,EAAAf,EAAA35E,EAAAnoD,QACA/T,EAAA22I,EAAAz6E,EAAAnoD,QACAnN,EAAAgwI,GAAA,IAAA16E,EAAA19D,OAAA09D,EAAAnoD,QAAA,GACA2iI,EAAAd,EAAAC,EAAAc,EAAAC,EAAA52I,EAAA4G,GAEA,MACA,QACA,GAAArE,EAAA,GACA,UAAA4P,EAAAzkB,YAAA,qBAAA6U,GAEAA,EAAA,IACA25D,EAAA/8D,KAAAoD,EAAA,KACaA,EAAA,IACb25D,EAAA/8D,KAAA,KAAAoD,EAAA,KAAAzE,EAAAhU,KAAA,KACayY,EAAA,IACb25D,EAAA/8D,KAAA,MAAAoD,EAAA,KAAAzE,EAAAhU,KAAA,MAEAoyE,EAAA/8D,MAAArB,EAAAhU,IAAA,GAAAgU,EAAAhU,EAAA,OAAAgU,EAAAhU,EAAA,MAAAgU,EAAAhU,EAAA,WACAA,GAAA,GAEA,MAEAitJ,IACA76E,EAAA19D,OAAA,IAIAiiB,EAAA3iB,GAEA,IAAAw5I,EAAA,GACA,SAAAC,EAAA75E,GACA3/D,KAAAy5I,eAAAjtJ,OAAAoT,OAAA,MACAI,KAAA05I,0BAAAltJ,OAAAoT,OAAA,MACAI,KAAA2/D,aAmDA,SAAAg6E,EAAAhsB,EAAAmL,EAAAn5D,GACAA,MAAA,uBACA65E,EAAAvtJ,KAAA+T,KAAA2/D,GACA3/D,KAAA2tH,SACA3tH,KAAA84H,OAOA,SAAA8gB,EAAAC,EAAA/gB,EAAAn5D,EAAA05E,GACA15E,MAAA,mBACA65E,EAAAvtJ,KAAA+T,KAAA2/D,GACA3/D,KAAA2tH,OAAAksB,EAAAlsB,OACA3tH,KAAAs3I,OAAAuC,EAAAvC,WACAt3I,KAAAuoE,MAAAsxE,EAAAtxE,UACAvoE,KAAA84H,OACA94H,KAAAq5I,iBAAA,EAAAlxB,EAAA5qF,oBACAv9B,KAAAs5I,WAAAt5I,KAAAs3I,OAAA72I,OAAA,SAAAT,KAAAs3I,OAAA72I,OAAA,iBACAT,KAAAk5I,UAAAl5I,KAAAuoE,MAAA9nE,OAAA,SAAAT,KAAAuoE,MAAA9nE,OAAA,iBACAT,KAAAu3I,aAAAsC,EAAAtC,aACAv3I,KAAAsgE,SAAAu5E,EAAAv5E,SACAtgE,KAAAogE,QAAAy5E,EAAAz5E,QAOA,OA/EAo5E,EAAAvsJ,WACAohI,UAAA,SAAA7kD,GACA,IAAAsvD,EAAA2e,EAAAz3I,KAAA84H,KAAAtvD,GACA3+D,EAAA7K,KAAAy5I,eAAA3gB,EAAAyN,SAQA,OAPA17H,IACAA,EAAA7K,KAAA85I,aAAA95I,KAAA2tH,OAAAmL,EAAAyN,SAAAzN,EAAAyN,SACAvmI,KAAAy5I,eAAA3gB,EAAAyN,SAAA17H,QAEArZ,IAAAwO,KAAA05I,0BAAA5gB,EAAAE,YACAh5H,KAAA05I,0BAAA5gB,EAAAE,UAAAF,EAAAyN,SAEA17H,GAEAivI,aAAA,SAAA/5I,EAAAwmI,GACA,IAAAxmI,GAAA,IAAAA,EAAAU,QAAA,KAAAV,EAAA,GACA,OAAAw5I,EAEA,IAAA55E,EAAA3/D,KAAA2/D,WACA,GAAA3/D,KAAAu3I,aAAA,CACA,IAAAx0E,EAAA/iE,KAAAsgE,SAAA0C,WAAAujE,GACA,GAAAxjE,GAAA,GAAAA,EAAA/iE,KAAAogE,QAAA3/D,OAAA,CACA,IAAA0/D,EAAAngE,KAAAogE,QAAA2C,GACApD,EAAAQ,EAAAV,UAAA,eAAArrD,EAAA7iB,0BAEA,EAAA6iB,EAAA7mB,MAAA,qCAGA,IAAAoqJ,KAYA,OAXAA,EAAAv2I,MAAiB2O,IAAA,SACjB4nI,EAAAv2I,MACA2O,IAAA,YACApH,KAAAg3D,EAAAz7D,UAEAyzI,EAAAv2I,MACA2O,IAAA,QACApH,MAAA,kBAEA3I,KAAA+5I,iBAAAh6I,EAAA43I,EAAApR,GACAoR,EAAAv2I,MAAiB2O,IAAA,YACjB4nI,GAEAoC,iBAAA,YACA,EAAA3lI,EAAA9mB,aAAA,4CAEA6gI,aAAA,SAAA3kD,GACA,IAAAsvD,EAAA2e,EAAAz3I,KAAA84H,KAAAtvD,GACA,YAAAh4E,IAAAwO,KAAAy5I,eAAA3gB,EAAAyN,eAAA/0I,IAAAwO,KAAA05I,0BAAA5gB,EAAAE,YASA5kH,EAAAvkB,KAAA8W,QAAAgzI,EAAAH,GACAO,iBAAA,SAAAh6I,EAAA43I,GACAD,EAAA33I,EAAA43I,EAAA33I,SAiBAoU,EAAAvkB,KAAA8W,QAAAizI,EAAAJ,GACAO,iBAAA,SAAAh6I,EAAA43I,EAAApR,GACAkS,EAAA14I,EAAA43I,EAAA33I,KAAAumI,OAIA3mI,OAAA,SAAAjB,EAAA2/D,GAIA,IAHA,IACAw6D,EAAAoU,EAAAgB,EAAA3vE,EAAAwvE,EAAA7F,EADAnmI,EAAA,IAAAT,WAAA3C,EAAAoD,MAEAgiI,EAAAiT,EAAAj1I,EAAA,GACAhW,EAAA,EAAAoB,EAAA,GAA6BpB,EAAAg4I,EAAeh4I,IAAAoB,GAAA,IAC5C,IAAAy/B,GAAA,EAAAxY,EAAA7kB,eAAAwS,EAAAZ,SAAAhU,IAAA,IACAiV,EAAA20I,EAAAh1I,EAAA5U,EAAA,GACAsT,EAAAs2I,EAAAh1I,EAAA5U,EAAA,IACA,OAAAy/B,GACA,WACAksG,EAAAme,EAAAl1I,EAAAK,IAAA3B,GACA,MACA,WACAysI,EAAAnrI,EAAAZ,SAAAiB,IAAA3B,GACA,MACA,WACAytI,EAAAnsI,EAAAZ,SAAAiB,IAAA3B,GACA,MACA,WACAynI,EAAA8O,EAAAj1I,EAAAK,EAAA,IACA2rI,EAAAiJ,EAAAj1I,EAAAK,EAAA,IACA,MACA,WACAm8D,EAAA84E,EAAAt1I,EAAAK,IAAA3B,EAAA69D,GACA,OAGA,GAAA4uE,EAAA,CACA,IAAAvtE,EAAAuoE,GAAA,EAAAA,EAAA,MAAAA,EAAA,KAAAvpI,EAAAghE,WACA,WAAAg6E,EAAAnC,EAAAtK,EAAAgB,EAAAH,GAAAjV,EAAAn5D,GAEA,WAAAi6E,EAAAr7E,EAAAu6D,EAAAn6H,EAAAghE,WAAAhhE,EAAA06I,gBA3uBA,GA+uBA5tJ,EAAAo+I,uBAIA,SAAAr+I,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAkqJ,iBAAAnkJ,EAEA,IAAA4iB,EAAAvoB,EAAA,GAEA4xE,EAAA5xE,EAAA,IAEAkiC,EAAAliC,EAAA,GAEAmuJ,GAAA,EACAC,EAAA,WACA,IAAAC,GACAC,OAAA,GACAC,OAAA,GACAC,SAAA,GACAC,SAAA,GACAC,SAAA,GACAC,SAAA,GACAC,WAAA,GACAC,UAAA,IACAC,MAAA,OACAC,MAAA,OACAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,WAAA,IACAC,WAAA,KAEA,SAAAhB,IACAj6I,KAAAoI,MAAA,EACApI,KAAAk7I,IAAA,EACAl7I,KAAAm7I,SAAA,EACAn7I,KAAAyzD,UACAzzD,KAAAm+D,SA0NA,OAxNA87E,EAAAhtJ,WACA+3I,QAAA,SAAAoW,EAAA7yE,EAAAjK,GAIA,IAHA,IAEA+8E,EAAAC,EAAA74E,EAFAhhD,EAAA25H,EAAA36I,OACA+L,GAAA,EAEAzgB,EAAA,EAAqBA,EAAA01B,EAAW11B,IAAA,CAChC,IAAAsB,EAAA+tJ,EAAArvJ,GACA,GAAAsB,EAAA,IAIA,OAHA,KAAAA,IACAA,MAAA,GAAA+tJ,IAAArvJ,IAEAsB,GACA,OACA,IAAA2sJ,EAAA,CACAh6I,KAAAm+D,SACA,MAEA3xD,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAC,OACA,MACA,OACA,IAAAH,EAAA,CACAh6I,KAAAm+D,SACA,MAEA3xD,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAE,OACA,MACA,OACA,GAAAp6I,KAAAm7I,QAAA,CACA,GAAAn7I,KAAAm+D,MAAA19D,OAAA,GACA+L,GAAA,EACA,MAEA,IAAAgvI,EAAAx7I,KAAAm+D,MAAAtuB,MACA7vC,KAAAm+D,MAAA/8D,KAAA,EAAAo6I,GACA,MAEAhvI,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAG,SACA,MACA,OACA7tI,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAI,SACA,MACA,OACA9tI,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAK,SACA,MACA,OACA/tI,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAM,SACA,MACA,OACAhuI,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAO,WACA,MACA,OACAz6I,KAAAm+D,SACA,MACA,QACA,GAAAn+D,KAAAm+D,MAAA19D,OAAA,GACA+L,GAAA,EACA,MAGA,GADAi2D,EAAAziE,KAAAm+D,MAAAtuB,OACA04B,EAAA9F,GAAA,CACAj2D,GAAA,EACA,MAEAA,EAAAxM,KAAAglI,QAAAz8D,EAAA9F,GAAA8F,EAAAjK,GACA,MACA,QACA,OAAA9xD,EACA,QACA,GAAAxM,KAAAm+D,MAAA19D,OAAA,GACA+L,GAAA,EACA,MAEA6uI,EAAAr7I,KAAAm+D,MAAAtuB,MACAyrG,EAAAt7I,KAAAm+D,MAAAtuB,MACA7vC,KAAAk7I,IAAAI,EACAt7I,KAAAoI,MAAAizI,EACAr7I,KAAAm+D,MAAA/8D,KAAAi6I,EAAAC,GACA9uI,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAa,SACA,MACA,QACA/6I,KAAAyzD,OAAAryD,KAAA84I,EAAAW,QAAA,IACA,MACA,QACA,GAAA76I,KAAAm7I,QACA,MAEA3uI,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAY,SACA,MACA,QACA,GAAA96I,KAAAm7I,QAAA,CACAn7I,KAAAm+D,MAAA/8D,KAAA,GACA,MAEAoL,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAa,SACA,MACA,QACAvuI,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAc,WACA,MACA,QACAxuI,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAe,WACA,MACA,UACAj7I,KAAAm+D,SACA,MACA,UACA,IAAA67E,EAAA,CACAh6I,KAAAm+D,SACA,MAEA3xD,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAE,OACA,MACA,UACA,IAAAJ,EAAA,CACAh6I,KAAAm+D,SACA,MAEA3xD,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAC,OACA,MACA,UACA77E,GACAt+D,KAAAuiE,KAAAviE,KAAAm+D,MAAAjkC,QAAA,KACA1tB,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAW,UAEAruI,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAW,SAEA,MACA,UACA,GAAA76I,KAAAm+D,MAAA19D,OAAA,GACA+L,GAAA,EACA,MAEAxM,KAAAm+D,MAAAtuB,MACAwrG,EAAAr7I,KAAAm+D,MAAAtuB,MACA,IAAA4rG,EAAAz7I,KAAAm+D,MAAAtuB,MACAyrG,EAAAt7I,KAAAm+D,MAAAtuB,MACA7vC,KAAAk7I,IAAAI,EACAt7I,KAAAoI,MAAAizI,EACAr7I,KAAAm+D,MAAA/8D,KAAAi6I,EAAAC,EAAAG,GACAjvI,EAAAxM,KAAAu7I,eAAA,EAAArB,EAAAY,SACA,MACA,UACA,GAAA96I,KAAAm+D,MAAA19D,OAAA,GACA+L,GAAA,EACA,MAEA,IAAA0kE,EAAAlxE,KAAAm+D,MAAAtuB,MACAohC,EAAAjxE,KAAAm+D,MAAAtuB,MACA7vC,KAAAm+D,MAAA/8D,KAAA6vE,EAAAC,GACA,MACA,UACA,GAAAlxE,KAAAm+D,MAAA19D,OAAA,GACA+L,GAAA,EACA,MAEAi2D,EAAAziE,KAAAm+D,MAAAtuB,MACA,IAAAwtF,EAAAr9H,KAAAm+D,MAAAtuB,MACA,OAAA4yB,GAAA,IAAA46D,EAAA,CACA,IAAAqe,EAAA17I,KAAAm+D,MAAAjkC,OAAAl6B,KAAAm+D,MAAA19D,OAAA,OACAT,KAAAm+D,MAAA/8D,KAAAs6I,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAlvI,EAAAxM,KAAAu7I,eAAA,GAAArB,EAAAS,MAAA,GACA36I,KAAAm7I,SAAA,EACAn7I,KAAAm+D,MAAA/8D,KAAAs6I,EAAA,IAAAA,EAAA,UACe,IAAAj5E,GAAA,IAAA46D,IACfr9H,KAAAm7I,SAAA,GAEA,MACA,UACA,MACA,UACAn7I,KAAAm+D,SACA,MACA,SACA,EAAA/pD,EAAA7mB,MAAA,yCAAAF,EAAA,KACA,MAEA,GAAAmf,EACA,WAGSnf,GAAA,IACTA,GAAA,IAEAA,EADSA,GAAA,IACT,KAAAA,EAAA,KAAA+tJ,IAAArvJ,GAAA,IACSsB,GAAA,KACT,KAAAA,EAAA,KAAA+tJ,IAAArvJ,GAAA,KAEA,IAAAqvJ,IAAArvJ,KAAA,QAAAqvJ,IAAArvJ,KAAA,QAAAqvJ,IAAArvJ,KAAA,OAAAqvJ,IAAArvJ,KAAA,EAEAiU,KAAAm+D,MAAA/8D,KAAA/T,GAEA,OAAAmf,GAEA+uI,eAAA,SAAAI,EAAAC,EAAAC,GACA,IAAAC,EAAA97I,KAAAm+D,MAAA19D,OACA,GAAAk7I,EAAAG,EACA,SAGA,IADA,IAAA35I,EAAA25I,EAAAH,EACA5vJ,EAAAoW,EAAyBpW,EAAA+vJ,EAAiB/vJ,IAAA,CAC1C,IAAAsB,EAAA2S,KAAAm+D,MAAApyE,GACA+R,OAAAC,UAAA1Q,GACA2S,KAAAyzD,OAAAryD,KAAA,GAAA/T,GAAA,UAAAA,IAEAA,EAAA,MAAAA,EAAA,EACA2S,KAAAyzD,OAAAryD,KAAA,IAAA/T,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IASA,OANA2S,KAAAyzD,OAAAryD,KAAAP,MAAAb,KAAAyzD,OAAAmoF,GACAC,EACA77I,KAAAm+D,MAAAjkC,OAAA/3B,EAAAw5I,GAEA37I,KAAAm+D,MAAA19D,OAAA,GAEA,IAGAw5I,EAjPA,GAmPAtE,EAAA,WACA,IAAAoG,EAAA,MACAC,EAAA,KACA,SAAAC,EAAAl8I,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAEA,SAAA0a,EAAA1Y,EAAAa,EAAAs5I,GACA,GAAAA,GAAAn6I,EAAAtB,OACA,WAAAa,WAAA,GAEA,IAGAvV,EACAiuB,EAJA1W,EAAA,EAAAV,EACAirE,EAAA,MACAsuE,EAAA,MAGA,IAAApwJ,EAAA,EAAeA,EAAAmwJ,EAAmBnwJ,IAClCuX,GAAAvB,EAAAhW,GAAAuX,GAAAuqE,EAAAsuE,EAAA,MAEA,IAAA16H,EAAA1f,EAAAtB,OAAAy7I,EACAE,EAAA,IAAA96I,WAAAmgB,GACA,IAAA11B,EAAAmwJ,EAAAliI,EAAA,EAAkCA,EAAAyH,EAAW11B,IAAAiuB,IAAA,CAC7C,IAAA3sB,EAAA0U,EAAAhW,GACAqwJ,EAAApiI,GAAA3sB,EAAAiW,GAAA,EACAA,GAAAjW,EAAAiW,GAAAuqE,EAAAsuE,EAAA,MAEA,OAAAC,EAEA,SAAAC,EAAAt6I,EAAAa,EAAAs5I,GACA,IAMAnwJ,EAAAiuB,EANA1W,EAAA,EAAAV,EACAirE,EAAA,MACAsuE,EAAA,MACA16H,EAAA1f,EAAAtB,OACAgW,EAAAgL,IAAA,EACA26H,EAAA,IAAA96I,WAAAmV,GAEA,IAAA1qB,EAAA,EAAAiuB,EAAA,EAAsBjuB,EAAA01B,EAAW11B,IAAA,CACjC,IAAAuwJ,EAAAv6I,EAAAhW,GACA,GAAAkwJ,EAAAK,GAAA,CAIA,IAAAC,EADAxwJ,IAEA,MAAAA,EAAA01B,IAAAw6H,EAAAM,EAAAx6I,EAAAhW,IACAA,IAEA,GAAAA,EAAA01B,EAAA,CACA,IAAAp0B,EAAAooD,SAAA90C,OAAAC,aAAA07I,EAAAC,GAAA,IACAH,EAAApiI,KAAA3sB,EAAAiW,GAAA,EACAA,GAAAjW,EAAAiW,GAAAuqE,EAAAsuE,EAAA,QAGA,OAAA91I,MAAApZ,UAAAiX,MAAAjY,KAAAmwJ,EAAAF,EAAAliI,GAEA,SAAAwiI,EAAArwJ,GACA,YAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,KAAAA,GAAA,KAAAA,EAEA,SAAAwpJ,EAAAtpI,EAAAowI,EAAAn+E,GACA,GAAAm+E,EAAA,CACA,IAAA16I,EAAAsK,EAAA4G,WACAypI,IAAAT,EAAAl6I,EAAA,KAAAk6I,EAAAl6I,EAAA,KAAAk6I,EAAAl6I,EAAA,KAAAk6I,EAAAl6I,EAAA,KACAsK,EAAA,IAAA0hB,EAAApa,OAAA+oI,EAAAjiI,EAAA1Y,EAAAg6I,EAAA,GAAAM,EAAAt6I,EAAAg6I,EAAA,IAEA/7I,KAAAs+D,wBACAt+D,KAAAqM,SACArM,KAAAsxB,WAyOA,OAvOAqkH,EAAA1oJ,WACA0vJ,gBAAA,WACA38I,KAAA48I,WACA,IAAAztH,KACA,SACA,IAAA4kB,EAAA/zC,KAAA48I,WACA,UAAA7oG,GAAA,MAAAA,GAAA,MAAAA,EACA,MAEA5kB,EAAA/tB,KAAAogE,WAAAztB,GAAA,IAEA,OAAA5kB,GAEAywG,WAAA,WACA,IAAA7rF,EAAA/zC,KAAA48I,WACA,OAAAp7E,WAAAztB,GAAA,IAEA8oG,QAAA,WACA,IAAA9oG,EAAA/zC,KAAA48I,WACA,SAAAnnG,SAAA1B,GAAA,OAEA+oG,YAAA,WACA,IAAA/oG,EAAA/zC,KAAA48I,WACA,eAAA7oG,EAAA,KAEAziB,SAAA,WACA,OAAAtxB,KAAA2yB,YAAA3yB,KAAAqM,OAAAmI,WAEAooI,SAAA,WACA,IAAA9oH,GAAA,EACAtqB,EAAAxJ,KAAA2yB,YACA,SACA,QAAAnpB,EACA,YAEA,GAAAsqB,EACA,KAAAtqB,GAAA,KAAAA,IACAsqB,GAAA,QAES,QAAAtqB,EACTsqB,GAAA,OACS,OAAA1f,EAAA3lB,SAAA+a,GACT,MAEAA,EAAAxJ,KAAAsxB,WAEA,GAAAkrH,EAAAhzI,GAEA,OADAxJ,KAAAsxB,WACA3wB,OAAAC,aAAA4I,GAEA,IAAAuqC,EAAA,GACA,GACAA,GAAApzC,OAAAC,aAAA4I,GACAA,EAAAxJ,KAAAsxB,iBACO9nB,GAAA,OAAA4K,EAAA3lB,SAAA+a,KAAAgzI,EAAAhzI,IACP,OAAAuqC,GAEAgpG,gBAAA,SAAAv8I,EAAAw8I,GACA,WAAAA,EACAx8I,EAEAia,EAAAja,EAAAw7I,EAAAgB,IAEAjH,mBAAA,WACA,IAAA1pI,EAAArM,KAAAqM,OACAk8D,KACAy/D,KACA2O,EAAAnqJ,OAAAoT,OAAA,MACA+2I,EAAA,WACA,IAKA5iG,EAAAtzC,EAAAsB,EAAAi7I,EAAA5B,EALA6B,GACA10E,SACAy/D,eACA3pE,YAAqBs4E,gBAGrB,cAAA5iG,EAAA/zC,KAAA48I,YACA,SAAA7oG,EAIA,OADAA,EAAA/zC,KAAA48I,WACA7oG,GACA,kBACA/zC,KAAA48I,WACA58I,KAAA48I,WACA58I,KAAA48I,WACA58I,KAAA48I,WACA,SAEA,GADA7oG,EAAA/zC,KAAA48I,WACA,OAAA7oG,GAAA,QAAAA,EACA,MAEA,SAAAA,EAAA,CAGA,IAAAu6E,EAAAtuH,KAAA48I,WACAn8I,EAAAT,KAAA68I,UACA78I,KAAA48I,WACA76I,EAAAsK,EAAA8I,cAAA9I,EAAAvK,IAAArB,GACAu8I,EAAAC,EAAA5+E,WAAAs4E,YAAA,SACAyE,EAAAp7I,KAAA+8I,gBAAAh7I,EAAAkR,WAAA+pI,GACA3wI,EAAA2I,KAAAvU,GACAT,KAAAsxB,WACAyiB,EAAA/zC,KAAA48I,WACA,aAAA7oG,GACA/zC,KAAA48I,WAEA5U,EAAA5mI,MACAktH,QACA8sB,aAGA,MACA,YACAp7I,KAAA68I,UACA78I,KAAA48I,WACA,cAAA58I,KAAA48I,WAAA,CACA,IAAAnvH,EAAAztB,KAAA68I,UACAp8I,EAAAT,KAAA68I,UACA78I,KAAA48I,WACA76I,EAAAsK,EAAA8I,cAAA9I,EAAAvK,IAAArB,GACAu8I,EAAAC,EAAA5+E,WAAAs4E,YAAA,SACAyE,EAAAp7I,KAAA+8I,gBAAAh7I,EAAAkR,WAAA+pI,GACA3wI,EAAA2I,KAAAvU,GACAT,KAAAsxB,WACAyiB,EAAA/zC,KAAA48I,WACA,aAAA7oG,GACA/zC,KAAA48I,WAEAr0E,EAAA96C,GAAA2tH,EAEA,MACA,iBACA,iBACA,kBACA,uBACA,IAAA8B,EAAAl9I,KAAA28I,kBACAO,EAAAz8I,OAAA,GAAAy8I,EAAAz8I,OAAA,OAAAu5I,IACAiD,EAAA5+E,WAAAs4E,YAAA5iG,GAAAmpG,GAEA,MACA,gBACA,gBACAD,EAAA5+E,WAAAs4E,YAAA5iG,GAAA/zC,KAAA28I,kBACA,MACA,YACA,YACAM,EAAA5+E,WAAAs4E,YAAA5iG,GAAA/zC,KAAA28I,kBAAA,GACA,MACA,gBACA,YACA,eACA,gBACA,oBACA,sBACAM,EAAA5+E,WAAAs4E,YAAA5iG,GAAA/zC,KAAA4/H,aACA,MACA,gBACAqd,EAAA5+E,WAAAs4E,YAAA5iG,GAAA/zC,KAAA88I,cACA,MAGA,QAAA/wJ,EAAA,EAAqBA,EAAAi8I,EAAAvnI,OAAwB1U,IAAA,CAC7CuiI,EAAA0Z,EAAAj8I,GAAAuiI,MACA8sB,EAAApT,EAAAj8I,GAAAqvJ,QACA,IAAA+B,EAAA,IAAAlD,EACAztI,EAAA2wI,EAAAnY,QAAAoW,EAAA7yE,EAAAvoE,KAAAs+D,qBACA7K,EAAA0pF,EAAA1pF,OACAjnD,IACAinD,GAAA,KAEAwpF,EAAAjV,YAAA5mI,MACA02H,UAAAxJ,EACA1rD,WAAAnP,EACArrD,MAAA+0I,EAAA/0I,MACA8yI,IAAAiC,EAAAjC,IACA34E,KAAA46E,EAAA56E,OAGA,OAAA06E,GAEArH,kBAAA,SAAAv3E,GACA,IAAAtqB,EACA,cAAAA,EAAA/zC,KAAA48I,YACA,SAAA7oG,EAIA,OADAA,EAAA/zC,KAAA48I,WACA7oG,GACA,iBACA,IAAAvwB,EAAAxjB,KAAA28I,kBACAt+E,EAAAsB,WAAAn8C,EACA,MACA,eACA,IACAo1B,EADAwkG,EAAAp9I,KAAA48I,WAEA,WAAAx+G,KAAAg/G,GAEa,CACbxkG,KACA,IAAAlqC,EAAA,EAAA+mC,SAAA2nG,EAAA,IACAp9I,KAAA48I,WACA,QAAA5iI,EAAA,EAA6BA,EAAAtL,EAAUsL,IAAA,CACvC+5B,EAAA/zC,KAAA48I,WACA,cAAA7oG,GAAA,QAAAA,EAEA,GADAA,EAAA/zC,KAAA48I,WACA,OAAA7oG,EACA,OAGA,WAAAA,EACA,MAEA,IAAAtmB,EAAAztB,KAAA68I,UACA78I,KAAA48I,WACA,IAAAtuB,EAAAtuH,KAAA48I,WACAhkG,EAAAnrB,GAAA6gG,EACAtuH,KAAA48I,iBApBAhkG,GAAA,EAAA6kB,EAAAvxC,aAAAkxH,GAuBA/+E,EAAAmkE,gBAAA5pF,EACA,MACA,eACA,IAAAinB,EAAA7/D,KAAA28I,kBACAt+E,EAAAyB,OAAA9+D,KAAAqD,IAAAw7D,EAAA,GAAAA,EAAA,IACAxB,EAAA0B,QAAA/+D,KAAAC,IAAA4+D,EAAA,GAAAA,EAAA,IACAxB,EAAA2B,cAAA,EACA,SAKA21E,EAzSA,GA2SAlqJ,EAAAkqJ,eAIA,SAAAnqJ,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAAqhI,mBAAArhI,EAAA0kI,aAAA3+H,EAEA,IAAA4iB,EAAAvoB,EAAA,GAEA4+C,EAAA5+C,EAAA,IAEAwoB,EAAAxoB,EAAA,GAEAwxJ,GACAC,eAAA,EACAC,MAAA,EACAC,OAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,kBAAA,GAEAztB,EAAA,WACA,SAAAA,KACA,EAAA/7G,EAAA9mB,aAAA,uCAgCA,OA9BA6iI,EAAAljI,WACA4wJ,WAAA,SAAA5gI,IACA,EAAA7I,EAAA9mB,aAAA,qCAAA2vB,KAGAkzG,EAAAC,aAAA,SAAAF,EAAA1sG,EAAApT,EAAAwS,EAAA1V,EAAA2V,GACA,IAAAlgB,GAAA,EAAA0R,EAAArB,UAAAk9G,KAAAvtH,KAAAutH,EACAlmH,EAAArH,EAAA/V,IAAA,eACA,IACA,OAAAod,GACA,KAAAqzI,EAAAE,MACA,KAAAF,EAAAG,OACA,WAAAM,EAAAC,YAAAp7I,EAAA6gB,EAAApT,EAAAwS,EAAAC,GACA,KAAAw6H,EAAAI,eACA,KAAAJ,EAAAK,kBACA,KAAAL,EAAAM,iBACA,KAAAN,EAAAO,kBACA,WAAAE,EAAAE,KAAA9tB,EAAA1sG,EAAApT,EAAAwS,EAAAC,GACA,QACA,UAAAzO,EAAAzkB,YAAA,4BAAAqa,IAEK,MAAAzK,GACL,GAAAA,aAAA6U,EAAA5jB,qBACA,MAAA+O,EAIA,OAFA2N,EAAAE,KAAA,sBAA0CwrE,UAAAxkE,EAAAjjB,qBAAAuN,kBAC1C,EAAA0V,EAAA7mB,MAAAgS,GACA,IAAAu+I,EAAAG,QAGA9tB,EAlCA,GAoCA2tB,KAwsBA,SAAAhxB,EAAAxvF,EAAA36B,EAAAgG,GACA,IAAA6a,EAAA7gB,EAAAG,SAAA,UACAk+G,EAAA5sG,EAAAvkB,KAAAoV,cAAAtC,EAAAG,SAAA,SACAo7I,EAAAv7I,EAAA/V,IAAA,SACAuxJ,EAAAx7I,EAAA/V,IAAA,SACAwxJ,EAAAz7I,EAAA/V,IAAA,aACAyxJ,EAAA17I,EAAA/V,IAAA,cACA,GAAAo0H,EAAA,GAAAA,EAAA,QAAAA,EAAA,GAAAA,EAAA,OACA,UAAA5sG,EAAAzkB,YAAA,4CAAAqxH,EAAA,MAEA,uBAAAr4G,EAAA20B,EAAA9Z,EAAAw9F,EAAAk9B,EAAAC,EAAAC,EAAAC,GAjtBAP,EAAAQ,aAAA,KACAR,EAAAC,YAAA,WACA,SAAAA,EAAAp7I,EAAA6gB,EAAApT,EAAAwS,EAAAC,GACA7iB,KAAAwjB,SACAxjB,KAAAu+I,UAAA57I,EAAAG,SAAA,UACA9C,KAAAw+I,YAAA77I,EAAA/V,IAAA,eACAoT,KAAAgK,KAAA,UACA,IAAA2Y,EAAAhgB,EAAA/V,IAAA,mBACA+1B,EAAA8nB,EAAAxqB,WAAAyC,MAAAC,EAAAvS,EAAAwS,EAAAC,GACA7iB,KAAA2iB,KACA,IAAA87H,EAAA,EACAzoF,EAAA,EACA,GAAArzD,EAAA4O,IAAA,WACA,IAAAmtI,EAAA/7I,EAAAG,SAAA,UACA27I,EAAAC,EAAA,GACA1oF,EAAA0oF,EAAA,GAEA,IAAAC,GAAA,EACAC,GAAA,EACA,GAAAj8I,EAAA4O,IAAA,WACA,IAAAstI,EAAAl8I,EAAAG,SAAA,UACA67I,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAEA,GAAA7+I,KAAAw+I,cAAAnB,EAAAG,UAAAmB,IAAAC,GAAA,CACA,IAAAjiG,EAAA38C,KAAAu+I,UAAA,GACAvhG,EAAAh9C,KAAAu+I,UAAA,GACAO,EAAA9+I,KAAAu+I,UAAA,GACA7qH,EAAA1zB,KAAAu+I,UAAA,GACAn0F,EAAApqD,KAAAu+I,UAAA,GACAQ,EAAA/+I,KAAAu+I,UAAA,GACAS,EAAAh+I,KAAA8D,MAAA63C,EAAAjpB,IAAAipB,EAAAjpB,IAAAspB,EAAAoN,IAAApN,EAAAoN,IACA00F,GAAAC,EAAAC,GAAAD,GAAAD,EAAAE,IACA,EAAA5qI,EAAA7mB,MAAA,gCAGAyS,KAAA2+I,cACA3+I,KAAA4+I,YACA,IAAAj0E,EAAAhoE,EAAA/V,IAAA,YACAie,EAAAgY,EAAAo8H,gBAAAt0E,GACAmD,EAAA9X,EAAAyoF,EACAlxH,EAAAugD,EAAA,GACAoxE,EAAAl/I,KAAAk/I,cACA,GAAAT,GAAAzoF,GAAAzoC,GAAA,GACA,EAAAnZ,EAAArlB,MAAA,2BADA,CAOA,IAHA,IAEAu9C,EAFAhkB,EAAA,IAAApD,aAAAvC,EAAAP,UACA+8H,EAAA,IAAAj6H,aAAA,GAEAn5B,EAAA0yJ,EAAoB1yJ,GAAAiqE,EAASjqE,GAAAwhC,EAAA,CAC7B4xH,EAAA,GAAApzJ,EACA8e,EAAAs0I,EAAA,EAAA72H,EAAA,GACAgkB,EAAA3pB,EAAAxB,OAAAmH,EAAA,GACA,IAAA82H,EAAAhrI,EAAAvkB,KAAAwT,WAAAipC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA4yG,EAAA99I,OAAArV,EAAA0yJ,GAAA3wE,EAAAsxE,IAEA,IAAAC,EAAA,cACA18I,EAAA4O,IAAA,gBACA+6B,EAAA3pB,EAAAxB,OAAAxe,EAAA/V,IAAA,iBACAyyJ,EAAAjrI,EAAAvkB,KAAAwT,WAAAipC,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAqyG,IACAO,EAAA34I,SAAA,EAAA84I,IACAH,EAAA,OAAApB,EAAAQ,cAEAM,IACAM,IAAAz+I,OAAA,OAAAq9I,EAAAQ,aACAY,EAAA99I,MAAA,EAAAi+I,KAEAr/I,KAAAk/I,cAmCA,OAjCAnB,EAAA9wJ,WACAwqC,MAAA,WACA,IAEAztB,EAAA2vG,EAAA31G,EAAAs7I,EAAAR,EAFAP,EAAAv+I,KAAAu+I,UACAC,EAAAx+I,KAAAw+I,YAEAA,IAAAnB,EAAAE,OACA5jC,GAAA4kC,EAAA,GAAAA,EAAA,IACAv6I,GAAAu6I,EAAA,GAAAA,EAAA,IACAe,EAAA,KACAR,EAAA,KACA90I,EAAA,SACOw0I,IAAAnB,EAAAG,QACP7jC,GAAA4kC,EAAA,GAAAA,EAAA,IACAv6I,GAAAu6I,EAAA,GAAAA,EAAA,IACAe,EAAAf,EAAA,GACAO,EAAAP,EAAA,GACAv0I,EAAA,WAEA,EAAAoK,EAAA9mB,aAAA,4BAAAkxJ,GAEA,IAAAh7H,EAAAxjB,KAAAwjB,OACA,GAAAA,IACAm2F,EAAAvlG,EAAAvkB,KAAA8T,eAAAg2G,EAAAn2F,GACAxf,EAAAoQ,EAAAvkB,KAAA8T,eAAAK,EAAAwf,GACAg7H,IAAAnB,EAAAG,QAAA,CACA,IAAA/1I,EAAA2M,EAAAvkB,KAAA4U,8BAAA+e,GACA87H,GAAA73I,EAAA,GACAq3I,GAAAr3I,EAAA,GAGA,qBAAAuC,EAAAhK,KAAAk/I,WAAAvlC,EAAA31G,EAAAs7I,EAAAR,KAGAf,EAxGA,GA0GAD,EAAAE,KAAA,WACA,SAAAuB,EAAAlzI,EAAAssB,GACA34B,KAAAqM,SACArM,KAAA24B,UACA34B,KAAAwC,OAAA,EACAxC,KAAAsV,aAAA,EACA,IAAA8M,EAAAuW,EAAAvW,SACApiB,KAAAw/I,YAAA,IAAAt6H,aAAA9C,GACA,IAAAq9H,EAAA9mH,EAAAswF,WAAA7mG,SACApiB,KAAA0/I,cAAA/mH,EAAAgnH,QAAA,IAAAz6H,aAAAu6H,GAAAz/I,KAAAw/I,YA0EA,SAAAI,EAAAC,EAAAvrE,GACA,IAAAwrE,EAAAD,EAAAC,OACA3mI,EAAA0mI,EAAA1mI,OACA02D,KACAkwE,KACAC,EAAA,EACA,MAAA1rE,EAAA2rE,QAAA,CACA,IAAAxgI,EAAA60D,EAAA4rE,WACAC,EAAA7rE,EAAA8rE,iBACA93H,EAAAgsD,EAAA+rE,iBACA,OAAAL,EAAA,CACA,QAAAvgI,MAAA,GACA,UAAArL,EAAAzkB,YAAA,sBAEA,OAAA8vB,GACA,OACAugI,EAAA,EACA,MACA,OACAD,EAAA3+I,KAAA2+I,IAAAt/I,OAAA,GAAAs/I,IAAAt/I,OAAA,IACAu/I,EAAA,EACA,MACA,OACAD,EAAA3+I,KAAA2+I,IAAAt/I,OAAA,GAAAs/I,IAAAt/I,OAAA,IACAu/I,EAAA,EACA,MAEAnwE,EAAAzuE,KAAAqe,GAEAsgI,EAAA3+I,KAAA0+I,EAAAr/I,QACAq/I,EAAA1+I,KAAA++I,GACAhnI,EAAA/X,KAAAknB,GACA03H,IACA1rE,EAAAgsE,QAEAT,EAAAU,QAAAn/I,MACA4I,KAAA,YACA81I,OAAA,IAAA1pI,WAAA2pI,GACA5mI,OAAA,IAAA/C,WAAA2pI,KAGA,SAAAS,EAAAX,EAAAvrE,EAAAmsE,GACA,IAAAX,EAAAD,EAAAC,OACA3mI,EAAA0mI,EAAA1mI,OACA4mI,KACA,MAAAzrE,EAAA2rE,QAAA,CACA,IAAAE,EAAA7rE,EAAA8rE,iBACA93H,EAAAgsD,EAAA+rE,iBACAN,EAAA3+I,KAAA0+I,EAAAr/I,QACAq/I,EAAA1+I,KAAA++I,GACAhnI,EAAA/X,KAAAknB,GAEAu3H,EAAAU,QAAAn/I,MACA4I,KAAA,UACA81I,OAAA,IAAA1pI,WAAA2pI,GACA5mI,OAAA,IAAA/C,WAAA2pI,GACAU,mBAhIAlB,EAAAtyJ,WACAgzJ,cACA,GAAAjgJ,KAAAqM,OAAAjM,IACA,OAAAJ,KAAAqM,OAAAvK,IAAA9B,KAAAqM,OAAAjM,IAEA,GAAAJ,KAAAsV,aAAA,EACA,SAEA,IAAA2hG,EAAAj3G,KAAAqM,OAAAmI,UACA,QAAAyiG,EAAA,KAGAj3G,KAAAwC,OAAAy0G,EACAj3G,KAAAsV,aAAA,GACA,IAEA8G,SAAA,SAAAvvB,GACA,IAAA2V,EAAAxC,KAAAwC,OACA8S,EAAAtV,KAAAsV,aACA,QAAAzoB,EAAA,CACA,OAAAyoB,EACA,OAAAtV,KAAAqM,OAAAmI,WAAA,GAAAxU,KAAAqM,OAAAmI,WAAA,GAAAxU,KAAAqM,OAAAmI,WAAA,EAAAxU,KAAAqM,OAAAmI,aAAA,EAEAhS,KAAA,GAAAxC,KAAAqM,OAAAmI,WAAA,GAAAxU,KAAAqM,OAAAmI,WAAA,EAAAxU,KAAAqM,OAAAmI,UACA,IAAAyiG,EAAAj3G,KAAAqM,OAAAmI,UAEA,OADAxU,KAAAwC,OAAAy0G,GAAA,GAAA3hG,GAAA,GACA9S,GAAA,EAAA8S,GAAA,IAAA2hG,IAAA3hG,KAAA,EAEA,OAAAzoB,GAAA,IAAAyoB,EACA,OAAAtV,KAAAqM,OAAAmI,UAEA,MAAAc,EAAAzoB,EACA2V,KAAA,EAAAxC,KAAAqM,OAAAmI,UACAc,GAAA,EAKA,OAHAA,GAAAzoB,EACAmT,KAAAsV,eACAtV,KAAAwC,UAAA,GAAA8S,GAAA,EACA9S,GAAA8S,GAEAgrI,MAAA,WACAtgJ,KAAAwC,OAAA,EACAxC,KAAAsV,aAAA,GAEA4qI,SAAA,WACA,OAAAlgJ,KAAAoc,SAAApc,KAAA24B,QAAA+nH,cAEAN,eAAA,WACA,IAAAO,EAAA3gJ,KAAA24B,QAAAgoH,kBACAtzE,EAAArtE,KAAAoc,SAAAukI,GACAC,EAAA5gJ,KAAAoc,SAAAukI,GACA/7H,EAAA5kB,KAAA24B,QAAA/T,OACAnd,EAAAk5I,EAAA,UAAAA,GAAA,0BACA,OAAAtzE,EAAA5lE,GAAAmd,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAg8H,EAAAn5I,GAAAmd,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAEAy7H,eAAA,WAMA,IALA,IAAAj+H,EAAApiB,KAAA24B,QAAAvW,SACA4U,EAAAh3B,KAAA24B,QAAA3B,iBACAvvB,EAAAuvB,EAAA,UAAAA,GAAA,0BACApS,EAAA5kB,KAAA24B,QAAA/T,OACAu4B,EAAAn9C,KAAAw/I,YACAzzJ,EAAA,EAAAiuB,EAAA,EAA4BjuB,EAAAq2B,EAAcr2B,IAAAiuB,GAAA,GAC1C,IAAA6mI,EAAA7gJ,KAAAoc,SAAA4a,GACAmmB,EAAApxD,GAAA80J,EAAAp5I,GAAAmd,EAAA5K,EAAA,GAAA4K,EAAA5K,IAAA4K,EAAA5K,GAEA,IAAAsO,EAAAtoB,KAAA0/I,cAIA,OAHA1/I,KAAA24B,QAAAgnH,SACA3/I,KAAA24B,QAAAgnH,QAAAxiG,EAAA,EAAA70B,EAAA,GAEAtoB,KAAA24B,QAAAswF,WAAA9nG,OAAAmH,EAAA,KA8DA,IAAAw4H,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,WACA,SAAAC,EAAAz/H,GAEA,IADA,IAAA0/H,KACAp1J,EAAA,EAAqBA,GAAA01B,EAAY11B,IAAA,CACjC,IAAA4rB,EAAA5rB,EAAA01B,EACA2/H,EAAA,EAAAzpI,EACAwpI,EAAA//I,KAAA,IAAA8jB,cAAAk8H,MAAA,EAAAzpI,EAAAypI,IAAA,EAAAzpI,IAAAypI,EAAAzpI,SAEA,OAAAwpI,EAEA,IAAA3vG,KACA,gBAAA/vB,GAIA,OAHA+vB,EAAA/vB,KACA+vB,EAAA/vB,GAAAy/H,EAAAz/H,IAEA+vB,EAAA/vB,IAfA,GAkBA,SAAA4/H,EAAAxB,EAAApyH,GACA,IAAA6zH,EAAAzB,EAAAU,QAAA9yH,IACA,EAAArZ,EAAA5kB,QAAA,UAAA8xJ,EAAAt3I,KAAA,gCACA,IAAA81I,EAAAD,EAAAC,OACA3mI,EAAA0mI,EAAA1mI,OACAuoC,EAAA4/F,EAAAxB,OACAe,EAAAS,EAAAnoI,OACAooI,EAAAvgJ,KAAAC,IAAA6+I,EAAAp+F,EAAA,OAAAo+F,EAAAp+F,EAAA,OAAAo+F,EAAAp+F,EAAA,QAAAo+F,EAAAp+F,EAAA,SACA8/F,EAAAxgJ,KAAAC,IAAA6+I,EAAAp+F,EAAA,OAAAo+F,EAAAp+F,EAAA,OAAAo+F,EAAAp+F,EAAA,QAAAo+F,EAAAp+F,EAAA,SACA+/F,EAAAzgJ,KAAAqD,IAAAy7I,EAAAp+F,EAAA,OAAAo+F,EAAAp+F,EAAA,OAAAo+F,EAAAp+F,EAAA,QAAAo+F,EAAAp+F,EAAA,SACAggG,EAAA1gJ,KAAAqD,IAAAy7I,EAAAp+F,EAAA,OAAAo+F,EAAAp+F,EAAA,OAAAo+F,EAAAp+F,EAAA,QAAAo+F,EAAAp+F,EAAA,SACAigG,EAAA3gJ,KAAAkB,MAAAu/I,EAAAF,GAAAP,GAAAnB,EAAA1xE,OAAA,GAAA0xE,EAAA1xE,OAAA,KACAwzE,EAAA3gJ,KAAAqD,IAAAy8I,EAAA9/I,KAAAC,IAAA8/I,EAAAY,IACA,IAAAC,EAAA5gJ,KAAAkB,MAAAw/I,EAAAF,GAAAR,GAAAnB,EAAA1xE,OAAA,GAAA0xE,EAAA1xE,OAAA,KACAyzE,EAAA5gJ,KAAAqD,IAAAy8I,EAAA9/I,KAAAC,IAAA8/I,EAAAa,IAaA,IAZA,IAAAnB,EAAAkB,EAAA,EACAE,EAAA,IAAAzrI,YAAAwrI,EAAA,GAAAnB,GACAqB,EAAA,IAAA1rI,YAAAwrI,EAAA,GAAAnB,GACA7nI,EAAA,EACAmpI,EAAA,IAAAzgJ,WAAA,GACA0gJ,EAAA,IAAA1gJ,WAAA,GACAssE,EAAAz0D,EAAA0nI,EAAA,IACAhzE,EAAA10D,EAAA0nI,EAAA,IACA1E,EAAAhjI,EAAA0nI,EAAA,IACAoB,EAAA9oI,EAAA0nI,EAAA,IACAqB,EAAAjB,EAAAW,GACAO,EAAAlB,EAAAU,GACAtoG,EAAA,EAAqBA,GAAAuoG,EAAiBvoG,IAAA,CACtC0oG,EAAA,IAAAn0E,EAAA,IAAAg0E,EAAAvoG,GAAA8iG,EAAA,GAAA9iG,GAAAuoG,EAAA,EACAG,EAAA,IAAAn0E,EAAA,IAAAg0E,EAAAvoG,GAAA8iG,EAAA,GAAA9iG,GAAAuoG,EAAA,EACAG,EAAA,IAAAn0E,EAAA,IAAAg0E,EAAAvoG,GAAA8iG,EAAA,GAAA9iG,GAAAuoG,EAAA,EACAI,EAAA,IAAAn0E,EAAA,IAAA+zE,EAAAvoG,GAAA4oG,EAAA,GAAA5oG,GAAAuoG,EAAA,EACAI,EAAA,IAAAn0E,EAAA,IAAA+zE,EAAAvoG,GAAA4oG,EAAA,GAAA5oG,GAAAuoG,EAAA,EACAI,EAAA,IAAAn0E,EAAA,IAAA+zE,EAAAvoG,GAAA4oG,EAAA,GAAA5oG,GAAAuoG,EAAA,EACA,QAAA1rC,EAAA,EAAuBA,GAAAyrC,EAAiBzrC,IAAAt9F,IACxC,OAAAygC,OAAAuoG,GAAA,IAAA1rC,OAAAyrC,EAAA,CAMA,IAHA,IAAA1/I,EAAA,EACA4G,EAAA,EACAyT,EAAA,EACAvwB,EAAA,EAAuBA,GAAA,EAAQA,IAC/B,QAAAiuB,EAAA,EAAyBA,GAAA,EAAQA,IAAAsC,IAAA,CACjC,IAAApwB,EAAAg2J,EAAA7oG,GAAAttD,GAAAo2J,EAAAjsC,GAAAl8F,GACA/X,GAAA69I,EAAAp+F,EAAAplC,IAAA,GAAApwB,EACA2c,GAAAi3I,EAAAp+F,EAAAplC,IAAA,GAAApwB,EAGA21J,EAAAjpI,GAAAknI,EAAAr/I,OACAq/I,EAAA1+I,MAAAa,EAAA4G,IACAi5I,EAAAlpI,GAAAO,EAAA1Y,OACA,IAAA2hJ,EAAA,IAAA9gJ,WAAA,GACA8gJ,EAAA,IAAAL,EAAA,IAAAJ,EAAAzrC,GAAA8rC,EAAA,GAAA9rC,GAAAyrC,EAAA,EACAS,EAAA,IAAAL,EAAA,IAAAJ,EAAAzrC,GAAA8rC,EAAA,GAAA9rC,GAAAyrC,EAAA,EACAS,EAAA,IAAAL,EAAA,IAAAJ,EAAAzrC,GAAA8rC,EAAA,GAAA9rC,GAAAyrC,EAAA,EACAxoI,EAAA/X,KAAAghJ,IAGAP,EAAA,GAAAngG,EAAA,GACAogG,EAAA,GAAAjB,EAAA,GACAgB,EAAAF,GAAAjgG,EAAA,GACAogG,EAAAH,GAAAd,EAAA,GACAgB,EAAApB,EAAAmB,GAAAlgG,EAAA,IACAogG,EAAArB,EAAAmB,GAAAf,EAAA,GACAgB,EAAApB,EAAAmB,EAAAD,GAAAjgG,EAAA,IACAogG,EAAArB,EAAAmB,EAAAD,GAAAd,EAAA,GACAhB,EAAAU,QAAA9yH,IACAzjB,KAAA,UACA81I,OAAA+B,EACA1oI,OAAA2oI,EACArB,kBAGA,SAAA4B,EAAAxC,EAAAvrE,GACA,IAAAwrE,EAAAD,EAAAC,OACA3mI,EAAA0mI,EAAA1mI,OACA4mI,EAAA,IAAA3pI,WAAA,IACAuM,EAAA,IAAAvM,WAAA,GACA,MAAAk+D,EAAA2rE,QAAA,CACA,IAIAl0J,EAAA8V,EAJA4d,EAAA60D,EAAA4rE,WACA,QAAAzgI,MAAA,GACA,UAAArL,EAAAzkB,YAAA,sBAGA,IAAA+xD,EAAAo+F,EAAAr/I,OACA,IAAA1U,EAAA,EAAA8V,EAAA,IAAA4d,EAAA,KAAwC1zB,EAAA8V,EAAQ9V,IAChD+zJ,EAAA1+I,KAAAkzE,EAAA8rE,kBAEA,IAIAhqF,EAAA5C,EAAA2C,EAAAmsF,EAJAzB,EAAA1nI,EAAA1Y,OACA,IAAA1U,EAAA,EAAA8V,EAAA,IAAA4d,EAAA,IAAuC1zB,EAAA8V,EAAQ9V,IAC/CotB,EAAA/X,KAAAkzE,EAAA+rE,kBAGA,OAAA5gI,GACA,OACAsgI,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EACAq+F,EAAA,GAAAr+F,EAAA,GACAq+F,EAAA,GAAAr+F,EAAA,GACAq+F,EAAA,GAAAr+F,EAAA,EACA/+B,EAAA,GAAAk+H,EAAA,EACAl+H,EAAA,GAAAk+H,EAAA,EACAl+H,EAAA,GAAAk+H,EACAl+H,EAAA,GAAAk+H,EAAA,EACA,MACA,OACAzqF,EAAA2pF,EAAA,IACAvsF,EAAAusF,EAAA,IACA5pF,EAAA4pF,EAAA,IACAuC,EAAAvC,EAAA,IACAA,EAAA,IAAAuC,EACAvC,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAA5pF,EACA4pF,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAvsF,EACAusF,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAA3pF,EACA2pF,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACA0U,EAAAzzC,EAAA,GACA6wC,EAAA7wC,EAAA,GACAA,EAAA,GAAA6wC,EACA7wC,EAAA,GAAAk+H,EACAl+H,EAAA,GAAAyzC,EACAzzC,EAAA,GAAAk+H,EAAA,EACA,MACA,OACAzqF,EAAA2pF,EAAA,IACAvsF,EAAAusF,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAvsF,EACAusF,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAA3pF,EACA2pF,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACA0U,EAAAzzC,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAk+H,EACAl+H,EAAA,GAAAyzC,EACAzzC,EAAA,GAAAk+H,EAAA,EACA,MACA,OACAd,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACA/+B,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAk+H,EACAl+H,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAk+H,EAAA,EACA,MAEAd,EAAA,GAAAD,EAAAr/I,OACAq/I,EAAA1+I,QAAA,EAAA0+I,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,eAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,aACAA,EAAA,GAAAD,EAAAr/I,OACAq/I,EAAA1+I,QAAA,EAAA0+I,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,gBAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,cACAA,EAAA,GAAAD,EAAAr/I,OACAq/I,EAAA1+I,QAAA,EAAA0+I,EAAAC,EAAA,QAAAD,EAAAC,EAAA,UAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,eAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,UAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,aACAA,EAAA,IAAAD,EAAAr/I,OACAq/I,EAAA1+I,QAAA,EAAA0+I,EAAAC,EAAA,QAAAD,EAAAC,EAAA,UAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,eAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,UAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,aACAF,EAAAU,QAAAn/I,MACA4I,KAAA,QACA81I,OAAA,IAAA1pI,WAAA2pI,GACA5mI,OAAA,IAAA/C,WAAAuM,MAIA,SAAA4/H,EAAA1C,EAAAvrE,GACA,IAAAwrE,EAAAD,EAAAC,OACA3mI,EAAA0mI,EAAA1mI,OACA4mI,EAAA,IAAA3pI,WAAA,IACAuM,EAAA,IAAAvM,WAAA,GACA,MAAAk+D,EAAA2rE,QAAA,CACA,IAIAl0J,EAAA8V,EAJA4d,EAAA60D,EAAA4rE,WACA,QAAAzgI,MAAA,GACA,UAAArL,EAAAzkB,YAAA,sBAGA,IAAA+xD,EAAAo+F,EAAAr/I,OACA,IAAA1U,EAAA,EAAA8V,EAAA,IAAA4d,EAAA,MAAyC1zB,EAAA8V,EAAQ9V,IACjD+zJ,EAAA1+I,KAAAkzE,EAAA8rE,kBAEA,IAIAhqF,EAAA5C,EAAA2C,EAAAmsF,EAJAzB,EAAA1nI,EAAA1Y,OACA,IAAA1U,EAAA,EAAA8V,EAAA,IAAA4d,EAAA,IAAuC1zB,EAAA8V,EAAQ9V,IAC/CotB,EAAA/X,KAAAkzE,EAAA+rE,kBAGA,OAAA5gI,GACA,OACAsgI,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,GACAq+F,EAAA,IAAAr+F,EAAA,GACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,GACAq+F,EAAA,GAAAr+F,EAAA,GACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EACAq+F,EAAA,GAAAr+F,EAAA,GACAq+F,EAAA,GAAAr+F,EAAA,GACAq+F,EAAA,GAAAr+F,EAAA,EACA/+B,EAAA,GAAAk+H,EAAA,EACAl+H,EAAA,GAAAk+H,EAAA,EACAl+H,EAAA,GAAAk+H,EACAl+H,EAAA,GAAAk+H,EAAA,EACA,MACA,OACAzqF,EAAA2pF,EAAA,IACAvsF,EAAAusF,EAAA,IACA5pF,EAAA4pF,EAAA,IACAuC,EAAAvC,EAAA,IACAA,EAAA,IAAAuC,EACAvC,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAA5pF,EACA4pF,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,GACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAvsF,EACAusF,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,GACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAA3pF,EACA2pF,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACA0U,EAAAzzC,EAAA,GACA6wC,EAAA7wC,EAAA,GACAA,EAAA,GAAA6wC,EACA7wC,EAAA,GAAAk+H,EACAl+H,EAAA,GAAAyzC,EACAzzC,EAAA,GAAAk+H,EAAA,EACA,MACA,OACAzqF,EAAA2pF,EAAA,IACAvsF,EAAAusF,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,GACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAvsF,EACAusF,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,GACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAA3pF,EACA2pF,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACA0U,EAAAzzC,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAk+H,EACAl+H,EAAA,GAAAyzC,EACAzzC,EAAA,GAAAk+H,EAAA,EACA,MACA,OACAd,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,IAAAr+F,EAAA,GACAq+F,EAAA,IAAAr+F,EAAA,EACAq+F,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,GACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACAq+F,EAAA,GAAAr+F,EAAA,EACA/+B,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAk+H,EACAl+H,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAk+H,EAAA,EACA,MAEAhB,EAAAU,QAAAn/I,MACA4I,KAAA,QACA81I,OAAA,IAAA1pI,WAAA2pI,GACA5mI,OAAA,IAAA/C,WAAAuM,MAIA,SAAA6/H,EAAA3C,GAKA,IAJA,IAAAz6C,EAAAy6C,EAAAC,OAAA,MACAz6C,EAAAw6C,EAAAC,OAAA,MACAxmH,EAAA8rE,EACA6b,EAAA5b,EACAt5G,EAAA,EAAA8V,EAAAg+I,EAAAC,OAAAr/I,OAA4C1U,EAAA8V,EAAQ9V,IAAA,CACpD,IAAAkW,EAAA49I,EAAAC,OAAA/zJ,GAAA,GACA8c,EAAAg3I,EAAAC,OAAA/zJ,GAAA,GACAq5G,IAAAnjG,IAAAmjG,EACAC,IAAAx8F,IAAAw8F,EACA/rE,IAAAr3B,IAAAq3B,EACA2nF,IAAAp4G,IAAAo4G,EAEA4+B,EAAA1xE,QAAAi3B,EAAAC,EAAA/rE,EAAA2nF,GAEA,SAAAwhC,EAAA5C,GACA,IAAA9zJ,EAAA8V,EAAAmY,EAAAy0B,EACAqxG,EAAAD,EAAAC,OACA4C,EAAA,IAAAx9H,aAAA,EAAA46H,EAAAr/I,QACA,IAAA1U,EAAA,EAAAiuB,EAAA,EAAAnY,EAAAi+I,EAAAr/I,OAA0C1U,EAAA8V,EAAQ9V,IAAA,CAClD,IAAA42J,EAAA7C,EAAA/zJ,GACA22J,EAAA1oI,KAAA2oI,EAAA,GACAD,EAAA1oI,KAAA2oI,EAAA,GAEA9C,EAAAC,OAAA4C,EACA,IAAAvpI,EAAA0mI,EAAA1mI,OACAypI,EAAA,IAAAthJ,WAAA,EAAA6X,EAAA1Y,QACA,IAAA1U,EAAA,EAAAiuB,EAAA,EAAAnY,EAAAsX,EAAA1Y,OAA0C1U,EAAA8V,EAAQ9V,IAAA,CAClD,IAAAI,EAAAgtB,EAAAptB,GACA62J,EAAA5oI,KAAA7tB,EAAA,GACAy2J,EAAA5oI,KAAA7tB,EAAA,GACAy2J,EAAA5oI,KAAA7tB,EAAA,GAEA0zJ,EAAA1mI,OAAAypI,EACA,IAAArC,EAAAV,EAAAU,QACA,IAAAx0J,EAAA,EAAA8V,EAAA0+I,EAAA9/I,OAAoC1U,EAAA8V,EAAQ9V,IAAA,CAC5C,IAAAu1J,EAAAf,EAAAx0J,GACAg0J,EAAAuB,EAAAxB,OACAn9H,EAAA2+H,EAAAnoI,OACA,IAAAa,EAAA,EAAAy0B,EAAAsxG,EAAAt/I,OAAiCuZ,EAAAy0B,EAAQz0B,IACzC+lI,EAAA/lI,IAAA,EACA2I,EAAA3I,IAAA,GAIA,SAAAgkI,EAAA3xI,EAAAmX,EAAApT,EAAAwS,EAAAC,GACA,OAAAxO,EAAArB,UAAA3G,GACA,UAAA+H,EAAAzkB,YAAA,6BAEA,IAAAgT,EAAA0J,EAAA1J,KACA3C,KAAAwjB,SACAxjB,KAAAw+I,YAAA77I,EAAA/V,IAAA,eACAoT,KAAAgK,KAAA,UACAhK,KAAAghH,KAAAr+G,EAAAG,SAAA,QACA,IAAA6f,EAAAhgB,EAAA/V,IAAA,mBACA+1B,EAAA8nB,EAAAxqB,WAAAyC,MAAAC,EAAAvS,EAAAwS,EAAAC,GACA7iB,KAAA2iB,KACA3iB,KAAAq/I,WAAA18I,EAAA4O,IAAA,cAAAoR,EAAAxB,OAAAxe,EAAA/V,IAAA,sBACA,IAAA+9E,EAAAhoE,EAAA/V,IAAA,YACAie,EAAA8/D,EAAA9nD,EAAAo8H,gBAAAt0E,GAAA,KACA3qE,KAAA8/I,UACA9/I,KAAAmZ,UACAnZ,KAAAugJ,WACA,IAAAsC,GACAlC,kBAAAh+I,EAAA/V,IAAA,qBACAoqC,iBAAAr0B,EAAA/V,IAAA,oBACA8zJ,YAAA/9I,EAAA/V,IAAA,eACAg4B,OAAAjiB,EAAAG,SAAA,UACA68I,QAAA90I,EACAo+G,WAAAtmG,EACAP,SAAAvX,EAAA,EAAA8X,EAAAP,UAEAkyD,EAAA,IAAAirE,EAAAlzI,EAAAw2I,GACAC,GAAA,EACA,OAAA9iJ,KAAAw+I,aACA,KAAAnB,EAAAI,eACAmC,EAAA5/I,KAAAs0E,GACA,MACA,KAAA+oE,EAAAK,kBACA,IAAA+C,EAAA,EAAA99I,EAAA/V,IAAA,kBACA,GAAA6zJ,EAAA,EACA,UAAArsI,EAAAzkB,YAAA,0BAEA6wJ,EAAAxgJ,KAAAs0E,EAAAmsE,GACA,MACA,KAAApD,EAAAM,iBACA0E,EAAAriJ,KAAAs0E,GACAwuE,GAAA,EACA,MACA,KAAAzF,EAAAO,kBACA2E,EAAAviJ,KAAAs0E,GACAwuE,GAAA,EACA,MACA,SACA,EAAA1uI,EAAA9mB,aAAA,0BACA,MAEA,GAAAw1J,EAAA,CACAN,EAAAxiJ,MACA,QAAAjU,EAAA,EAAA8V,EAAA7B,KAAAugJ,QAAA9/I,OAA+C1U,EAAA8V,EAAQ9V,IACvDs1J,EAAArhJ,KAAAjU,GAGAy2J,EAAAxiJ,MACAyiJ,EAAAziJ,MAOA,OALAg+I,EAAA/wJ,WACAwqC,MAAA,WACA,cAAAz3B,KAAAw+I,YAAAx+I,KAAA8/I,OAAA9/I,KAAAmZ,OAAAnZ,KAAAugJ,QAAAvgJ,KAAAmuE,OAAAnuE,KAAAwjB,OAAAxjB,KAAAghH,KAAAhhH,KAAAq/I,cAGArB,EA/kBA,GAilBAF,EAAAG,MAAA,WACA,SAAAA,IACAj+I,KAAAgK,KAAA,UAOA,OALAi0I,EAAAhxJ,WACAwqC,MAAA,WACA,kBAGAwmH,EATA,GAuBAxyJ,EAAA0kI,UACA1kI,EAAAqhI,sBAIA,SAAAthI,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAA4oI,UAAA7iI,EAEA,IAAA4iB,EAAAvoB,EAAA,GAEAk3J,GAAA,moCACAC,GAAA,mzCACA,SAAAC,EAAAl3J,GACA,cAAAA,GAEA,SAAAm3J,EAAAn3J,GACA,cAAAA,GAEA,SAAAo3J,EAAA3hJ,EAAAW,EAAA9U,GACA,QAAA2sB,EAAA7X,EAAAssC,EAAAjtC,EAAAf,OAAsCuZ,EAAAy0B,IAAQz0B,EAC9C,GAAAxY,EAAAwY,KAAA3sB,EACA,OAAA2sB,EAGA,OAAAA,EAEA,SAAAopI,EAAA5hJ,EAAAW,EAAA/B,EAAA/S,GACA,QAAA2sB,EAAA7X,EAAqB6X,EAAA5Z,IAAS4Z,EAC9BxY,EAAAwY,GAAA3sB,EAGA,SAAAg2J,EAAA7hJ,EAAAW,EAAA/B,GACA,QAAArU,EAAAoW,EAAA6X,EAAA5Z,EAAA,EAAkCrU,EAAAiuB,IAAOjuB,IAAAiuB,EAAA,CACzC,IAAA2iE,EAAAn7E,EAAAzV,GACAyV,EAAAzV,GAAAyV,EAAAwY,GACAxY,EAAAwY,GAAA2iE,GAGA,SAAA2mE,EAAAhjJ,EAAAijJ,EAAAjxB,GACA,OACAhyH,MACAg0H,IAAAhC,EAAA,MAAAixB,EAAA,aAGA,IAAAt5E,KACA1E,KACA,SAAA8uD,EAAA/zH,EAAAkjJ,EAAAlxB,GACA,IAAAixB,GAAA,EACAE,EAAAnjJ,EAAAG,OACA,OAAAgjJ,GAAAnxB,EACA,OAAAgxB,EAAAhjJ,EAAAijJ,EAAAjxB,GAEAroD,EAAAxpE,OAAAgjJ,EACAl+E,EAAA9kE,OAAAgjJ,EACA,IACA13J,EAAA8V,EADA6hJ,EAAA,EAEA,IAAA33J,EAAA,EAAaA,EAAA03J,IAAe13J,EAAA,CAC5Bk+E,EAAAl+E,GAAAuU,EAAA6I,OAAApd,GACA,IAAAitI,EAAA14H,EAAAiB,WAAAxV,GACA43J,EAAA,IACA3qB,GAAA,IACA2qB,EAAAZ,EAAA/pB,GACK,MAAAA,MAAA,KACL2qB,EAAA,IACK,MAAA3qB,MAAA,MACL2qB,EAAAX,EAAA,IAAAhqB,GACA2qB,IACA,EAAAvvI,EAAA7mB,MAAA,mCAAAyrI,EAAA9tH,SAAA,MAEK,MAAA8tH,MAAA,OACL2qB,EAAA,MAEA,MAAAA,GAAA,OAAAA,GAAA,OAAAA,GACAD,IAEAn+E,EAAAx5E,GAAA43J,EAEA,OAAAD,EAEA,OADAH,GAAA,EACAD,EAAAhjJ,EAAAijJ,IAEA,IAAAC,IACAE,EAAAD,EAAA,IACAF,GAAA,EACAC,EAAA,IAEAD,GAAA,EACAC,EAAA,IAGA,IAAAl2F,KACA,IAAAvhE,EAAA,EAAaA,EAAA03J,IAAe13J,EAC5BuhE,EAAAvhE,GAAAy3J,EAEA,IAYA7rI,EAZA1Y,EAAAgkJ,EAAAO,GAAA,QACAI,EAAA3kJ,EACA4kJ,EAAAD,EACAE,EAAAF,EACA,IAAA73J,EAAA,EAAaA,EAAA03J,IAAe13J,EAC5B,QAAAw5E,EAAAx5E,GACAw5E,EAAAx5E,GAAA+3J,EAEAA,EAAAv+E,EAAAx5E,GAKA,IAFA+3J,EAAAF,EAEA73J,EAAA,EAAaA,EAAA03J,IAAe13J,EAC5B4rB,EAAA4tD,EAAAx5E,GACA,OAAA4rB,EACA4tD,EAAAx5E,GAAA,OAAA+3J,EAAA,UACK,MAAAnsI,GAAA,MAAAA,GAAA,OAAAA,IACLmsI,EAAAnsI,GAGA,IAAA5rB,EAAA,EAAaA,EAAA03J,IAAe13J,EAC5B4rB,EAAA4tD,EAAAx5E,GACA,OAAA4rB,IACA4tD,EAAAx5E,GAAA,KAGA,IAAAA,EAAA,EAAaA,EAAA03J,EAAA,IAAmB13J,EAChC,OAAAw5E,EAAAx5E,IAAA,OAAAw5E,EAAAx5E,EAAA,WAAAw5E,EAAAx5E,EAAA,KACAw5E,EAAAx5E,GAAA,MAEA,OAAAw5E,EAAAx5E,IAAA,OAAAw5E,EAAAx5E,EAAA,WAAAw5E,EAAAx5E,EAAA,IAAAw5E,EAAAx5E,EAAA,KAAAw5E,EAAAx5E,EAAA,KACAw5E,EAAAx5E,GAAAw5E,EAAAx5E,EAAA,IAGA,IAAAA,EAAA,EAAaA,EAAA03J,IAAe13J,EAC5B,UAAAw5E,EAAAx5E,GAAA,CACA,IAAAiuB,EACA,IAAAA,EAAAjuB,EAAA,EAAqBiuB,GAAA,IAAQA,EAAA,CAC7B,UAAAurD,EAAAvrD,GACA,MAEAurD,EAAAvrD,GAAA,KAEA,IAAAA,EAAAjuB,EAAA,EAAqBiuB,EAAAypI,IAAezpI,EAAA,CACpC,UAAAurD,EAAAvrD,GACA,MAEAurD,EAAAvrD,GAAA,MAIA,IAAAjuB,EAAA,EAAaA,EAAA03J,IAAe13J,EAC5B4rB,EAAA4tD,EAAAx5E,GACA,OAAA4rB,GAAA,OAAAA,GAAA,OAAAA,GAAA,OAAAA,IACA4tD,EAAAx5E,GAAA,MAIA,IADA+3J,EAAAF,EACA73J,EAAA,EAAaA,EAAA03J,IAAe13J,EAC5B4rB,EAAA4tD,EAAAx5E,GACA,OAAA4rB,EACA4tD,EAAAx5E,GAAA,MAAA+3J,EAAA,SACK,MAAAnsI,GAAA,MAAAA,IACLmsI,EAAAnsI,GAGA,IAAA5rB,EAAA,EAAaA,EAAA03J,IAAe13J,EAC5B,UAAAw5E,EAAAx5E,GAAA,CACA,IAAAqU,EAAA+iJ,EAAA59E,EAAAx5E,EAAA,QACAg4J,EAAAH,EACA73J,EAAA,IACAg4J,EAAAx+E,EAAAx5E,EAAA,IAEA,IAAAi4J,EAAAH,EACAzjJ,EAAA,EAAAqjJ,IACAO,EAAAz+E,EAAAnlE,EAAA,IAEA,MAAA2jJ,IACAA,EAAA,KAEA,MAAAC,IACAA,EAAA,KAEAD,IAAAC,GACAZ,EAAA79E,EAAAx5E,EAAAqU,EAAA2jJ,GAEAh4J,EAAAqU,EAAA,EAGA,IAAArU,EAAA,EAAaA,EAAA03J,IAAe13J,EAC5B,OAAAw5E,EAAAx5E,KACAw5E,EAAAx5E,GAAAkT,GAGA,IAAAlT,EAAA,EAAaA,EAAA03J,IAAe13J,EAC5B4rB,EAAA4tD,EAAAx5E,GACAm3J,EAAA51F,EAAAvhE,IACA,MAAA4rB,EACA21C,EAAAvhE,IAAA,EACO,OAAA4rB,GAAA,OAAAA,IACP21C,EAAAvhE,IAAA,GAGA,MAAA4rB,GAAA,OAAAA,GAAA,OAAAA,IACA21C,EAAAvhE,IAAA,GAIA,IAEA8R,EAFAomJ,GAAA,EACAC,EAAA,GAEA,IAAAn4J,EAAA,EAAA8V,EAAAyrD,EAAA7sD,OAAiC1U,EAAA8V,IAAQ9V,EACzC8R,EAAAyvD,EAAAvhE,GACAk4J,EAAApmJ,IACAomJ,EAAApmJ,GAEAqmJ,EAAArmJ,GAAAolJ,EAAAplJ,KACAqmJ,EAAArmJ,GAGA,IAAAA,EAAAomJ,EAA4BpmJ,GAAAqmJ,IAAyBrmJ,EAAA,CACrD,IAAAsE,GAAA,EACA,IAAApW,EAAA,EAAA8V,EAAAyrD,EAAA7sD,OAAmC1U,EAAA8V,IAAQ9V,EAC3CuhE,EAAAvhE,GAAA8R,EACAsE,GAAA,IACAkhJ,EAAAp5E,EAAA9nE,EAAApW,GACAoW,GAAA,GAEOA,EAAA,IACPA,EAAApW,GAGAoW,GAAA,GACAkhJ,EAAAp5E,EAAA9nE,EAAAmrD,EAAA7sD,QAGA,IAAA1U,EAAA,EAAA8V,EAAAooE,EAAAxpE,OAAgC1U,EAAA8V,IAAQ9V,EAAA,CACxC,IAAAyd,EAAAygE,EAAAl+E,GACA,MAAAyd,GAAA,MAAAA,IACAygE,EAAAl+E,GAAA,IAGA,OAAAu3J,EAAAr5E,EAAA5oE,KAAA,IAAAkiJ,GAEA93J,EAAA4oI,QAIA,SAAA7oI,EAAAC,EAAAI,GAEA,aAGAW,OAAAC,eAAAhB,EAAA,cACA4B,OAAA,IAEA5B,EAAA4uI,gBAAA7oI,EAEA,IAAA4iB,EAAAvoB,EAAA,GAEAwuI,GAAA,EAAAjmH,EAAAnlB,uBAAA,SAAA0oB,GACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,2BACAA,EAAA,uBACAA,EAAA,gBAAAvD,EAAAnlB,uBAAA,SAAA0oB,GACAA,EAAA,aACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,sBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,aACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,aACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cAEAA,EAAA,qBAAAvD,EAAAnlB,uBAAA,SAAA0oB,GACAA,EAAA,aACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,sBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,aACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,aACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cAEAA,EAAA,4BAAAvD,EAAAnlB,uBAAA,SAAA0oB,GACAA,EAAA,aACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,sBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,aACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,aACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cAEAA,EAAA,wBAAAvD,EAAAnlB,uBAAA,SAAA0oB,GACAA,EAAA,aACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,sBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,aACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,aACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cAEAA,EAAA,aAAAvD,EAAAnlB,uBAAA,SAAA0oB,GACAA,EAAA,aACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,oBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,aACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,aACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,aACAA,EAAA,UACAA,EAAA,WACAA,EAAA,YACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,aACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,aACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,aACAA,EAAA,UACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,eACAA,EAAA,YACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,sBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,sBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,sBACAA,EAAA,sBACAA,EAAA,iBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,eACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,sBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,qBACAA,EAAA,oBACAA,EAAA,kBACAA,EAAA,qBACAA,EAAA,oBACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,sBACAA,EAAA,sBACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,oBACAA,EAAA,eAEAA,EAAA,kBAAAvD,EAAAnlB,uBAAA,SAAA0oB,GACAA,EAAA,aACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,sBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,aACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,aACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cAEAA,EAAA,iBAAAvD,EAAAnlB,uBAAA,SAAA0oB,GACAA,EAAA,aACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,sBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,aACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,aACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cAEAA,EAAA,uBAAAvD,EAAAnlB,uBAAA,SAAA0oB,GACAA,EAAA,aACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,sBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,aACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,aACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cAEAA,EAAA,mBAAAvD,EAAAnlB,uBAAA,SAAA0oB,GACAA,EAAA,aACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,sBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,aACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,aACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,oBACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,cAEAA,EAAA,mBAAAvD,EAAAnlB,uBAAA,SAAA0oB,GACAA,EAAA,aACAA,EAAA,UACAA,EAAA,UACAA,EAAA,YACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,aACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,Y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","file":"js/chunk-2d0c8c14.b8b01000.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsWorker = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 73);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.getInheritableProperty = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(75);\n\nvar _streams_polyfill = __w_pdfjs_require__(130);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VerbosityLevel.WARNINGS;\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction getInheritableProperty(_ref) {\n  var dict = _ref.dict,\n      key = _ref.key,\n      _ref$getArray = _ref.getArray,\n      getArray = _ref$getArray === undefined ? false : _ref$getArray,\n      _ref$stopWhenFound = _ref.stopWhenFound,\n      stopWhenFound = _ref$stopWhenFound === undefined ? true : _ref$stopWhenFound;\n\n  var LOOP_LIMIT = 100;\n  var loopCount = 0;\n  var values = void 0;\n  while (dict) {\n    var value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      if (!values) {\n        values = [];\n      }\n      values.push(value);\n    }\n    if (++loopCount > LOOP_LIMIT) {\n      warn('getInheritableProperty: maximum loop count exceeded for \"' + key + '\"');\n      break;\n    }\n    dict = dict.get('Parent');\n  }\n  return values;\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new AbortException(reason.message);\n    case 'MissingPDFException':\n      return new MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n    return reason;\n  }\n  return new UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _streams_polyfill.ReadableStream({\n      start: function start(controller) {\n        var startCapability = createPromiseCapability();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = createPromiseCapability();\n    var sendStreamRequest = function sendStreamRequest(_ref2) {\n      var stream = _ref2.stream,\n          chunk = _ref2.chunk,\n          transfers = _ref2.transfers,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref3) {\n      var stream = _ref3.stream,\n          success = _ref3.success,\n          reason = _ref3.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VerbosityLevel = VerbosityLevel;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getInheritableProperty = getInheritableProperty;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(47)('wks');\nvar uid = __w_pdfjs_require__(22);\nvar _Symbol = __w_pdfjs_require__(6).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar core = __w_pdfjs_require__(7);\nvar hide = __w_pdfjs_require__(12);\nvar redefine = __w_pdfjs_require__(9);\nvar ctx = __w_pdfjs_require__(11);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(10);\nvar SRC = __w_pdfjs_require__(22)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(7).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(17);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(16);\nvar createDesc = __w_pdfjs_require__(29);\nmodule.exports = __w_pdfjs_require__(13) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(13) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(30);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(98);\nvar enumBugKeys = __w_pdfjs_require__(53);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(16).f;\nvar has = __w_pdfjs_require__(10);\nvar TAG = __w_pdfjs_require__(2)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar call = __w_pdfjs_require__(103);\nvar isArrayIter = __w_pdfjs_require__(104);\nvar anObject = __w_pdfjs_require__(8);\nvar toLength = __w_pdfjs_require__(31);\nvar getIterFn = __w_pdfjs_require__(105);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt_stream = __w_pdfjs_require__(134);\n\nvar _jbig2_stream = __w_pdfjs_require__(135);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx_stream = __w_pdfjs_require__(138);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar MAX_ADLER32_LENGTH = 5552;\nfunction computeAdler32(bytes) {\n  var bytesLength = bytes.length;\n  if (bytesLength >= MAX_ADLER32_LENGTH) {\n    throw new Error('computeAdler32: The input is too large.');\n  }\n  var a = 1,\n      b = 0;\n  for (var i = 0; i < bytesLength; ++i) {\n    a += bytes[i] & 0xFF;\n    b += a;\n  }\n  return b % 65521 << 16 | a % 65521;\n}\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref),\n          dictLength = void 0;\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      if (lexer.beginInlineImagePos !== -1) {\n        dictLength = stream.pos - lexer.beginInlineImagePos;\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length = void 0;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var cacheKey = void 0;\n      if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var initialStreamPos = stream.pos;\n        stream.pos = lexer.beginInlineImagePos;\n        var dictBytes = stream.getBytes(dictLength);\n        stream.pos = initialStreamPos;\n        cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\n        var cacheEntry = this.imageCache[cacheKey];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (cacheKey !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\n        this.imageCache[cacheKey] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n    this.beginInlineImagePos = -1;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      if (str === 'BI') {\n        this.beginInlineImagePos = this.stream.pos;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar document = __w_pdfjs_require__(6).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nvar TAG = __w_pdfjs_require__(2)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(47)('keys');\nvar uid = __w_pdfjs_require__(22);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(17);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(9);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(22)('meta');\nvar isObject = __w_pdfjs_require__(3);\nvar has = __w_pdfjs_require__(10);\nvar setDesc = __w_pdfjs_require__(16).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(14)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _jpg = __w_pdfjs_require__(137);\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n};\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(13) && !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(28)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(18);\nvar toLength = __w_pdfjs_require__(31);\nvar toAbsoluteIndex = __w_pdfjs_require__(84);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(2)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(12)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar test = {};\ntest[__w_pdfjs_require__(2)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(9)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar $export = __w_pdfjs_require__(5);\nvar redefine = __w_pdfjs_require__(9);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar $iterCreate = __w_pdfjs_require__(95);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar getPrototypeOf = __w_pdfjs_require__(99);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(6).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(100);\nvar getKeys = __w_pdfjs_require__(24);\nvar redefine = __w_pdfjs_require__(9);\nvar global = __w_pdfjs_require__(6);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar wks = __w_pdfjs_require__(2);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar aFunction = __w_pdfjs_require__(17);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar invoke = __w_pdfjs_require__(106);\nvar html = __w_pdfjs_require__(54);\nvar cel = __w_pdfjs_require__(28);\nvar global = __w_pdfjs_require__(6);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(15)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar IObject = __w_pdfjs_require__(30);\nvar toObject = __w_pdfjs_require__(35);\nvar toLength = __w_pdfjs_require__(31);\nvar asc = __w_pdfjs_require__(113);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!chunksToRequest.includes(chunk)) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          if (labelDict.has('S')) {\n            var s = labelDict.get('S');\n            if (!(0, _primitives.isName)(s)) {\n              throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n            }\n            style = s.name;\n          } else {\n            style = null;\n          }\n          if (labelDict.has('P')) {\n            var p = labelDict.get('P');\n            if (!(0, _util.isString)(p)) {\n              throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n            }\n            prefix = (0, _util.stringToPDFString)(p);\n          } else {\n            prefix = '';\n          }\n          if (labelDict.has('St')) {\n            var st = labelDict.get('St');\n            if (!(Number.isInteger(st) && st >= 1)) {\n              throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n            }\n            currentIndex = st;\n          } else {\n            currentIndex = 1;\n          }\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n            currentLabel = '';\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          if (Number.isInteger(count) && count >= 0) {\n            var objId = currentNode.objId;\n            if (objId && !pageKidsCountCache.has(objId)) {\n              pageKidsCountCache.put(objId, count);\n            }\n            if (currentPageIndex + count <= pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\n              if (currentPageIndex === pageIndex) {\n                capability.resolve([currentNode, null]);\n                return;\n              }\n              currentPageIndex++;\n              continue;\n            }\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (!(0, _primitives.isDict)(kid)) {\n                throw new _util.FormatError('kid node must be a Dict.');\n              }\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push('verticallyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(4);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\n\nvar AESBaseCipher = function () {\n  function AESBaseCipher() {\n    _classCallCheck(this, AESBaseCipher);\n\n    if (this.constructor === AESBaseCipher) {\n      (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\n    }\n    this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n    this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n    this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n    this._mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n      if (i < 128) {\n        this._mixCol[i] = i << 1;\n      } else {\n        this._mixCol[i] = i << 1 ^ 0x1b;\n      }\n    }\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  _createClass(AESBaseCipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\n    }\n  }, {\n    key: '_decrypt',\n    value: function _decrypt(input, key) {\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var _j = 0; _j < 16; ++_j) {\n          state[_j] = this._inv_s[state[_j]];\n        }\n        for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\n          state[_j2] ^= key[_k];\n        }\n        for (var _j3 = 0; _j3 < 16; _j3 += 4) {\n          var s0 = this._mix[state[_j3]];\n          var s1 = this._mix[state[_j3 + 1]];\n          var s2 = this._mix[state[_j3 + 2]];\n          var s3 = this._mix[state[_j3 + 3]];\n          t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n          state[_j3] = t >>> 24 & 0xFF;\n          state[_j3 + 1] = t >> 16 & 0xFF;\n          state[_j3 + 2] = t >> 8 & 0xFF;\n          state[_j3 + 3] = t & 0xFF;\n        }\n      }\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (var _j4 = 0; _j4 < 16; ++_j4) {\n        state[_j4] = this._inv_s[state[_j4]];\n        state[_j4] ^= key[_j4];\n      }\n      return state;\n    }\n  }, {\n    key: '_encrypt',\n    value: function _encrypt(input, key) {\n      var s = this._s;\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0; j < 16; ++j) {\n        state[j] ^= key[j];\n      }\n      for (var i = 1; i < this._cyclesOfRepetition; i++) {\n        for (var _j5 = 0; _j5 < 16; ++_j5) {\n          state[_j5] = s[state[_j5]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var _j6 = 0; _j6 < 16; _j6 += 4) {\n          var s0 = state[_j6 + 0];\n          var s1 = state[_j6 + 1];\n          var s2 = state[_j6 + 2];\n          var s3 = state[_j6 + 3];\n          t = s0 ^ s1 ^ s2 ^ s3;\n          state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n          state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n          state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n          state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n        }\n        for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\n          state[_j7] ^= key[k];\n        }\n      }\n      for (var _j8 = 0; _j8 < 16; ++_j8) {\n        state[_j8] = s[state[_j8]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\n        state[_j9] ^= key[_k2];\n      }\n      return state;\n    }\n  }, {\n    key: '_decryptBlock2',\n    value: function _decryptBlock2(data, finalize) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [],\n          iv = this.iv;\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        var plain = this._decrypt(buffer, this._key);\n        for (var j = 0; j < 16; ++j) {\n          plain[j] ^= iv[j];\n        }\n        iv = buffer;\n        result.push(plain);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      if (finalize) {\n        var lastBlock = result[result.length - 1];\n        var psLen = lastBlock[15];\n        if (psLen <= 16) {\n          for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\n            if (lastBlock[_i] !== psLen) {\n              psLen = 0;\n              break;\n            }\n          }\n          outputLength -= psLen;\n          result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n        }\n      }\n      var output = new Uint8Array(outputLength);\n      for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\n        output.set(result[_i2], _j10);\n      }\n      return output;\n    }\n  }, {\n    key: 'decryptBlock',\n    value: function decryptBlock(data, finalize) {\n      var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array(0);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = this._decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    }\n  }, {\n    key: 'encrypt',\n    value: function encrypt(data, iv) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (var j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = this._encrypt(buffer, this._key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\n        output.set(result[_i3], _j11);\n      }\n      return output;\n    }\n  }]);\n\n  return AESBaseCipher;\n}();\n\nvar AES128Cipher = function (_AESBaseCipher) {\n  _inherits(AES128Cipher, _AESBaseCipher);\n\n  function AES128Cipher(key) {\n    _classCallCheck(this, AES128Cipher);\n\n    var _this = _possibleConstructorReturn(this, (AES128Cipher.__proto__ || Object.getPrototypeOf(AES128Cipher)).call(this));\n\n    _this._cyclesOfRepetition = 10;\n    _this._keySize = 160;\n    _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n    _this._key = _this._expandKey(key);\n    return _this;\n  }\n\n  _createClass(AES128Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 176;\n      var s = this._s;\n      var rcon = this._rcon;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      for (var j = 16, i = 1; j < b; ++i) {\n        var t1 = result[j - 3];\n        var t2 = result[j - 2];\n        var t3 = result[j - 1];\n        var t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ rcon[i];\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 16];\n          j++;\n          result[j] = t2 ^= result[j - 16];\n          j++;\n          result[j] = t3 ^= result[j - 16];\n          j++;\n          result[j] = t4 ^= result[j - 16];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES128Cipher;\n}(AESBaseCipher);\n\nvar AES256Cipher = function (_AESBaseCipher2) {\n  _inherits(AES256Cipher, _AESBaseCipher2);\n\n  function AES256Cipher(key) {\n    _classCallCheck(this, AES256Cipher);\n\n    var _this2 = _possibleConstructorReturn(this, (AES256Cipher.__proto__ || Object.getPrototypeOf(AES256Cipher)).call(this));\n\n    _this2._cyclesOfRepetition = 14;\n    _this2._keySize = 224;\n    _this2._key = _this2._expandKey(key);\n    return _this2;\n  }\n\n  _createClass(AES256Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 240;\n      var s = this._s;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      var r = 1;\n      var t1 = void 0,\n          t2 = void 0,\n          t3 = void 0,\n          t4 = void 0;\n      for (var j = 32, i = 1; j < b; ++i) {\n        if (j % 32 === 16) {\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n        } else if (j % 32 === 0) {\n          t1 = result[j - 3];\n          t2 = result[j - 2];\n          t3 = result[j - 1];\n          t4 = result[j - 4];\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n          t1 = t1 ^ r;\n          if ((r <<= 1) >= 256) {\n            r = (r ^ 0x1b) & 0xFF;\n          }\n        }\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 32];\n          j++;\n          result[j] = t2 ^= result[j - 32];\n          j++;\n          result[j] = t3 ^= result[j - 32];\n          j++;\n          result[j] = t4 ^= result[j - 32];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES256Cipher;\n}(AESBaseCipher);\n\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _charsets = __w_pdfjs_require__(143);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\xA8'] = ' \\u0308';\n  t['\\xAF'] = ' \\u0304';\n  t['\\xB4'] = ' \\u0301';\n  t['\\xB5'] = '\\u03BC';\n  t['\\xB8'] = ' \\u0327';\n  t['\\u0132'] = 'IJ';\n  t['\\u0133'] = 'ij';\n  t['\\u013F'] = 'L\\xB7';\n  t['\\u0140'] = 'l\\xB7';\n  t['\\u0149'] = '\\u02BCn';\n  t['\\u017F'] = 's';\n  t['\\u01C4'] = 'D\\u017D';\n  t['\\u01C5'] = 'D\\u017E';\n  t['\\u01C6'] = 'd\\u017E';\n  t['\\u01C7'] = 'LJ';\n  t['\\u01C8'] = 'Lj';\n  t['\\u01C9'] = 'lj';\n  t['\\u01CA'] = 'NJ';\n  t['\\u01CB'] = 'Nj';\n  t['\\u01CC'] = 'nj';\n  t['\\u01F1'] = 'DZ';\n  t['\\u01F2'] = 'Dz';\n  t['\\u01F3'] = 'dz';\n  t['\\u02D8'] = ' \\u0306';\n  t['\\u02D9'] = ' \\u0307';\n  t['\\u02DA'] = ' \\u030A';\n  t['\\u02DB'] = ' \\u0328';\n  t['\\u02DC'] = ' \\u0303';\n  t['\\u02DD'] = ' \\u030B';\n  t['\\u037A'] = ' \\u0345';\n  t['\\u0384'] = ' \\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = 'a\\u02BE';\n  t['\\u1FBD'] = ' \\u0313';\n  t['\\u1FBF'] = ' \\u0313';\n  t['\\u1FC0'] = ' \\u0342';\n  t['\\u1FFE'] = ' \\u0314';\n  t['\\u2002'] = ' ';\n  t['\\u2003'] = ' ';\n  t['\\u2004'] = ' ';\n  t['\\u2005'] = ' ';\n  t['\\u2006'] = ' ';\n  t['\\u2008'] = ' ';\n  t['\\u2009'] = ' ';\n  t['\\u200A'] = ' ';\n  t['\\u2017'] = ' \\u0333';\n  t['\\u2024'] = '.';\n  t['\\u2025'] = '..';\n  t['\\u2026'] = '...';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '!!';\n  t['\\u203E'] = ' \\u0305';\n  t['\\u2047'] = '??';\n  t['\\u2048'] = '?!';\n  t['\\u2049'] = '!?';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = ' ';\n  t['\\u20A8'] = 'Rs';\n  t['\\u2100'] = 'a/c';\n  t['\\u2101'] = 'a/s';\n  t['\\u2103'] = '\\xB0C';\n  t['\\u2105'] = 'c/o';\n  t['\\u2106'] = 'c/u';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\xB0F';\n  t['\\u2116'] = 'No';\n  t['\\u2121'] = 'TEL';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = 'FAX';\n  t['\\u2160'] = 'I';\n  t['\\u2161'] = 'II';\n  t['\\u2162'] = 'III';\n  t['\\u2163'] = 'IV';\n  t['\\u2164'] = 'V';\n  t['\\u2165'] = 'VI';\n  t['\\u2166'] = 'VII';\n  t['\\u2167'] = 'VIII';\n  t['\\u2168'] = 'IX';\n  t['\\u2169'] = 'X';\n  t['\\u216A'] = 'XI';\n  t['\\u216B'] = 'XII';\n  t['\\u216C'] = 'L';\n  t['\\u216D'] = 'C';\n  t['\\u216E'] = 'D';\n  t['\\u216F'] = 'M';\n  t['\\u2170'] = 'i';\n  t['\\u2171'] = 'ii';\n  t['\\u2172'] = 'iii';\n  t['\\u2173'] = 'iv';\n  t['\\u2174'] = 'v';\n  t['\\u2175'] = 'vi';\n  t['\\u2176'] = 'vii';\n  t['\\u2177'] = 'viii';\n  t['\\u2178'] = 'ix';\n  t['\\u2179'] = 'x';\n  t['\\u217A'] = 'xi';\n  t['\\u217B'] = 'xii';\n  t['\\u217C'] = 'l';\n  t['\\u217D'] = 'c';\n  t['\\u217E'] = 'd';\n  t['\\u217F'] = 'm';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '(1)';\n  t['\\u2475'] = '(2)';\n  t['\\u2476'] = '(3)';\n  t['\\u2477'] = '(4)';\n  t['\\u2478'] = '(5)';\n  t['\\u2479'] = '(6)';\n  t['\\u247A'] = '(7)';\n  t['\\u247B'] = '(8)';\n  t['\\u247C'] = '(9)';\n  t['\\u247D'] = '(10)';\n  t['\\u247E'] = '(11)';\n  t['\\u247F'] = '(12)';\n  t['\\u2480'] = '(13)';\n  t['\\u2481'] = '(14)';\n  t['\\u2482'] = '(15)';\n  t['\\u2483'] = '(16)';\n  t['\\u2484'] = '(17)';\n  t['\\u2485'] = '(18)';\n  t['\\u2486'] = '(19)';\n  t['\\u2487'] = '(20)';\n  t['\\u2488'] = '1.';\n  t['\\u2489'] = '2.';\n  t['\\u248A'] = '3.';\n  t['\\u248B'] = '4.';\n  t['\\u248C'] = '5.';\n  t['\\u248D'] = '6.';\n  t['\\u248E'] = '7.';\n  t['\\u248F'] = '8.';\n  t['\\u2490'] = '9.';\n  t['\\u2491'] = '10.';\n  t['\\u2492'] = '11.';\n  t['\\u2493'] = '12.';\n  t['\\u2494'] = '13.';\n  t['\\u2495'] = '14.';\n  t['\\u2496'] = '15.';\n  t['\\u2497'] = '16.';\n  t['\\u2498'] = '17.';\n  t['\\u2499'] = '18.';\n  t['\\u249A'] = '19.';\n  t['\\u249B'] = '20.';\n  t['\\u249C'] = '(a)';\n  t['\\u249D'] = '(b)';\n  t['\\u249E'] = '(c)';\n  t['\\u249F'] = '(d)';\n  t['\\u24A0'] = '(e)';\n  t['\\u24A1'] = '(f)';\n  t['\\u24A2'] = '(g)';\n  t['\\u24A3'] = '(h)';\n  t['\\u24A4'] = '(i)';\n  t['\\u24A5'] = '(j)';\n  t['\\u24A6'] = '(k)';\n  t['\\u24A7'] = '(l)';\n  t['\\u24A8'] = '(m)';\n  t['\\u24A9'] = '(n)';\n  t['\\u24AA'] = '(o)';\n  t['\\u24AB'] = '(p)';\n  t['\\u24AC'] = '(q)';\n  t['\\u24AD'] = '(r)';\n  t['\\u24AE'] = '(s)';\n  t['\\u24AF'] = '(t)';\n  t['\\u24B0'] = '(u)';\n  t['\\u24B1'] = '(v)';\n  t['\\u24B2'] = '(w)';\n  t['\\u24B3'] = '(x)';\n  t['\\u24B4'] = '(y)';\n  t['\\u24B5'] = '(z)';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '::=';\n  t['\\u2A75'] = '==';\n  t['\\u2A76'] = '===';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = ' \\u3099';\n  t['\\u309C'] = ' \\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '(\\u1100)';\n  t['\\u3201'] = '(\\u1102)';\n  t['\\u3202'] = '(\\u1103)';\n  t['\\u3203'] = '(\\u1105)';\n  t['\\u3204'] = '(\\u1106)';\n  t['\\u3205'] = '(\\u1107)';\n  t['\\u3206'] = '(\\u1109)';\n  t['\\u3207'] = '(\\u110B)';\n  t['\\u3208'] = '(\\u110C)';\n  t['\\u3209'] = '(\\u110E)';\n  t['\\u320A'] = '(\\u110F)';\n  t['\\u320B'] = '(\\u1110)';\n  t['\\u320C'] = '(\\u1111)';\n  t['\\u320D'] = '(\\u1112)';\n  t['\\u320E'] = '(\\u1100\\u1161)';\n  t['\\u320F'] = '(\\u1102\\u1161)';\n  t['\\u3210'] = '(\\u1103\\u1161)';\n  t['\\u3211'] = '(\\u1105\\u1161)';\n  t['\\u3212'] = '(\\u1106\\u1161)';\n  t['\\u3213'] = '(\\u1107\\u1161)';\n  t['\\u3214'] = '(\\u1109\\u1161)';\n  t['\\u3215'] = '(\\u110B\\u1161)';\n  t['\\u3216'] = '(\\u110C\\u1161)';\n  t['\\u3217'] = '(\\u110E\\u1161)';\n  t['\\u3218'] = '(\\u110F\\u1161)';\n  t['\\u3219'] = '(\\u1110\\u1161)';\n  t['\\u321A'] = '(\\u1111\\u1161)';\n  t['\\u321B'] = '(\\u1112\\u1161)';\n  t['\\u321C'] = '(\\u110C\\u116E)';\n  t['\\u321D'] = '(\\u110B\\u1169\\u110C\\u1165\\u11AB)';\n  t['\\u321E'] = '(\\u110B\\u1169\\u1112\\u116E)';\n  t['\\u3220'] = '(\\u4E00)';\n  t['\\u3221'] = '(\\u4E8C)';\n  t['\\u3222'] = '(\\u4E09)';\n  t['\\u3223'] = '(\\u56DB)';\n  t['\\u3224'] = '(\\u4E94)';\n  t['\\u3225'] = '(\\u516D)';\n  t['\\u3226'] = '(\\u4E03)';\n  t['\\u3227'] = '(\\u516B)';\n  t['\\u3228'] = '(\\u4E5D)';\n  t['\\u3229'] = '(\\u5341)';\n  t['\\u322A'] = '(\\u6708)';\n  t['\\u322B'] = '(\\u706B)';\n  t['\\u322C'] = '(\\u6C34)';\n  t['\\u322D'] = '(\\u6728)';\n  t['\\u322E'] = '(\\u91D1)';\n  t['\\u322F'] = '(\\u571F)';\n  t['\\u3230'] = '(\\u65E5)';\n  t['\\u3231'] = '(\\u682A)';\n  t['\\u3232'] = '(\\u6709)';\n  t['\\u3233'] = '(\\u793E)';\n  t['\\u3234'] = '(\\u540D)';\n  t['\\u3235'] = '(\\u7279)';\n  t['\\u3236'] = '(\\u8CA1)';\n  t['\\u3237'] = '(\\u795D)';\n  t['\\u3238'] = '(\\u52B4)';\n  t['\\u3239'] = '(\\u4EE3)';\n  t['\\u323A'] = '(\\u547C)';\n  t['\\u323B'] = '(\\u5B66)';\n  t['\\u323C'] = '(\\u76E3)';\n  t['\\u323D'] = '(\\u4F01)';\n  t['\\u323E'] = '(\\u8CC7)';\n  t['\\u323F'] = '(\\u5354)';\n  t['\\u3240'] = '(\\u796D)';\n  t['\\u3241'] = '(\\u4F11)';\n  t['\\u3242'] = '(\\u81EA)';\n  t['\\u3243'] = '(\\u81F3)';\n  t['\\u32C0'] = '1\\u6708';\n  t['\\u32C1'] = '2\\u6708';\n  t['\\u32C2'] = '3\\u6708';\n  t['\\u32C3'] = '4\\u6708';\n  t['\\u32C4'] = '5\\u6708';\n  t['\\u32C5'] = '6\\u6708';\n  t['\\u32C6'] = '7\\u6708';\n  t['\\u32C7'] = '8\\u6708';\n  t['\\u32C8'] = '9\\u6708';\n  t['\\u32C9'] = '10\\u6708';\n  t['\\u32CA'] = '11\\u6708';\n  t['\\u32CB'] = '12\\u6708';\n  t['\\u3358'] = '0\\u70B9';\n  t['\\u3359'] = '1\\u70B9';\n  t['\\u335A'] = '2\\u70B9';\n  t['\\u335B'] = '3\\u70B9';\n  t['\\u335C'] = '4\\u70B9';\n  t['\\u335D'] = '5\\u70B9';\n  t['\\u335E'] = '6\\u70B9';\n  t['\\u335F'] = '7\\u70B9';\n  t['\\u3360'] = '8\\u70B9';\n  t['\\u3361'] = '9\\u70B9';\n  t['\\u3362'] = '10\\u70B9';\n  t['\\u3363'] = '11\\u70B9';\n  t['\\u3364'] = '12\\u70B9';\n  t['\\u3365'] = '13\\u70B9';\n  t['\\u3366'] = '14\\u70B9';\n  t['\\u3367'] = '15\\u70B9';\n  t['\\u3368'] = '16\\u70B9';\n  t['\\u3369'] = '17\\u70B9';\n  t['\\u336A'] = '18\\u70B9';\n  t['\\u336B'] = '19\\u70B9';\n  t['\\u336C'] = '20\\u70B9';\n  t['\\u336D'] = '21\\u70B9';\n  t['\\u336E'] = '22\\u70B9';\n  t['\\u336F'] = '23\\u70B9';\n  t['\\u3370'] = '24\\u70B9';\n  t['\\u33E0'] = '1\\u65E5';\n  t['\\u33E1'] = '2\\u65E5';\n  t['\\u33E2'] = '3\\u65E5';\n  t['\\u33E3'] = '4\\u65E5';\n  t['\\u33E4'] = '5\\u65E5';\n  t['\\u33E5'] = '6\\u65E5';\n  t['\\u33E6'] = '7\\u65E5';\n  t['\\u33E7'] = '8\\u65E5';\n  t['\\u33E8'] = '9\\u65E5';\n  t['\\u33E9'] = '10\\u65E5';\n  t['\\u33EA'] = '11\\u65E5';\n  t['\\u33EB'] = '12\\u65E5';\n  t['\\u33EC'] = '13\\u65E5';\n  t['\\u33ED'] = '14\\u65E5';\n  t['\\u33EE'] = '15\\u65E5';\n  t['\\u33EF'] = '16\\u65E5';\n  t['\\u33F0'] = '17\\u65E5';\n  t['\\u33F1'] = '18\\u65E5';\n  t['\\u33F2'] = '19\\u65E5';\n  t['\\u33F3'] = '20\\u65E5';\n  t['\\u33F4'] = '21\\u65E5';\n  t['\\u33F5'] = '22\\u65E5';\n  t['\\u33F6'] = '23\\u65E5';\n  t['\\u33F7'] = '24\\u65E5';\n  t['\\u33F8'] = '25\\u65E5';\n  t['\\u33F9'] = '26\\u65E5';\n  t['\\u33FA'] = '27\\u65E5';\n  t['\\u33FB'] = '28\\u65E5';\n  t['\\u33FC'] = '29\\u65E5';\n  t['\\u33FD'] = '30\\u65E5';\n  t['\\u33FE'] = '31\\u65E5';\n  t['\\uFB00'] = 'ff';\n  t['\\uFB01'] = 'fi';\n  t['\\uFB02'] = 'fl';\n  t['\\uFB03'] = 'ffi';\n  t['\\uFB04'] = 'ffl';\n  t['\\uFB05'] = '\\u017Ft';\n  t['\\uFB06'] = 'st';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = ' \\u064C\\u0651';\n  t['\\uFC5F'] = ' \\u064D\\u0651';\n  t['\\uFC60'] = ' \\u064E\\u0651';\n  t['\\uFC61'] = ' \\u064F\\u0651';\n  t['\\uFC62'] = ' \\u0650\\u0651';\n  t['\\uFC63'] = ' \\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '_';\n  t['\\uFE4E'] = '_';\n  t['\\uFE4F'] = '_';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ps_parser = __w_pdfjs_require__(149);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '2.0.489';\nvar pdfjsBuild = '7d7bc80e';\nvar pdfjsCoreWorker = __w_pdfjs_require__(74);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _pdf_manager = __w_pdfjs_require__(132);\n\nvar _is_node = __w_pdfjs_require__(44);\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.489';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar globalScope = __w_pdfjs_require__(76);\nif (!globalScope._pdfjsCompatibilityChecked) {\n  globalScope._pdfjsCompatibilityChecked = true;\n  var isNodeJS = __w_pdfjs_require__(44);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  (function checkNodeBtoa() {\n    if (globalScope.btoa || !isNodeJS()) {\n      return;\n    }\n    globalScope.btoa = function (chars) {\n      return Buffer.from(chars, 'binary').toString('base64');\n    };\n  })();\n  (function checkNodeAtob() {\n    if (globalScope.atob || !isNodeJS()) {\n      return;\n    }\n    globalScope.atob = function (input) {\n      return Buffer.from(input, 'base64').toString('binary');\n    };\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    __w_pdfjs_require__(77);\n  })();\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    __w_pdfjs_require__(82);\n  })();\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = __w_pdfjs_require__(85);\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(87);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(89);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(92);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(111);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = __w_pdfjs_require__(127);\n  })();\n}\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(78);\nmodule.exports = __w_pdfjs_require__(7).String.includes;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar context = __w_pdfjs_require__(79);\nvar INCLUDES = 'includes';\n$export($export.P + $export.F * __w_pdfjs_require__(81)(INCLUDES), 'String', {\n  includes: function includes(searchString) {\n    return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isRegExp = __w_pdfjs_require__(80);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar cof = __w_pdfjs_require__(15);\nvar MATCH = __w_pdfjs_require__(2)('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar MATCH = __w_pdfjs_require__(2)('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) {}\n  }\n  return true;\n};\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(83);\nmodule.exports = __w_pdfjs_require__(7).Array.includes;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar $includes = __w_pdfjs_require__(48)(true);\n$export($export.P, 'Array', {\n  includes: function includes(el) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n__w_pdfjs_require__(49)('includes');\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(86);\nmodule.exports = __w_pdfjs_require__(7).Math.log2;\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(88);\nmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(90);\nmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(91) });\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(93);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(102);\n__w_pdfjs_require__(109);\n__w_pdfjs_require__(110);\nmodule.exports = __w_pdfjs_require__(7).Promise;\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(94)(true);\n__w_pdfjs_require__(51)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(96);\nvar descriptor = __w_pdfjs_require__(29);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(12)(IteratorPrototype, __w_pdfjs_require__(2)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar dPs = __w_pdfjs_require__(97);\nvar enumBugKeys = __w_pdfjs_require__(53);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(28)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(54).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(16);\nvar anObject = __w_pdfjs_require__(8);\nvar getKeys = __w_pdfjs_require__(24);\nmodule.exports = __w_pdfjs_require__(13) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toIObject = __w_pdfjs_require__(18);\nvar arrayIndexOf = __w_pdfjs_require__(48)(false);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toObject = __w_pdfjs_require__(35);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(49);\nvar step = __w_pdfjs_require__(101);\nvar Iterators = __w_pdfjs_require__(19);\nvar toIObject = __w_pdfjs_require__(18);\nmodule.exports = __w_pdfjs_require__(51)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar global = __w_pdfjs_require__(6);\nvar ctx = __w_pdfjs_require__(11);\nvar classof = __w_pdfjs_require__(33);\nvar $export = __w_pdfjs_require__(5);\nvar isObject = __w_pdfjs_require__(3);\nvar aFunction = __w_pdfjs_require__(17);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(26);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar task = __w_pdfjs_require__(57).set;\nvar microtask = __w_pdfjs_require__(107)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\nvar promiseResolve = __w_pdfjs_require__(59);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(2)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(38)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(25)($Promise, PROMISE);\n__w_pdfjs_require__(108)(PROMISE);\nWrapper = __w_pdfjs_require__(7)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(60)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(19);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar Iterators = __w_pdfjs_require__(19);\nmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar macrotask = __w_pdfjs_require__(57).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(15)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar dP = __w_pdfjs_require__(16);\nvar DESCRIPTORS = __w_pdfjs_require__(13);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar core = __w_pdfjs_require__(7);\nvar global = __w_pdfjs_require__(6);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar promiseResolve = __w_pdfjs_require__(59);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(112);\n__w_pdfjs_require__(123);\n__w_pdfjs_require__(125);\nmodule.exports = __w_pdfjs_require__(7).WeakMap;\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(61)(0);\nvar redefine = __w_pdfjs_require__(9);\nvar meta = __w_pdfjs_require__(39);\nvar assign = __w_pdfjs_require__(116);\nvar weak = __w_pdfjs_require__(118);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar validate = __w_pdfjs_require__(62);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(119)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(114);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar isArray = __w_pdfjs_require__(115);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(24);\nvar gOPS = __w_pdfjs_require__(117);\nvar pIE = __w_pdfjs_require__(40);\nvar toObject = __w_pdfjs_require__(35);\nvar IObject = __w_pdfjs_require__(30);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(14)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(38);\nvar getWeak = __w_pdfjs_require__(39).getWeak;\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(26);\nvar createArrayMethod = __w_pdfjs_require__(61);\nvar $has = __w_pdfjs_require__(10);\nvar validate = __w_pdfjs_require__(62);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar $export = __w_pdfjs_require__(5);\nvar redefine = __w_pdfjs_require__(9);\nvar redefineAll = __w_pdfjs_require__(38);\nvar meta = __w_pdfjs_require__(39);\nvar forOf = __w_pdfjs_require__(26);\nvar anInstance = __w_pdfjs_require__(36);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar $iterDetect = __w_pdfjs_require__(60);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar inheritIfRequired = __w_pdfjs_require__(120);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar setPrototypeOf = __w_pdfjs_require__(121).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar anObject = __w_pdfjs_require__(8);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(11)(Function.call, __w_pdfjs_require__(122).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(40);\nvar createDesc = __w_pdfjs_require__(29);\nvar toIObject = __w_pdfjs_require__(18);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar has = __w_pdfjs_require__(10);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(13) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(124)('WeakMap');\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = new Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(126)('WeakMap');\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar aFunction = __w_pdfjs_require__(17);\nvar ctx = __w_pdfjs_require__(11);\nvar forOf = __w_pdfjs_require__(26);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(128);\nmodule.exports = __w_pdfjs_require__(7).Object.values;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar $values = __w_pdfjs_require__(129)(false);\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(24);\nvar toIObject = __w_pdfjs_require__(18);\nvar isEnum = __w_pdfjs_require__(40).f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      if (isEnum.call(O, key = keys[i++])) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }return result;\n  };\n};\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(131).ReadableStream;\n}\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _document = __w_pdfjs_require__(133);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _annotation = __w_pdfjs_require__(139);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _evaluator = __w_pdfjs_require__(140);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    _getInheritableProperty: function _getInheritableProperty(key) {\n      var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var value = (0, _util.getInheritableProperty)({\n        dict: this.pageDict,\n        key: key,\n        getArray: getArray,\n        stopWhenFound: false\n      });\n      if (!Array.isArray(value)) {\n        return value;\n      }\n      if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n        return value[0];\n      }\n      return _primitives.Dict.merge(this.xref, value);\n    },\n\n    get content() {\n      return this.pageDict.get('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this._getInheritableProperty('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this._getInheritableProperty('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.pageDict.get('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this._getInheritableProperty('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this._getInheritableProperty('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jbig = __w_pdfjs_require__(136);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar DNLMarkerError = function DNLMarkerErrorClosure() {\n  function DNLMarkerError(message, scanLines) {\n    this.message = message;\n    this.scanLines = scanLines;\n  }\n  DNLMarkerError.prototype = new Error();\n  DNLMarkerError.prototype.name = 'DNLMarkerError';\n  DNLMarkerError.constructor = DNLMarkerError;\n  return DNLMarkerError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === 0xDC && parseDNLMarker) {\n            offset += 2;\n            var scanLines = data[offset++] << 8 | data[offset++];\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\n            }\n          }\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos) {\n    var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$dnlScanLines = _ref.dnlScanLines,\n          dnlScanLines = _ref$dnlScanLines === undefined ? null : _ref$dnlScanLines;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            var sofScanLines = readUint16();\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                (0, _util.warn)('Attempting to re-parse JPEG image using \"scanLines\" ' + 'parameter found in DNL marker (0xFFDC) segment.');\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              }\n              throw ex;\n            }\n            break;\n          case 0xFFDC:\n            offset += 4;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            var nextFileMarker = findNextFileMarker(data, offset - 2);\n            if (nextFileMarker && nextFileMarker.invalid) {\n              (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\n              offset = nextFileMarker.offset;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data.subarray(0, offset);\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data.subarray(0, offset);\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _stream = __w_pdfjs_require__(4);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = (0, _util.getInheritableProperty)({\n            dict: dict,\n            key: 'FT'\n          });\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'V',\n      getArray: true\n    });\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DA'\n    }) || '';\n    var fieldType = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'FT'\n    });\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DR'\n    }) || _primitives.Dict.empty;\n    data.fieldFlags = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Ff'\n    });\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Q'\n    });\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'MaxLen'\n    });\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = (0, _util.getInheritableProperty)({\n      dict: params.dict,\n      key: 'Opt'\n    });\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cmap = __w_pdfjs_require__(141);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _fonts = __w_pdfjs_require__(142);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _pattern = __w_pdfjs_require__(146);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _bidi = __w_pdfjs_require__(147);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _metrics = __w_pdfjs_require__(148);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _murmurhash = __w_pdfjs_require__(150);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _image = __w_pdfjs_require__(151);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\n        var data = _ref2.data,\n            width = _ref2.width,\n            height = _ref2.height;\n\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref3) {\n    var _this = this;\n\n    var pdfManager = _ref3.pdfManager,\n        xref = _ref3.xref,\n        handler = _ref3.handler,\n        pageIndex = _ref3.pageIndex,\n        idFactory = _ref3.idFactory,\n        fontCache = _ref3.fontCache,\n        builtInCMapCache = _ref3.builtInCMapCache,\n        _ref3$options = _ref3.options,\n        options = _ref3$options === undefined ? null : _ref3$options,\n        pdfFunctionFactory = _ref3.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function buildPaintImageXObject(_ref4) {\n      var _this2 = this;\n\n      var resources = _ref4.resources,\n          image = _ref4.image,\n          _ref4$isInline = _ref4.isInline,\n          isInline = _ref4$isInline === undefined ? false : _ref4$isInline,\n          operatorList = _ref4.operatorList,\n          cacheKey = _ref4.cacheKey,\n          imageCache = _ref4.imageCache,\n          _ref4$forceDisableNat = _ref4.forceDisableNativeImageDecoder,\n          forceDisableNativeImageDecoder = _ref4$forceDisableNat === undefined ? false : _ref4$forceDisableNat;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return Promise.resolve();\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return Promise.resolve();\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return Promise.resolve();\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: isInline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return Promise.resolve();\n      }\n      var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\n          operatorList.addDependency(objId);\n          args = [objId, w, h];\n          operatorList.addOp(_util.OPS.paintJpegXObject, args);\n          if (cacheKey) {\n            imageCache[cacheKey] = {\n              fn: _util.OPS.paintJpegXObject,\n              args: args\n            };\n          }\n        }, function (reason) {\n          (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\n          return _this2.buildPaintImageXObject({\n            resources: resources,\n            image: image,\n            isInline: isInline,\n            operatorList: operatorList,\n            cacheKey: cacheKey,\n            imageCache: imageCache,\n            forceDisableNativeImageDecoder: true\n          });\n        });\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: isInline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n      return Promise.resolve();\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref5) {\n      var _this8 = this;\n\n      var stream = _ref5.stream,\n          task = _ref5.task,\n          resources = _ref5.resources,\n          operatorList = _ref5.operatorList,\n          _ref5$initialState = _ref5.initialState,\n          initialState = _ref5$initialState === undefined ? null : _ref5$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject({\n                    resources: resources,\n                    image: xobj,\n                    operatorList: operatorList,\n                    cacheKey: name,\n                    imageCache: imageCache\n                  }).then(resolveXObject, rejectXObject);\n                  return;\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              next(self.buildPaintImageXObject({\n                resources: resources,\n                image: args[0],\n                isInline: true,\n                operatorList: operatorList,\n                cacheKey: cacheKey,\n                imageCache: imageCache\n              }));\n              return;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref6) {\n      var _this9 = this;\n\n      var stream = _ref6.stream,\n          task = _ref6.task,\n          resources = _ref6.resources,\n          _ref6$stateManager = _ref6.stateManager,\n          stateManager = _ref6$stateManager === undefined ? null : _ref6$stateManager,\n          _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n          normalizeWhitespace = _ref6$normalizeWhites === undefined ? false : _ref6$normalizeWhites,\n          _ref6$combineTextItem = _ref6.combineTextItems,\n          combineTextItems = _ref6$combineTextItem === undefined ? false : _ref6$combineTextItem,\n          sink = _ref6.sink,\n          _ref6$seenStyles = _ref6.seenStyles,\n          seenStyles = _ref6$seenStyles === undefined ? Object.create(null) : _ref6$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embeddedUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embeddedUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embeddedUseCMap) {\n      useCMap = embeddedUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (!BUILT_IN_CMAPS.includes(name)) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _font_renderer = __w_pdfjs_require__(144);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _type1_parser = __w_pdfjs_require__(145);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (!VALID_TABLES.includes(table.tag)) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 4;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n      isCFFCIDFont: cff.isCIDFont,\n      fdSelect: cff.fdSelect,\n      fdArray: cff.fdArray\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font, glyphId) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop();\n            subrCode = null;\n            if (font.isCFFCIDFont) {\n              var fdIndex = font.fdSelect.getFDIndex(glyphId);\n              if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                var fontDict = font.fdArray[fdIndex],\n                    subrs = void 0;\n                if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                  subrs = fontDict.privateDict.subrsIndex.objects;\n                }\n                if (subrs) {\n                  var numSubrs = subrs.length;\n                  n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\n                  subrCode = subrs[n];\n                }\n              } else {\n                (0, _util.warn)('Invalid fd index for glyph index.');\n              }\n            } else {\n              subrCode = font.subrs[n + font.subrsBias];\n            }\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code, glyphId) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var fontMatrix = this.fontMatrix;\n      if (this.isCFFCIDFont) {\n        var fdIndex = this.fdSelect.getFDIndex(glyphId);\n        if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n          var fontDict = this.fdArray[fdIndex];\n          fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\n        } else {\n          (0, _util.warn)('Invalid fd index for glyph index.');\n        }\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds, glyphId);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    this.isCFFCIDFont = cffInfo.isCFFCIDFont;\n    this.fdSelect = cffInfo.fdSelect;\n    this.fdArray = cffInfo.fdArray;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds, glyphId) {\n      compileCharString(code, cmds, this, glyphId);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image).catch(function (reason) {\n        (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\n        return image;\n      });\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map"],"sourceRoot":""}