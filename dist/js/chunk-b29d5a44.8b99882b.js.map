{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js","webpack:///./node_modules/pdfjs-dist/lib/core/operator_list.js","webpack:///./node_modules/pdfjs-dist/lib/core/stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/image.js","webpack:///./node_modules/pdfjs-dist/lib/core/crypto.js","webpack:///./node_modules/pdfjs-dist/lib/core/document.js","webpack:///./node_modules/pdfjs-dist/lib/core/primitives.js","webpack:///./node_modules/pdfjs-dist/lib/core/bidi.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpeg_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/annotation.js","webpack:///./node_modules/pdfjs-dist/lib/pdf.worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/cff_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/pdf_manager.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpg.js","webpack:///./node_modules/pdfjs-dist/lib/core/encodings.js","webpack:///./node_modules/pdfjs-dist/lib/core/fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/chunked_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/cmap.js","webpack:///./node_modules/pdfjs-dist/lib/core/obj.js","webpack:///./node_modules/pdfjs-dist/lib/core/colorspace.js","webpack:///./node_modules/pdfjs-dist/lib/core/murmurhash3.js","webpack:///./node_modules/pdfjs-dist/lib/core/unicode.js","webpack:///./node_modules/pdfjs-dist/lib/core/parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/ps_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/evaluator.js","webpack:///./node_modules/pdfjs-dist/lib/core/metrics.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/pattern.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2.js","webpack:///./node_modules/pdfjs-dist/lib/core/type1_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/function.js","webpack:///./node_modules/pdfjs-dist/lib/core/font_renderer.js","webpack:///./node_modules/pdfjs-dist/lib/core/glyphlist.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx.js","webpack:///./node_modules/pdfjs-dist/lib/core/standard_fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/charsets.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx_stream.js"],"names":["Object","defineProperty","exports","value","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","data","start","end","this","bp","dataEnd","chigh","clow","byteIn","ct","a","prototype","b1","readBit","contexts","pos","d","cx_index","cx_mps","qeTableIcx","qeIcx","OperatorList","undefined","_util","__webpack_require__","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","state","i","ii","length","item","handlePaintSolidColorImageMask","iFirstSave","count","fnArray","argsArray","iFirstPIMXO","arg","imageMask","width","height","OPS","paintSolidColorImageMask","InitialState","queue","context","iCurr","match","lastProcessed","save","transform","paintInlineImageXObject","restore","MIN_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_WIDTH","IMAGE_PADDING","curr","iFirstTransform","iFirstPIIXO","Math","min","floor","q","maxX","map","maxLineHeight","currentX","currentY","img","max","push","x","y","w","h","imgWidth","imgHeight","imgData","Uint8Array","imgRowSize","rowSize","dataOffset","offset","set","subarray","k","kk","splice","paintInlineImageXObjectGroup","kind","ImageKind","RGBA_32BPP","paintImageMaskXObject","MIN_IMAGES_IN_MASKS_BLOCK","MAX_IMAGES_IN_MASKS_BLOCK","MAX_SAME_IMAGES_IN_MASKS_BLOCK","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","Float32Array","paintImageMaskXObjectRepeat","images","maskParams","paintImageMaskXObjectGroup","paintImageXObject","iFirstPIXO","firstPIXOArg0","MIN_IMAGES_IN_BLOCK","MAX_IMAGES_IN_BLOCK","args","paintImageXObjectRepeat","beginText","setFont","setTextMatrix","showText","endText","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","MIN_CHARS_IN_BLOCK","MAX_CHARS_IN_BLOCK","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","iterate","Array","isArray","fn","flush","reset","NullOptimizer","CHUNK_SIZE","CHUNK_SIZE_ABOUT","getTransfers","transfers","cached","buffer","intent","messageHandler","pageIndex","optimizer","dependencies","create","_totalLength","weight","totalLength","addOp","addDependency","dependency","addDependencies","key","addOpList","opList","Util","extendObj","getIR","lastChunk","send","operatorList","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_primitives","arrayBuffer","dict","bytes","isEmpty","getByte","getUint16","b0","getInt32","b2","b3","getBytes","strEnd","peekByte","peekedByte","peekBytes","skip","n","moveStart","makeSubStream","str","stringToBytes","call","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","byteLength","size","buffer2","bufEnd","getBaseStreams","streams","stream","shift","chunk","newLength","baseStreams","appendToArray","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","FormatError","codeSize","codeBuf","getBits","bits","b","getCode","table","codes","maxLen","code","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","blockLen","check","params","isDict","predictor","get","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","c","bytesPerPixel","sum","compArray","bitMask","j","prevRow","up","upLeft","left","p","pa","pb","pc","decrypt","nextChunk","initialized","chunkSize","hasMoreData","input","TILDA_CHAR","Z_LOWER_CHAR","EOF","isSpace","firstDigit","UPSTREAM_BLOCK_SIZE","maxDecodeLength","digit","ch","repeatHeader","source","earlyChange","cachedData","bitsCached","maxLzwDictionarySize","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","blockSize","estimatedDecodedSize","decodedSizeDelta","prevCode","decodedLength","currentBufferLength","hasPrev","log","PDFImage","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","err","TypeError","_colorspace","_stream","_jpeg_stream","_jpx","handleImageData","image","nativeDecoder","canDecode","decode","catch","reason","warn","message","Promise","resolve","decodeAndClamp","addend","coefficient","resizeImageMask","src","bpc","w1","h1","w2","h2","py","oldIndex","dest","Uint32Array","xRatio","yRatio","newIndex","xScaled","w1Scanline","_ref","xref","res","_ref$isInline","isInline","_ref$smask","smask","_ref$mask","mask","_ref$isMask","isMask","pdfFunctionFactory","has","filter","name","jpxImage","JpxImage","parseImageProperties","bitsPerComponent","numComps","componentsCount","interpolate","matte","colorSpace","info","Name","Error","resources","ColorSpace","parse","getArray","needsDecode","isDefaultDecode","decodeCoefficients","decodeAddends","dmin","dmax","isStream","maskDict","buildImage","_ref2","handler","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","all","then","_ref3","_ref4","imageData","smaskData","maskData","createMask","_ref5","imgArray","imageIsFromDecodeStream","inverseDecode","computedLength","actualLength","haveFullData","drawWidth","drawHeight","decodeBuffer","index","getComponents","buf","bufferPos","output","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","actualHeight","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","color","maskOffset","undoPreblend","r","g","matteRgb","getRgb","matteR","matteG","matteB","alpha","createImageData","forceRGBA","arguments","originalWidth","originalHeight","GRAYSCALE_1BPP","RGB_24BPP","getImageBytes","newArray","assert","JpegStream","imageLength","alpha01","maybeUndoPreblend","comps","fillRgb","scale","forceRGB","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","CipherTransformFactory","ARCFourCipher","AES256Cipher","AES128Cipher","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","constructor","setPrototypeOf","__proto__","_classCallCheck","instance","tmp","s","keyLength","encryptBlock","tmp2","decryptBlock","hash","h0","h3","paddedLength","padded","f","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","littleSigmaPrime","h4","h5","h6","h7","ceil","t1","t2","e","result","mode384","tmp3","tmp1","NullCipher","AESBaseCipher","unreachable","_inv_s","_mix","_mixCol","bufferPosition","cipherKey","u","v","_keySize","_cyclesOfRepetition","_j","_j2","_k","_j3","s0","s1","s2","s3","_j4","_j5","_j6","_j7","_j8","_j9","_k2","finalize","sourceLength","iv","plain","_decrypt","_key","outputLength","lastBlock","psLen","_i2","_j10","_ii","_decryptBlock2","cipher","_encrypt","_i3","_j11","_AESBaseCipher","_this","getPrototypeOf","_rcon","_expandKey","rcon","t3","t4","_AESBaseCipher2","_this2","compareByteArrays","array1","array2","checkOwnerPassword","password","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","array","encrypt","remainder","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","createStream","decryptString","bytesToString","defaultPasswordBytes","createEncryptionKey20","revision","uBytes","perms","passwordLength","pdfAlgorithm","prepareKeyData","fileId","flags","encryptMetadata","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","decodeUserPassword","identityName","isName","algorithm","Number","isInteger","cfDict","streamCryptoName","suppressEncryption","handlerDict","passwordBytes","fileIdBytes","utf8StringToString","ex","PasswordException","PasswordResponses","NEED_PASSWORD","decodedPassword","INCORRECT_PASSWORD","cf","stmf","strf","eff","buildObjectKey","num","gen","isAes","buildCipherConstructor","cfm","cryptFilter","createCipherTransform","cipherConstructor","PDFDocument","Page","_obj","_annotation","_crypto","_parser","_operator_list","_evaluator","_function","DEFAULT_USER_UNIT","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pdfManager","pageDict","ref","fontCache","builtInCMapCache","evaluatorOptions","resourcesPromise","uniquePrefix","idCounters","obj","idFactory","createObjId","_getInheritableProperty","getInheritableProperty","stopWhenFound","Dict","merge","content","shadow","empty","mediaBox","cropBox","userUnit","isNum","view","intersection","intersect","getContentStream","fetchIfRef","loadResources","keys","ensure","objectLoader","ObjectLoader","load","getOperatorList","task","renderInteractiveForms","contentStreamPromise","partialEvaluator","PartialEvaluator","options","dataPromises","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","_ref6","pageOpList","annotations","opListPromises","opLists","beginAnnotations","endAnnotations","extractTextContent","_ref7","_this3","normalizeWhitespace","sink","combineTextItems","_ref8","_ref9","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","FINGERPRINT_FIRST_BYTES","EMPTY_FINGERPRINT","isArrayBuffer","XRef","PDFFunctionFactory","isEvalSupported","find","needle","backwards","strBuf","String","fromCharCode","join","lastIndexOf","indexOf","DocumentInfoValidators","entries","Title","isString","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","recoveryMode","setup","version","catalog","catDict","pdfFormatVersion","acroForm","xfa","fields","MissingDataException","linearization","Linearization","startXRef","step","found","parseInt","isNaN","mainXRefEntriesOffset","checkHeader","MAX_VERSION_LENGTH","substring","parseStartXRef","setStartXRef","_this4","pageFactory","createPage","Catalog","numPages","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","trailer","validEntries","stringToPDFString","fingerprint","fileID","idArray","ensureRange","hex","toString","getPage","cleanup","_typeof","nameCache","nameValue","Cmd","cmd","cmdCache","cmdValue","nonSerializable","_map","objId","__nonSerializable__","assignXref","newXref","key1","key2","key3","getAsync","fetchIfRefAsync","slice","isRef","fetch","getRaw","getKeys","forEach","callback","dictArray","mergedDict","keyName","Ref","RefSet","put","remove","RefSetCache","putAlias","aliasRef","thisArg","clear","isEOF","isCmd","type","isRefsEqual","v1","v2","bidi","baseTypes","arabicTypes","isOdd","isEven","findUnequal","jj","setValues","reverseValues","temp","createBidiText","isLTR","vertical","dir","chars","types","startLevel","strLength","numBidi","charAt","charCode","charCodeAt","charType","levels","sor","eor","lastType","before","after","level","highestLevel","lowestOddLevel","_jpg","jpegImage","JpegImage","decodeArr","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","forceDataSchema","createObjectURL","AnnotationBorderStyle","Annotation","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","id","subtype","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","getTransformMatrix","rect","bbox","matrix","bounds","getAxialAlignedBoundingBox","minX","minY","maxY","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","rectangle","flag","_hasFlag","AnnotationFlag","INVISIBLE","HIDDEN","NOVIEW","PRINT","normalizeRect","rgbColor","singletons","gray","getRgbItem","rgb","cmyk","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","as","hasPopup","title","contents","evaluator","renderForms","appearanceDict","beginAnnotation","endAnnotation","_isViewable","_isPrintable","style","AnnotationBorderStyleType","SOLID","dashArray","horizontalCornerRadius","verticalCornerRadius","DASHED","BEVELED","INSET","UNDERLINE","isValid","allZeros","element","validNumber","radius","_Annotation","annotationType","AnnotationType","WIDGET","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","AnnotationFieldFlag","READONLY","unshift","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","MULTILINE","comb","COMB","PASSWORD","FILESELECT","_WidgetAnnotation2","checkBox","RADIO","PUSHBUTTON","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","parseDestDictionary","destDict","resultObj","docBaseUrl","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","COMBO","multiSelect","MULTISELECT","_Annotation2","DEFAULT_ICON_SIZE","_this6","TEXT","_preparePopup","_Annotation3","_this7","LINK","_Annotation4","_this8","POPUP","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","LINE","lineCoordinates","_Annotation6","_this10","SQUARE","_Annotation7","_this11","CIRCLE","_Annotation8","_this12","POLYLINE","rawVertices","vertices","_PolylineAnnotation","_this13","POLYGON","_Annotation9","_this14","HIGHLIGHT","_Annotation10","_this15","_Annotation11","_this16","SQUIGGLY","_Annotation12","_this17","STRIKEOUT","_Annotation13","_this18","STAMP","_Annotation14","_this19","file","FileSpec","FILEATTACHMENT","serializable","pdfjsCoreWorker","WorkerMessageHandler","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","MAX_SUBR_NESTING","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","endPos","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","topDict","createDict","strings","names","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","encoding","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","bytesLength","major","minor","hdrSize","offSize","parseOperand","parseFloatOperand","NaN","lookup","parseFloat","operands","cffIndex","offsets","offsetSize","startPos","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","hints","bias","subrNumber","valid","firstStackClearing","charstring","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","readSupplement","supplementsCount","sid","baseEncoding","ExpertEncoding","StandardEncoding","dataStart","glyphsCount","rangesCount","gid","CFFEncoding","invalidFirstGID","first","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","opcodes","order","values","valueLength","setByName","createTables","layout","entry","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","concat","compileHeader","compileNameIndex","base","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","m","exec","epsilon","round","nibbles","out","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","NetworkPdfManager","LocalPdfManager","_chunked_stream","_document","BasePdfManager","docId","_docId","_password","_docBaseUrl","absoluteUrl","createValidAbsoluteUrl","href","onLoadedStream","NotImplementedException","ensureDoc","prop","pdfDocument","ensureXRef","ensureCatalog","requestRange","begin","requestLoadedStream","sendProgressiveData","updatePassword","terminate","_loadedStreamCapability","createPromiseCapability","inherit","reject","apply","promise","pdfNetworkStream","msgHandler","url","disableAutoFetch","rangeChunkSize","streamManager","ChunkedStreamManager","getStream","ensureHelper","requestAllChunks","onReceiveData","abort","JpegError","msg","DNLMarkerError","scanLines","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","children","pop","getBlockBufferOffset","component","row","col","blocksPerLine","decodeScan","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","node","receive","receiveAndExtend","decodeBaseline","huffmanTableDC","diff","blockData","pred","rs","huffmanTableAC","decodeDCFirst","decodeDCSuccessive","eobrun","decodeACFirst","successiveACNextValue","successiveACState","decodeACSuccessive","offsetZ","sign","decodeMcu","mcu","mcuRow","mcuCol","blockRow","blockCol","decodeBlock","decodeFn","componentsLength","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","marker","quantizeAndInverse","blockBufferOffset","v0","v3","v4","v5","v6","v7","p0","p1","p2","p3","p4","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","_ref$dnlScanLines","dnlScanLines","readUint16","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","l","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","precision","sofScanLines","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","processed","nextFileMarker","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","dataLength","Uint8ClampedArray","xScaleBlockOffset","mask3LSB","_isColorConversionNeeded","_convertYccToRgb","Y","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","MacExpertEncoding","MacRomanEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","getFontType","ProblematicCharRanges","IdentityToUnicodeMap","ToUnicodeMap","FontFlags","Font","ErrorFont","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_glyphlist","_standard_fonts","_unicode","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","FixedPitch","Serif","Symbolic","Script","Nonsymbolic","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","FONT_IDENTITY_MATRIX","glyphsWidths","glyph","adjustToUnicode","builtInEncoding","hasIncludedToUnicodeMap","hasEncoding","defaultEncoding","toUnicode","glyphsUnicodeMap","getGlyphsUnicode","glyphName","unicode","getUnicodeForGlyph","amend","FontType","TYPE1C","TYPE1","CIDFONTTYPE0C","CIDFONTTYPE0","OPENTYPE","TRUETYPE","CIDFONTTYPE2","MMTYPE1","TYPE0","UNKNOWN","recoverGlyphName","Glyph","fontChar","accent","vmetric","operatorListId","isInFont","matchesForCache","cmap","charCodeOf","firstChar","lastChar","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","log2","searchRange","range","rangeShift","OTF_HEADER_SIZE","OTF_TABLE_ENTRY_SIZE","toArray","tablesNames","sort","tableName","numTables","tableOffsets","string32","searchParams","checksum","quad","readUint32","addTable","tag","loadedName","isType3Font","sizes","missingFile","glyphCache","isSerifFont","isSymbolicFont","isMonospace","fallbackName","differences","composite","wideChars","cMap","fallbackToUnicode","toFontChar","cidEncoding","vmetrics","defaultVMetrics","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","fontType","seacMap","loading","TYPE3","int16","writeSignedInt16","signedInt16","int32","string16","safeString16","isTrueTypeCollectionFile","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","getRanges","glyphs","numGlyphs","ranges","codeIndices","createCmapTable","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","startCode","format314","format31012","header31012","validateOS2Table","os2","selection","usWinAscent","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","position","getUnicodeRangeFor","typoAscent","typoDescent","winAscent","winDescent","fixedPitch","italicAngle","xHeight","capHeight","createPostTable","angle","pow","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","nameRecord","getFontID","ID","font","renderer","FontRendererFactory","exportData","hasOwnProperty","fontName","replace","stdFontMap","getStdFontMap","nonStdFontMap","getNonStdFontMap","isStandardFont","bold","search","italic","black","remeasure","GlyphMapForStandardFonts","getGlyphMapForStandardFonts","test","SupplementalGlyphMapForArialBlack","getSupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","getSupplementalGlyphMapForCalibri","unicodeCharCode","getDingbatsGlyphsUnicode","split","VALID_TABLES","readTables","readTableEntry","includes","previousPosition","readOpenTypeHeader","ttf","entrySelector","readTrueTypeCollectionHeader","ttc","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionData","_readTrueTypeCollecti","potentialHeader","potentialTables","readNameTable","nameEntry","readCmapTable","platformId","encodingId","mappings","hasShortCmap","segment","potentialTable","canBreak","useTable","segIndex","segments","delta","offsetsCount","rangeOffset","offsetIndex","firstCode","entryCount","sanitizeMetrics","metrics","numOfMetrics","numOfSidebearings","numMissing","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","endPoint","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","sanitizeHead","head","locaLength","indexToLocFormat","numGlyphsPlusOne","sanitizeGlyphLocations","loca","isGlyphLocationsLong","dupFirstEntry","maxSizeOfInstructions","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","readPostScriptTable","post","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","FORMAT_0_HEADER_LENGTH","numRecords","stringsStart","records","NAME_RECORD_LENGTH","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","op","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","foldTTTable","checkInvalidFunctions","maxFunctionDefs","sanitizeTTPrograms","fpgm","prep","cvt","cvtData","ttcData","cffFile","isTrueType","cidToGidMap","maxZones","glyphsInfo","metricsOverride","hasGlyph","isCidToGidMapEmpty","cmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","baseEncodingName","standardGlyphName","unicodeOrCharCode","newMapping","parser","compiler","namePrototype","builder","tableTag","mapping","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","spaceWidth","_shadowWidth","possibleSpaceReplacements","glyphUnicode","charcode","contains","charToGlyph","widthCode","mapSpecialUnicodeValues","charsToGlyphs","charsCache","charsCacheKey","readCharCode","error","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","scanLength","getHeaderBlock","suggestedLength","headerBytes","headerBytesLength","block","EEXEC_SIGNATURE","streamStartPos","SCAN_BLOCK_LENGTH","scanBytes","getEexecBlock","eexecBytes","PFB_HEADER_SIZE","headerBlockLength","length1","eexecBlockLength","length2","pfbHeader","pfbHeaderPresent","headerBlock","headerBlockParser","Type1Parser","extractFontHeader","eexecBlock","eexecBlockParser","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","navigator","userAgent","ChunkedStream","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","curChunk","beginChunk","endChunk","onReceiveProgressiveData","ensureByte","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","loaded","readChunk","arrayByteLength","read","chunkData","arraysToBytes","_requestChunks","requestId","chunksNeeded","isEmptyObj","capability","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getBeginChunk","getEndChunk","requestRanges","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","cancelAllRequests","CMapFactory","IdentityCMap","CMap","BUILT_IN_CMAPS","builtInCMap","codespaceRanges","numCodespaceRanges","useCMap","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","getMap","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","tmpBuf","processBinaryCMap","extend","readByte","sequence","dataSize","ucs2DataSize","subitemsCount","readNumber","readHex","readHexNumber","readSigned","readHexSigned","readString","last","sp","bufferSize","process","strToInt","expectString","expectInt","parseBfChar","lexer","getObj","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","fetchBuiltInCMap","previous","embeddedUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","compressionType","CMapCompressionType","BINARY","NONE","Lexer","parsedCMap","getCatalogObj","pageKidsCountCache","pagePromises","metadata","streamRef","stringToUTF8String","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","blackColor","outlineDict","outlineItem","unsafeUrl","newWindow","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","nameTree","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","prefix","numberTree","NumberTree","nums","currentLabel","currentIndex","labelDict","st","toRoman","LIMIT","A_UPPER_CASE","A_LOWER_CASE","baseCharCode","letterIndex","character","charBuf","pageMode","attachments","fs","javaScript","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","action","promises","translatedFonts","translated","getPageDict","nodesToVisit","currentPageIndex","currentNode","fetchAsync","kids","getPageIndex","pageRef","pagesBeforeRef","kidRef","parentRef","kidPromises","kid","addDefaultProtocolToUrl","tryConvertUrlEncoding","actionName","urlDict","remoteDest","baseUrl","JSON","stringify","isBool","namedAction","jsAction","URL_OPEN_METHODS","regex","RegExp","jsUrl","xrefstms","cache","stats","streamTypes","fontTypes","startXRefQueue","trailerDict","indexObjects","readXRef","ids","processXRefTable","tableState","entryNum","streamPos","parserBuf1","buf1","parserBuf2","buf2","readXRefTable","firstEntryNum","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","TAB","LF","CR","SPACE","PERCENT","LT","readToken","token","skipUntil","skipped","objRegExp","endobjRegExp","nestedObjRegExp","CHECK_CONTENT_LENGTH","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","contentLength","checkPos","tokenStr","objToken","xrefTagOffset","Parser","InvalidPDFException","startXRefParsedCache","XRefParseException","getEntry","xrefEntry","cacheEntry","fetchUncompressed","fetchCompressed","obj1","obj2","obj3","tableOffset","allowStreams","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","MAX_LEVELS","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","refSet","_walk","nodesToRevisit","pendingRequests","foundMissingData","_ii2","resizeRgbImage","COMPONENTS","srcOffset","destOffset","getRgbBuffer","getOutputLength","inputLength","isPassthrough","rgbBuf","numComponentColors","needsResizing","allColors","destPos","rgbPos","colorMap","usesZeroToOneRange","cs","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","CalGrayCS","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","LabCS","colorSpaces","resCS","mode","altIR","altCS","createIR","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","G","A","AG","L","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","convertToFlat","sourceWhitePoint","LMS","convertToD65","D65X","D65Y","D65Z","sRGBTransferFunction","adjustToRange","decodeL","compensateBlackPoint","sourceBlackPoint","XYZ_Flat","zeroDecodeL","X_DST","X_SRC","Y_DST","Y_SRC","Z_DST","Z_SRC","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","normalizeWhitePointToFlat","XYZ_In","LMS_Flat","normalizeWhitePointToD65","LMS_D65","B","C","AGR","BGG","CGB","X","Z","XYZ","XYZ_Black","XYZ_D65","SRGB","sR","sG","sB","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","bs","M","N","sqrt","MurmurHash3_64","seed","MASK_HIGH","MASK_LOW","SEED","update","blockCounts","tailLength","dataUint32","k2","C1","C2","C1_LOW","C2_LOW","hexdigest","getLookupTableFactory","getSpecialPUASymbols","hexStr","nameLen","toUpperCase","UnicodeRanges","isRTLRangeFor","getNormalizedUnicodes","reverseIfRtl","charsLength","_ccitt_stream","_jbig2_stream","_jpx_stream","MAX_LENGTH_TO_CACHE","MAX_ADLER32_LENGTH","computeAdler32","imageCache","refill","tryShift","cipherTransform","makeInlineImage","makeStream","findDefaultInlineStreamEnd","E","I","NUL","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","TILDE","GT","findASCIIHexDecodeInlineStreamEnd","dictLength","beginInlineImagePos","filterName","filterZero","imageStream","cacheKey","imageBytes","initialStreamPos","dictBytes","skipToNextLine","nextChar","SCAN_BLOCK_SIZE","ENDSTREAM_SIGNATURE_LENGTH","ENDSTREAM_SIGNATURE","makeFilter","filterArray","paramsArray","xrefStreamStats","StreamType","FLATE","LZW","DCT","JPX","JpxStream","A85","AHX","CCF","CCITTFaxStream","RL","JBIG","Jbig2Stream","knownCommands","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","getHints","hintsLength","objectNumberFirst","endFirst","pageFirst","PostScriptParser","PostScriptLexer","operators","prev","nextToken","getToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","toLowerCase","_cmap","_fonts","_pattern","_bidi","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","maxImageSize","disableFontFace","nativeImageDecoderSupport","NativeImageDecoding","DECODE","ignoreErrors","NativeImageDecoder","_ref$forceDataSchema","_ref3$options","cachedCMap","sendWithPromise","isDecodable","isSupported","TIME_SLOT_DURATION_MS","CHECK_TIME_EVERY","TimeSlotManager","normalizeBlendMode","checked","endTime","Date","now","deferred","TILING_PATTERN","SHADING_PATTERN","clone","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","graphicState","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","beginGroup","paintFormXObjectBegin","paintFormXObjectEnd","endGroup","buildPaintImageXObject","_ref4$isInline","_ref4$forceDisableNat","forceDisableNativeImageDecoder","bitStrideLength","softMask","SMALL_IMAGE_DIMENSIONS","imageObj","paintJpegXObject","nativeImageDecoder","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","isPDFFunction","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","featureId","UNSUPPORTED_FEATURES","unknown","handleSetFont","fontArgs","fontRef","loadFont","loadType3Data","TranslatedFont","handleText","isAddToPathSet","textRenderingMode","TextRenderingMode","ADD_TO_PATH_FLAG","fillColorSpace","buildPath","hasBuiltPath","path","getPathJs","setGState","gState","gStateObj","gStateKeys","_loop","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","translateFont","translatedFont","xrefFontStats","fontFile3","lastIndex","constructPath","opArgs","handleColorN","patterns","patternName","typeNum","shading","Pattern","parseShading","_ref5$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","argument","savedStatesDepth","promiseBody","ensureNotTerminated","stop","operation","paintXObject","resolveXObject","rejectXObject","fontSize","endInlineImage","showSpacedText","combinedGlyphs","arrLength","arrItem","nextLineShowText","nextLine","nextLineSetSpacingShowText","setWordSpacing","setCharSpacing","setTextRenderingMode","setFillColorSpace","setStrokeColorSpace","strokeColorSpace","setFillColor","setFillRGBColor","setStrokeColor","setStrokeRGBColor","setFillGray","setStrokeGray","setFillCMYKColor","setStrokeCMYKColor","setFillColorN","setStrokeColorN","shadingFill","shadingRes","patternIR","dictName","extGState","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","_ref6$stateManager","_ref6$normalizeWhites","_ref6$combineTextItem","_ref6$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","fakeSpaceMin","Infinity","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","replaceWhitespace","runBidiTransform","textChunk","bidiResult","buildTextContentItem","glyphWidth","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","w0","translateTextMatrix","abs","fakeSpaces","flushTextContentItem","enqueueChunk","enqueue","ready","advance","fontNameArg","fontSizeArg","setTextRise","setHScale","setLeading","leading","moveText","isSameTextLine","translateTextLineMatrix","setLeadingMoveText","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","IDENTITY_MATRIX","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","desiredSize","AbortException","gStateFont","extractDataStructures","baseDict","toUnicodePromise","readToUnicode","cidSystemInfo","registry","ordering","supplement","readCidToGidMap","diffEncoding","isNonsymbolicFont","buildToUnicode","_buildSimpleFontToUnicode","ucs2CMapName","ucs2CMap","ucs2","cmapObj","cidToGidStream","glyphsData","glyphID","extractWidths","glyphsVMetrics","baseFontName","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","fontNameWoStyle","getSerifFonts","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","diffLength","diffBuf","diffEntry","maxCharIndex","getSymbolsFonts","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length3","type3Loaded","sent","fontData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","FILL","getOPMap","setLineWidth","numArgs","variableArgs","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","setCharWidth","setCharWidthAndBounds","beginInlineImage","beginImageData","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","_ccitt","ccittFaxDecoder","CCITTFaxDecoder","K","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","readNextChar","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","Shadings","RadialAxial","Mesh","shadingPattern","Dummy","xstep","ystep","paintType","tilingType","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","x1","y1","r1","y2","r2","distance","fnObj","createFromArray","colorStops","ratio","cssColor","makeCssRgb","background","r0","applyTransform","singularValueDecompose2dScale","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","decodeType4Shading","mesh","reader","coords","ps","verticesLeft","hasData","readFlag","coord","readCoordinate","readComponents","align","figures","decodeType5Shading","verticesPerRow","bitsPerFlag","bitsPerCoordinate","xi","yi","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","buildB","lut","t_","buildFigureFromPatch","figure","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","figureCoords","figureColors","cl","cr","c0","c1","c2","c3","bRow","bCol","newColor","decodeType6Shading","tmp4","decodeType7Shading","updateBounds","packData","coordsPacked","xy","colorsPacked","decodeContext","patchMesh","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","_arithmetic_decoder","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","decoder","getContexts","bit","decodeIAID","Int8Array","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmapTemplate0","decodingContext","contextLabel","pixel","row1","row2","bitmap","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","at","Reader","decodeMMRBitmap","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","i0","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","sltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","huffmanInput","newSymbols","currentHeight","symbolCodeLength","tableB1","symbolWidths","getStandardTable","deltaHeight","tableDeltaHeight","currentWidth","totalWidth","firstSymbol","deltaWidth","tableDeltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","symbol","bitmapSize","tableBitmapSize","byteAlign","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","bitmapWidth","symbolBitmap","exportedSymbols","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","logStripSize","stripT","tableDeltaT","firstS","deltaT","deltaFirstS","tableFirstS","currentS","currentT","symbolIDTable","applyRefinement","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","decodePatternDictionary","patternWidth","patternHeight","maxPatternIndex","collectiveWidth","patternBitmap","decodeHalftoneRegion","regionWidth","regionHeight","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","readSegmentHeader","segmentHeader","number","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","randomAccess","processSegment","visitor","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","halftoneRegion","halftoneRegionFlags","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","decodeTablesSegment","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","getSymbolDictionaryHuffmanTables","customTables","referredSymbols","onImmediateTextRegion","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","onImmediateHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","currentCode","currentTemp","standardTablesCache","currentByte","getCustomHuffmanTable","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","customIndex","tableAggregateInstances","endOfBlock","lookForEOFLimit","numBits","HINTING_ENABLED","Type1CharString","COMMAND_MAP","hstem","vstem","vmoveto","rlineto","hlineto","vlineto","rrcurveto","callsubr","flex","drop","endchar","rmoveto","hmoveto","vhcurveto","hvcurveto","lsb","flexing","encoded","wx","sbx","executeCommand","dy","sby","num2","num1","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","CHAR_STRS_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","decryptAscii","digit1","digit2","isSpecial","encrypted","isBinary","readNumberArray","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","WorkerTask","_pdf_manager","_is_node","_is_node2","_interopRequireDefault","__esModule","default","terminated","_capability","finished","finish","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","sendWithStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","cancel","readers","headersReady","port","testMessageProcessed","on","supportTransfers","postMessageTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","setVerbosityLevel","verbosity","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","workerVersion","workerHandlerName","MessageHandler","startWorkerTask","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","parseFailure","getPdfManager","pdfManagerCapability","pdfStream","cachedChunks","fullRequest","flushChunks","pdfFile","readPromise","setupDoc","onSuccess","doc","pdfInfo","onFailure","pdfManagerReady","MissingPDFException","UnexpectedResponseException","UnknownErrorException","disableCreateObjectURL","newPdfManager","page","rotatePromise","refPromise","userUnitPromise","viewPromise","results","pageNum","wrappedException","minimumStackMessage","onPull","onCancel","close","waitOn","destroy","initializeFromPort","isMessagePort","maybePort","postMessage","window","PostScriptCompiler","PostScriptEvaluator","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","PDFFunction","parseArray","CONSTRUCT_SAMPLED","CONSTRUCT_INTERPOLATED","CONSTRUCT_STICHED","CONSTRUCT_POSTSCRIPT","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","constructSampled","constructInterpolated","constructStiched","constructPostScript","typeFn","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","toMultiArray","domain","inputSize","encode","samples","xmin","xmax","ymin","ymax","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref10","fnRefs","fns","_ref11","fnsIR","rmin","rmax","_ref12","_ref13","numOutputs","numInputs","MAX_CACHE_SIZE","cache_available","cachedValue","execute","stackIndex","bound","fnDict","PostScriptStack","MAX_STACK_SIZE","initialStack","copy","roll","operator","counter","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","isCFFCIDFont","parseGlyfTable","lookupCmap","compileGlyf","cmds","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","instructionLength","numberOfPoints","points","startPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","y3","subrCode","stackClean","numSubrs","subrsBias","x0","y0","achar","bchar","glyphNameMap","gsubrsBias","noop","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","compileGlyph","compileGlyphImpl","JpxError","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","siz","XOsiz","XRsiz","Xsiz","YOsiz","YRsiz","Ysiz","calculateTileGrids","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","currentTile","layersCount","codingStyleDefaultParameters","maxDecompositionLevelsCount","decompositionLevelsCount","nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","px","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","buildPackets","blocksDimensions","bscale","resolutionSubbands","progressionOrder","packetsIterator","parseTilePackets","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","valueReady","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","gainLog2","calculate","top","transformComponents","resultImages","transformedTiles","tile0","multipleComponentTransform","fourComponents","y0items","y1items","y2items","y3items","component0","initializeTile","qcdOrQcc","QCC","QCD","COC","headerSize","lbox","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","newByte","oldByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","levelsLength","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","setNeighborsSignificance","column","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i1","decision","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","significance","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","Transform","u0","ll","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","current","beta","K_","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","eoline","rows","eoblock","codingLine","refLine","codingPos","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize"],"mappings":"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3C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,OACA93C,IAAA,SAEA83C,MAAA,OACA93C,IAAA,SAEA83C,MAAA,QACA93C,IAAA,UAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,OACA93C,IAAA,SAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,OACA93C,IAAA,SAEA83C,MAAA,MACA93C,IAAA,QAEA83C,MAAA,OACA93C,IAAA,SAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,KACA93C,IAAA,OAEA83C,MAAA,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EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,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EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,E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","file":"js/chunk-b29d5a44.8b99882b.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = require('../shared/util');\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _stream = require('./stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx = require('./jpx');\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image).catch(function (reason) {\n        (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\n        return image;\n      });\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\n\nvar AESBaseCipher = function () {\n  function AESBaseCipher() {\n    _classCallCheck(this, AESBaseCipher);\n\n    if (this.constructor === AESBaseCipher) {\n      (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\n    }\n    this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n    this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n    this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n    this._mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n      if (i < 128) {\n        this._mixCol[i] = i << 1;\n      } else {\n        this._mixCol[i] = i << 1 ^ 0x1b;\n      }\n    }\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  _createClass(AESBaseCipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\n    }\n  }, {\n    key: '_decrypt',\n    value: function _decrypt(input, key) {\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var _j = 0; _j < 16; ++_j) {\n          state[_j] = this._inv_s[state[_j]];\n        }\n        for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\n          state[_j2] ^= key[_k];\n        }\n        for (var _j3 = 0; _j3 < 16; _j3 += 4) {\n          var s0 = this._mix[state[_j3]];\n          var s1 = this._mix[state[_j3 + 1]];\n          var s2 = this._mix[state[_j3 + 2]];\n          var s3 = this._mix[state[_j3 + 3]];\n          t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n          state[_j3] = t >>> 24 & 0xFF;\n          state[_j3 + 1] = t >> 16 & 0xFF;\n          state[_j3 + 2] = t >> 8 & 0xFF;\n          state[_j3 + 3] = t & 0xFF;\n        }\n      }\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (var _j4 = 0; _j4 < 16; ++_j4) {\n        state[_j4] = this._inv_s[state[_j4]];\n        state[_j4] ^= key[_j4];\n      }\n      return state;\n    }\n  }, {\n    key: '_encrypt',\n    value: function _encrypt(input, key) {\n      var s = this._s;\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0; j < 16; ++j) {\n        state[j] ^= key[j];\n      }\n      for (var i = 1; i < this._cyclesOfRepetition; i++) {\n        for (var _j5 = 0; _j5 < 16; ++_j5) {\n          state[_j5] = s[state[_j5]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var _j6 = 0; _j6 < 16; _j6 += 4) {\n          var s0 = state[_j6 + 0];\n          var s1 = state[_j6 + 1];\n          var s2 = state[_j6 + 2];\n          var s3 = state[_j6 + 3];\n          t = s0 ^ s1 ^ s2 ^ s3;\n          state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n          state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n          state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n          state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n        }\n        for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\n          state[_j7] ^= key[k];\n        }\n      }\n      for (var _j8 = 0; _j8 < 16; ++_j8) {\n        state[_j8] = s[state[_j8]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\n        state[_j9] ^= key[_k2];\n      }\n      return state;\n    }\n  }, {\n    key: '_decryptBlock2',\n    value: function _decryptBlock2(data, finalize) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [],\n          iv = this.iv;\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        var plain = this._decrypt(buffer, this._key);\n        for (var j = 0; j < 16; ++j) {\n          plain[j] ^= iv[j];\n        }\n        iv = buffer;\n        result.push(plain);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      if (finalize) {\n        var lastBlock = result[result.length - 1];\n        var psLen = lastBlock[15];\n        if (psLen <= 16) {\n          for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\n            if (lastBlock[_i] !== psLen) {\n              psLen = 0;\n              break;\n            }\n          }\n          outputLength -= psLen;\n          result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n        }\n      }\n      var output = new Uint8Array(outputLength);\n      for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\n        output.set(result[_i2], _j10);\n      }\n      return output;\n    }\n  }, {\n    key: 'decryptBlock',\n    value: function decryptBlock(data, finalize) {\n      var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array(0);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = this._decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    }\n  }, {\n    key: 'encrypt',\n    value: function encrypt(data, iv) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (var j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = this._encrypt(buffer, this._key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\n        output.set(result[_i3], _j11);\n      }\n      return output;\n    }\n  }]);\n\n  return AESBaseCipher;\n}();\n\nvar AES128Cipher = function (_AESBaseCipher) {\n  _inherits(AES128Cipher, _AESBaseCipher);\n\n  function AES128Cipher(key) {\n    _classCallCheck(this, AES128Cipher);\n\n    var _this = _possibleConstructorReturn(this, (AES128Cipher.__proto__ || Object.getPrototypeOf(AES128Cipher)).call(this));\n\n    _this._cyclesOfRepetition = 10;\n    _this._keySize = 160;\n    _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n    _this._key = _this._expandKey(key);\n    return _this;\n  }\n\n  _createClass(AES128Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 176;\n      var s = this._s;\n      var rcon = this._rcon;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      for (var j = 16, i = 1; j < b; ++i) {\n        var t1 = result[j - 3];\n        var t2 = result[j - 2];\n        var t3 = result[j - 1];\n        var t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ rcon[i];\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 16];\n          j++;\n          result[j] = t2 ^= result[j - 16];\n          j++;\n          result[j] = t3 ^= result[j - 16];\n          j++;\n          result[j] = t4 ^= result[j - 16];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES128Cipher;\n}(AESBaseCipher);\n\nvar AES256Cipher = function (_AESBaseCipher2) {\n  _inherits(AES256Cipher, _AESBaseCipher2);\n\n  function AES256Cipher(key) {\n    _classCallCheck(this, AES256Cipher);\n\n    var _this2 = _possibleConstructorReturn(this, (AES256Cipher.__proto__ || Object.getPrototypeOf(AES256Cipher)).call(this));\n\n    _this2._cyclesOfRepetition = 14;\n    _this2._keySize = 224;\n    _this2._key = _this2._expandKey(key);\n    return _this2;\n  }\n\n  _createClass(AES256Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 240;\n      var s = this._s;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      var r = 1;\n      var t1 = void 0,\n          t2 = void 0,\n          t3 = void 0,\n          t4 = void 0;\n      for (var j = 32, i = 1; j < b; ++i) {\n        if (j % 32 === 16) {\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n        } else if (j % 32 === 0) {\n          t1 = result[j - 3];\n          t2 = result[j - 2];\n          t3 = result[j - 1];\n          t4 = result[j - 4];\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n          t1 = t1 ^ r;\n          if ((r <<= 1) >= 256) {\n            r = (r ^ 0x1b) & 0xFF;\n          }\n        }\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 32];\n          j++;\n          result[j] = t2 ^= result[j - 32];\n          j++;\n          result[j] = t3 ^= result[j - 32];\n          j++;\n          result[j] = t4 ^= result[j - 32];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES256Cipher;\n}(AESBaseCipher);\n\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _annotation = require('./annotation');\n\nvar _crypto = require('./crypto');\n\nvar _parser = require('./parser');\n\nvar _operator_list = require('./operator_list');\n\nvar _evaluator = require('./evaluator');\n\nvar _function = require('./function');\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    _getInheritableProperty: function _getInheritableProperty(key) {\n      var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var value = (0, _util.getInheritableProperty)({\n        dict: this.pageDict,\n        key: key,\n        getArray: getArray,\n        stopWhenFound: false\n      });\n      if (!Array.isArray(value)) {\n        return value;\n      }\n      if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n        return value[0];\n      }\n      return _primitives.Dict.merge(this.xref, value);\n    },\n\n    get content() {\n      return this.pageDict.get('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this._getInheritableProperty('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this._getInheritableProperty('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.pageDict.get('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this._getInheritableProperty('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this._getInheritableProperty('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = require('../shared/util');\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _jpg = require('./jpg');\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _operator_list = require('./operator_list');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = (0, _util.getInheritableProperty)({\n            dict: dict,\n            key: 'FT'\n          });\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'V',\n      getArray: true\n    });\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DA'\n    }) || '';\n    var fieldType = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'FT'\n    });\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DR'\n    }) || _primitives.Dict.empty;\n    data.fieldFlags = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Ff'\n    });\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Q'\n    });\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'MaxLen'\n    });\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = (0, _util.getInheritableProperty)({\n      dict: params.dict,\n      key: 'Opt'\n    });\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar pdfjsVersion = '2.0.489';\nvar pdfjsBuild = '7d7bc80e';\nvar pdfjsCoreWorker = require('./core/worker.js');\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = require('../shared/util');\n\nvar _charsets = require('./charsets');\n\nvar _encodings = require('./encodings');\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = require('../shared/util');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _document = require('./document');\n\nvar _stream = require('./stream');\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('../shared/util');\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar DNLMarkerError = function DNLMarkerErrorClosure() {\n  function DNLMarkerError(message, scanLines) {\n    this.message = message;\n    this.scanLines = scanLines;\n  }\n  DNLMarkerError.prototype = new Error();\n  DNLMarkerError.prototype.name = 'DNLMarkerError';\n  DNLMarkerError.constructor = DNLMarkerError;\n  return DNLMarkerError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === 0xDC && parseDNLMarker) {\n            offset += 2;\n            var scanLines = data[offset++] << 8 | data[offset++];\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\n            }\n          }\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos) {\n    var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$dnlScanLines = _ref.dnlScanLines,\n          dnlScanLines = _ref$dnlScanLines === undefined ? null : _ref$dnlScanLines;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            var sofScanLines = readUint16();\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                (0, _util.warn)('Attempting to re-parse JPEG image using \"scanLines\" ' + 'parameter found in DNL marker (0xFFDC) segment.');\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              }\n              throw ex;\n            }\n            break;\n          case 0xFFDC:\n            offset += 4;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            var nextFileMarker = findNextFileMarker(data, offset - 2);\n            if (nextFileMarker && nextFileMarker.invalid) {\n              (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\n              offset = nextFileMarker.offset;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data.subarray(0, offset);\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data.subarray(0, offset);\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _unicode = require('./unicode');\n\nvar _font_renderer = require('./font_renderer');\n\nvar _stream = require('./stream');\n\nvar _type1_parser = require('./type1_parser');\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (!VALID_TABLES.includes(table.tag)) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 4;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!chunksToRequest.includes(chunk)) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _stream = require('./stream');\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embeddedUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embeddedUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embeddedUseCMap) {\n      useCMap = embeddedUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (!BUILT_IN_CMAPS.includes(name)) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _crypto = require('./crypto');\n\nvar _colorspace = require('./colorspace');\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          if (labelDict.has('S')) {\n            var s = labelDict.get('S');\n            if (!(0, _primitives.isName)(s)) {\n              throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n            }\n            style = s.name;\n          } else {\n            style = null;\n          }\n          if (labelDict.has('P')) {\n            var p = labelDict.get('P');\n            if (!(0, _util.isString)(p)) {\n              throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n            }\n            prefix = (0, _util.stringToPDFString)(p);\n          } else {\n            prefix = '';\n          }\n          if (labelDict.has('St')) {\n            var st = labelDict.get('St');\n            if (!(Number.isInteger(st) && st >= 1)) {\n              throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n            }\n            currentIndex = st;\n          } else {\n            currentIndex = 1;\n          }\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n            currentLabel = '';\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          if (Number.isInteger(count) && count >= 0) {\n            var objId = currentNode.objId;\n            if (objId && !pageKidsCountCache.has(objId)) {\n              pageKidsCountCache.put(objId, count);\n            }\n            if (currentPageIndex + count <= pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\n              if (currentPageIndex === pageIndex) {\n                capability.resolve([currentNode, null]);\n                return;\n              }\n              currentPageIndex++;\n              continue;\n            }\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (!(0, _primitives.isDict)(kid)) {\n                throw new _util.FormatError('kid node must be a Dict.');\n              }\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = require('../shared/util');\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\u00A8'] = '\\u0020\\u0308';\n  t['\\u00AF'] = '\\u0020\\u0304';\n  t['\\u00B4'] = '\\u0020\\u0301';\n  t['\\u00B5'] = '\\u03BC';\n  t['\\u00B8'] = '\\u0020\\u0327';\n  t['\\u0132'] = '\\u0049\\u004A';\n  t['\\u0133'] = '\\u0069\\u006A';\n  t['\\u013F'] = '\\u004C\\u00B7';\n  t['\\u0140'] = '\\u006C\\u00B7';\n  t['\\u0149'] = '\\u02BC\\u006E';\n  t['\\u017F'] = '\\u0073';\n  t['\\u01C4'] = '\\u0044\\u017D';\n  t['\\u01C5'] = '\\u0044\\u017E';\n  t['\\u01C6'] = '\\u0064\\u017E';\n  t['\\u01C7'] = '\\u004C\\u004A';\n  t['\\u01C8'] = '\\u004C\\u006A';\n  t['\\u01C9'] = '\\u006C\\u006A';\n  t['\\u01CA'] = '\\u004E\\u004A';\n  t['\\u01CB'] = '\\u004E\\u006A';\n  t['\\u01CC'] = '\\u006E\\u006A';\n  t['\\u01F1'] = '\\u0044\\u005A';\n  t['\\u01F2'] = '\\u0044\\u007A';\n  t['\\u01F3'] = '\\u0064\\u007A';\n  t['\\u02D8'] = '\\u0020\\u0306';\n  t['\\u02D9'] = '\\u0020\\u0307';\n  t['\\u02DA'] = '\\u0020\\u030A';\n  t['\\u02DB'] = '\\u0020\\u0328';\n  t['\\u02DC'] = '\\u0020\\u0303';\n  t['\\u02DD'] = '\\u0020\\u030B';\n  t['\\u037A'] = '\\u0020\\u0345';\n  t['\\u0384'] = '\\u0020\\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = '\\u0061\\u02BE';\n  t['\\u1FBD'] = '\\u0020\\u0313';\n  t['\\u1FBF'] = '\\u0020\\u0313';\n  t['\\u1FC0'] = '\\u0020\\u0342';\n  t['\\u1FFE'] = '\\u0020\\u0314';\n  t['\\u2002'] = '\\u0020';\n  t['\\u2003'] = '\\u0020';\n  t['\\u2004'] = '\\u0020';\n  t['\\u2005'] = '\\u0020';\n  t['\\u2006'] = '\\u0020';\n  t['\\u2008'] = '\\u0020';\n  t['\\u2009'] = '\\u0020';\n  t['\\u200A'] = '\\u0020';\n  t['\\u2017'] = '\\u0020\\u0333';\n  t['\\u2024'] = '\\u002E';\n  t['\\u2025'] = '\\u002E\\u002E';\n  t['\\u2026'] = '\\u002E\\u002E\\u002E';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '\\u0021\\u0021';\n  t['\\u203E'] = '\\u0020\\u0305';\n  t['\\u2047'] = '\\u003F\\u003F';\n  t['\\u2048'] = '\\u003F\\u0021';\n  t['\\u2049'] = '\\u0021\\u003F';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = '\\u0020';\n  t['\\u20A8'] = '\\u0052\\u0073';\n  t['\\u2100'] = '\\u0061\\u002F\\u0063';\n  t['\\u2101'] = '\\u0061\\u002F\\u0073';\n  t['\\u2103'] = '\\u00B0\\u0043';\n  t['\\u2105'] = '\\u0063\\u002F\\u006F';\n  t['\\u2106'] = '\\u0063\\u002F\\u0075';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\u00B0\\u0046';\n  t['\\u2116'] = '\\u004E\\u006F';\n  t['\\u2121'] = '\\u0054\\u0045\\u004C';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = '\\u0046\\u0041\\u0058';\n  t['\\u2160'] = '\\u0049';\n  t['\\u2161'] = '\\u0049\\u0049';\n  t['\\u2162'] = '\\u0049\\u0049\\u0049';\n  t['\\u2163'] = '\\u0049\\u0056';\n  t['\\u2164'] = '\\u0056';\n  t['\\u2165'] = '\\u0056\\u0049';\n  t['\\u2166'] = '\\u0056\\u0049\\u0049';\n  t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n  t['\\u2168'] = '\\u0049\\u0058';\n  t['\\u2169'] = '\\u0058';\n  t['\\u216A'] = '\\u0058\\u0049';\n  t['\\u216B'] = '\\u0058\\u0049\\u0049';\n  t['\\u216C'] = '\\u004C';\n  t['\\u216D'] = '\\u0043';\n  t['\\u216E'] = '\\u0044';\n  t['\\u216F'] = '\\u004D';\n  t['\\u2170'] = '\\u0069';\n  t['\\u2171'] = '\\u0069\\u0069';\n  t['\\u2172'] = '\\u0069\\u0069\\u0069';\n  t['\\u2173'] = '\\u0069\\u0076';\n  t['\\u2174'] = '\\u0076';\n  t['\\u2175'] = '\\u0076\\u0069';\n  t['\\u2176'] = '\\u0076\\u0069\\u0069';\n  t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n  t['\\u2178'] = '\\u0069\\u0078';\n  t['\\u2179'] = '\\u0078';\n  t['\\u217A'] = '\\u0078\\u0069';\n  t['\\u217B'] = '\\u0078\\u0069\\u0069';\n  t['\\u217C'] = '\\u006C';\n  t['\\u217D'] = '\\u0063';\n  t['\\u217E'] = '\\u0064';\n  t['\\u217F'] = '\\u006D';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '\\u0028\\u0031\\u0029';\n  t['\\u2475'] = '\\u0028\\u0032\\u0029';\n  t['\\u2476'] = '\\u0028\\u0033\\u0029';\n  t['\\u2477'] = '\\u0028\\u0034\\u0029';\n  t['\\u2478'] = '\\u0028\\u0035\\u0029';\n  t['\\u2479'] = '\\u0028\\u0036\\u0029';\n  t['\\u247A'] = '\\u0028\\u0037\\u0029';\n  t['\\u247B'] = '\\u0028\\u0038\\u0029';\n  t['\\u247C'] = '\\u0028\\u0039\\u0029';\n  t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n  t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n  t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n  t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n  t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n  t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n  t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n  t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n  t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n  t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n  t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n  t['\\u2488'] = '\\u0031\\u002E';\n  t['\\u2489'] = '\\u0032\\u002E';\n  t['\\u248A'] = '\\u0033\\u002E';\n  t['\\u248B'] = '\\u0034\\u002E';\n  t['\\u248C'] = '\\u0035\\u002E';\n  t['\\u248D'] = '\\u0036\\u002E';\n  t['\\u248E'] = '\\u0037\\u002E';\n  t['\\u248F'] = '\\u0038\\u002E';\n  t['\\u2490'] = '\\u0039\\u002E';\n  t['\\u2491'] = '\\u0031\\u0030\\u002E';\n  t['\\u2492'] = '\\u0031\\u0031\\u002E';\n  t['\\u2493'] = '\\u0031\\u0032\\u002E';\n  t['\\u2494'] = '\\u0031\\u0033\\u002E';\n  t['\\u2495'] = '\\u0031\\u0034\\u002E';\n  t['\\u2496'] = '\\u0031\\u0035\\u002E';\n  t['\\u2497'] = '\\u0031\\u0036\\u002E';\n  t['\\u2498'] = '\\u0031\\u0037\\u002E';\n  t['\\u2499'] = '\\u0031\\u0038\\u002E';\n  t['\\u249A'] = '\\u0031\\u0039\\u002E';\n  t['\\u249B'] = '\\u0032\\u0030\\u002E';\n  t['\\u249C'] = '\\u0028\\u0061\\u0029';\n  t['\\u249D'] = '\\u0028\\u0062\\u0029';\n  t['\\u249E'] = '\\u0028\\u0063\\u0029';\n  t['\\u249F'] = '\\u0028\\u0064\\u0029';\n  t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n  t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n  t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n  t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n  t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n  t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n  t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n  t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n  t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n  t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n  t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n  t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n  t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n  t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n  t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n  t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n  t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n  t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n  t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n  t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n  t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n  t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n  t['\\u2A75'] = '\\u003D\\u003D';\n  t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = '\\u0020\\u3099';\n  t['\\u309C'] = '\\u0020\\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '\\u0028\\u1100\\u0029';\n  t['\\u3201'] = '\\u0028\\u1102\\u0029';\n  t['\\u3202'] = '\\u0028\\u1103\\u0029';\n  t['\\u3203'] = '\\u0028\\u1105\\u0029';\n  t['\\u3204'] = '\\u0028\\u1106\\u0029';\n  t['\\u3205'] = '\\u0028\\u1107\\u0029';\n  t['\\u3206'] = '\\u0028\\u1109\\u0029';\n  t['\\u3207'] = '\\u0028\\u110B\\u0029';\n  t['\\u3208'] = '\\u0028\\u110C\\u0029';\n  t['\\u3209'] = '\\u0028\\u110E\\u0029';\n  t['\\u320A'] = '\\u0028\\u110F\\u0029';\n  t['\\u320B'] = '\\u0028\\u1110\\u0029';\n  t['\\u320C'] = '\\u0028\\u1111\\u0029';\n  t['\\u320D'] = '\\u0028\\u1112\\u0029';\n  t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n  t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n  t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n  t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n  t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n  t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n  t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n  t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n  t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n  t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n  t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n  t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n  t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n  t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n  t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n  t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n  t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n  t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n  t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n  t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n  t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n  t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n  t['\\u3225'] = '\\u0028\\u516D\\u0029';\n  t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n  t['\\u3227'] = '\\u0028\\u516B\\u0029';\n  t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n  t['\\u3229'] = '\\u0028\\u5341\\u0029';\n  t['\\u322A'] = '\\u0028\\u6708\\u0029';\n  t['\\u322B'] = '\\u0028\\u706B\\u0029';\n  t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n  t['\\u322D'] = '\\u0028\\u6728\\u0029';\n  t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n  t['\\u322F'] = '\\u0028\\u571F\\u0029';\n  t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n  t['\\u3231'] = '\\u0028\\u682A\\u0029';\n  t['\\u3232'] = '\\u0028\\u6709\\u0029';\n  t['\\u3233'] = '\\u0028\\u793E\\u0029';\n  t['\\u3234'] = '\\u0028\\u540D\\u0029';\n  t['\\u3235'] = '\\u0028\\u7279\\u0029';\n  t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n  t['\\u3237'] = '\\u0028\\u795D\\u0029';\n  t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n  t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n  t['\\u323A'] = '\\u0028\\u547C\\u0029';\n  t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n  t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n  t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n  t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n  t['\\u323F'] = '\\u0028\\u5354\\u0029';\n  t['\\u3240'] = '\\u0028\\u796D\\u0029';\n  t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n  t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n  t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n  t['\\u32C0'] = '\\u0031\\u6708';\n  t['\\u32C1'] = '\\u0032\\u6708';\n  t['\\u32C2'] = '\\u0033\\u6708';\n  t['\\u32C3'] = '\\u0034\\u6708';\n  t['\\u32C4'] = '\\u0035\\u6708';\n  t['\\u32C5'] = '\\u0036\\u6708';\n  t['\\u32C6'] = '\\u0037\\u6708';\n  t['\\u32C7'] = '\\u0038\\u6708';\n  t['\\u32C8'] = '\\u0039\\u6708';\n  t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n  t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n  t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n  t['\\u3358'] = '\\u0030\\u70B9';\n  t['\\u3359'] = '\\u0031\\u70B9';\n  t['\\u335A'] = '\\u0032\\u70B9';\n  t['\\u335B'] = '\\u0033\\u70B9';\n  t['\\u335C'] = '\\u0034\\u70B9';\n  t['\\u335D'] = '\\u0035\\u70B9';\n  t['\\u335E'] = '\\u0036\\u70B9';\n  t['\\u335F'] = '\\u0037\\u70B9';\n  t['\\u3360'] = '\\u0038\\u70B9';\n  t['\\u3361'] = '\\u0039\\u70B9';\n  t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n  t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n  t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n  t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n  t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n  t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n  t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n  t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n  t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n  t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n  t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n  t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n  t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n  t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n  t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n  t['\\u33E0'] = '\\u0031\\u65E5';\n  t['\\u33E1'] = '\\u0032\\u65E5';\n  t['\\u33E2'] = '\\u0033\\u65E5';\n  t['\\u33E3'] = '\\u0034\\u65E5';\n  t['\\u33E4'] = '\\u0035\\u65E5';\n  t['\\u33E5'] = '\\u0036\\u65E5';\n  t['\\u33E6'] = '\\u0037\\u65E5';\n  t['\\u33E7'] = '\\u0038\\u65E5';\n  t['\\u33E8'] = '\\u0039\\u65E5';\n  t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n  t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n  t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n  t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n  t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n  t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n  t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n  t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n  t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n  t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n  t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n  t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n  t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n  t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n  t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n  t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n  t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n  t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n  t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n  t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n  t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n  t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n  t['\\uFB00'] = '\\u0066\\u0066';\n  t['\\uFB01'] = '\\u0066\\u0069';\n  t['\\uFB02'] = '\\u0066\\u006C';\n  t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n  t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n  t['\\uFB05'] = '\\u017F\\u0074';\n  t['\\uFB06'] = '\\u0073\\u0074';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n  t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n  t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n  t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n  t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n  t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '\\u005F';\n  t['\\uFE4E'] = '\\u005F';\n  t['\\uFE4F'] = '\\u005F';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = require('./stream');\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ccitt_stream = require('./ccitt_stream');\n\nvar _jbig2_stream = require('./jbig2_stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx_stream = require('./jpx_stream');\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar MAX_ADLER32_LENGTH = 5552;\nfunction computeAdler32(bytes) {\n  var bytesLength = bytes.length;\n  if (bytesLength >= MAX_ADLER32_LENGTH) {\n    throw new Error('computeAdler32: The input is too large.');\n  }\n  var a = 1,\n      b = 0;\n  for (var i = 0; i < bytesLength; ++i) {\n    a += bytes[i] & 0xFF;\n    b += a;\n  }\n  return b % 65521 << 16 | a % 65521;\n}\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref),\n          dictLength = void 0;\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      if (lexer.beginInlineImagePos !== -1) {\n        dictLength = stream.pos - lexer.beginInlineImagePos;\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length = void 0;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var cacheKey = void 0;\n      if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var initialStreamPos = stream.pos;\n        stream.pos = lexer.beginInlineImagePos;\n        var dictBytes = stream.getBytes(dictLength);\n        stream.pos = initialStreamPos;\n        cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\n        var cacheEntry = this.imageCache[cacheKey];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (cacheKey !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\n        this.imageCache[cacheKey] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n    this.beginInlineImagePos = -1;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      if (str === 'BI') {\n        this.beginInlineImagePos = this.stream.pos;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cmap = require('./cmap');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _fonts = require('./fonts');\n\nvar _encodings = require('./encodings');\n\nvar _unicode = require('./unicode');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _pattern = require('./pattern');\n\nvar _parser = require('./parser');\n\nvar _bidi = require('./bidi');\n\nvar _colorspace = require('./colorspace');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _metrics = require('./metrics');\n\nvar _function = require('./function');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _murmurhash = require('./murmurhash3');\n\nvar _operator_list = require('./operator_list');\n\nvar _image = require('./image');\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\n        var data = _ref2.data,\n            width = _ref2.width,\n            height = _ref2.height;\n\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref3) {\n    var _this = this;\n\n    var pdfManager = _ref3.pdfManager,\n        xref = _ref3.xref,\n        handler = _ref3.handler,\n        pageIndex = _ref3.pageIndex,\n        idFactory = _ref3.idFactory,\n        fontCache = _ref3.fontCache,\n        builtInCMapCache = _ref3.builtInCMapCache,\n        _ref3$options = _ref3.options,\n        options = _ref3$options === undefined ? null : _ref3$options,\n        pdfFunctionFactory = _ref3.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function buildPaintImageXObject(_ref4) {\n      var _this2 = this;\n\n      var resources = _ref4.resources,\n          image = _ref4.image,\n          _ref4$isInline = _ref4.isInline,\n          isInline = _ref4$isInline === undefined ? false : _ref4$isInline,\n          operatorList = _ref4.operatorList,\n          cacheKey = _ref4.cacheKey,\n          imageCache = _ref4.imageCache,\n          _ref4$forceDisableNat = _ref4.forceDisableNativeImageDecoder,\n          forceDisableNativeImageDecoder = _ref4$forceDisableNat === undefined ? false : _ref4$forceDisableNat;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return Promise.resolve();\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return Promise.resolve();\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return Promise.resolve();\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: isInline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return Promise.resolve();\n      }\n      var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\n          operatorList.addDependency(objId);\n          args = [objId, w, h];\n          operatorList.addOp(_util.OPS.paintJpegXObject, args);\n          if (cacheKey) {\n            imageCache[cacheKey] = {\n              fn: _util.OPS.paintJpegXObject,\n              args: args\n            };\n          }\n        }, function (reason) {\n          (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\n          return _this2.buildPaintImageXObject({\n            resources: resources,\n            image: image,\n            isInline: isInline,\n            operatorList: operatorList,\n            cacheKey: cacheKey,\n            imageCache: imageCache,\n            forceDisableNativeImageDecoder: true\n          });\n        });\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: isInline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n      return Promise.resolve();\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref5) {\n      var _this8 = this;\n\n      var stream = _ref5.stream,\n          task = _ref5.task,\n          resources = _ref5.resources,\n          operatorList = _ref5.operatorList,\n          _ref5$initialState = _ref5.initialState,\n          initialState = _ref5$initialState === undefined ? null : _ref5$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject({\n                    resources: resources,\n                    image: xobj,\n                    operatorList: operatorList,\n                    cacheKey: name,\n                    imageCache: imageCache\n                  }).then(resolveXObject, rejectXObject);\n                  return;\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              next(self.buildPaintImageXObject({\n                resources: resources,\n                image: args[0],\n                isInline: true,\n                operatorList: operatorList,\n                cacheKey: cacheKey,\n                imageCache: imageCache\n              }));\n              return;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref6) {\n      var _this9 = this;\n\n      var stream = _ref6.stream,\n          task = _ref6.task,\n          resources = _ref6.resources,\n          _ref6$stateManager = _ref6.stateManager,\n          stateManager = _ref6$stateManager === undefined ? null : _ref6$stateManager,\n          _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n          normalizeWhitespace = _ref6$normalizeWhites === undefined ? false : _ref6$normalizeWhites,\n          _ref6$combineTextItem = _ref6.combineTextItems,\n          combineTextItems = _ref6$combineTextItem === undefined ? false : _ref6$combineTextItem,\n          sink = _ref6.sink,\n          _ref6$seenStyles = _ref6.seenStyles,\n          seenStyles = _ref6$seenStyles === undefined ? Object.create(null) : _ref6$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = require('../shared/util');\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _ccitt = require('./ccitt');\n\nvar _stream = require('./stream');\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = require('../shared/util');\n\nvar _colorspace = require('./colorspace');\n\nvar _primitives = require('./primitives');\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar _jbig = require('./jbig2');\n\nvar _util = require('../shared/util');\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar _ccitt = require('./ccitt');\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = require('../shared/util');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _pdf_manager = require('./pdf_manager');\n\nvar _is_node = require('../shared/is_node');\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = require('./primitives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.489';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ps_parser = require('./ps_parser');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n      isCFFCIDFont: cff.isCIDFont,\n      fdSelect: cff.fdSelect,\n      fdArray: cff.fdArray\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font, glyphId) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop();\n            subrCode = null;\n            if (font.isCFFCIDFont) {\n              var fdIndex = font.fdSelect.getFDIndex(glyphId);\n              if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                var fontDict = font.fdArray[fdIndex],\n                    subrs = void 0;\n                if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                  subrs = fontDict.privateDict.subrsIndex.objects;\n                }\n                if (subrs) {\n                  var numSubrs = subrs.length;\n                  n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\n                  subrCode = subrs[n];\n                }\n              } else {\n                (0, _util.warn)('Invalid fd index for glyph index.');\n              }\n            } else {\n              subrCode = font.subrs[n + font.subrsBias];\n            }\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code, glyphId) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var fontMatrix = this.fontMatrix;\n      if (this.isCFFCIDFont) {\n        var fdIndex = this.fdSelect.getFDIndex(glyphId);\n        if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n          var fontDict = this.fdArray[fdIndex];\n          fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\n        } else {\n          (0, _util.warn)('Invalid fd index for glyph index.');\n        }\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds, glyphId);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    this.isCFFCIDFont = cffInfo.isCFFCIDFont;\n    this.fdSelect = cffInfo.fdSelect;\n    this.fdArray = cffInfo.fdArray;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds, glyphId) {\n      compileCharString(code, cmds, this, glyphId);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push('verticallyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = require('../shared/util');\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = require('./stream');\n\nvar _jpx = require('./jpx');\n\nvar _util = require('../shared/util');\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;"],"sourceRoot":""}